LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tasks mentioned above, and should be made readily avail-
able  to  the  relevant  stakeholders  for  further  analysis  and 
hence  the  contribution  towards  continuous  improvement 
“Kaizen”  to  pursuit  perfection  and  conveyed  in  the  con-
stant “change for the better” [18, 29]. The basis of Kaizen 
is  relentless  reflection  which  pursuit  this  perfection,  con-

tinuously  and  iteratively  and  VAM  is  the  control  tool 
which also facilitate Kaizen in this improvement process.  
In  section  5  of  this paper, we will illustrate how 
we deployed the management systems as proposed by the 
SLAM model in the context of case study using different 
lean strategies. 

 

 

Figure 1: SLAM model 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

46

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tasks mentioned above, and should be made readily avail-
able  to  the  relevant  stakeholders  for  further  analysis  and 
hence  the  contribution  towards  continuous  improvement 
“Kaizen”  to  pursuit  perfection  and  conveyed  in  the  con-
stant “change for the better” [18, 29]. The basis of Kaizen 
is  relentless  reflection  which  pursuit  this  perfection,  con-

tinuously  and  iteratively  and  VAM  is  the  control  tool 
which also facilitate Kaizen in this improvement process.  
In  section  5  of  this paper, we will illustrate how 
we deployed the management systems as proposed by the 
SLAM model in the context of case study using different 
lean strategies. 

 

 

Figure 1: SLAM model 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

46

RESEARCH METHODOLOGY 

Following Eisenhardt [33], a qualitative and sin-
gle case study approach for this phase of the research was 
chosen primarily to provide rich data to other researchers 
and  an  opportunity  to  analyze  management  decision  pro-
cesses  of  deciding  how,  what,  and  when  to  apply  SCM 
process facilitated by an internal cloud service provider.  

The case study was unique and complex because 
of  the  coexistence  of  parallel  operational  levels,  such  as, 
program,  platform  and  vender  etc.  with  their  own associ-
ated  management  systems.  Also  the  involved  software 
venders’ teams were using different software development 
methodologies such as, Agile and Plan driven.  The chal-
lenge was to maintain this parallel operational momentum 
with hybrid venders to deliver an integrated product as per 
defined  project  milestones.  Thus,  in  order  to  understand 
what strategies were taken by each operational level man-
agers  to  establish  governance  through  SCM  in  a  cloud 
computing environment, it was deemed essential to pursue 
an  in-depth  look  into  why  and  how  of  the  phenomenon 
[34].  

After  selecting  the  site  and  gained  access  to  the 
case study environment, we developed our research proto-
col, entered the field, analyzed the data, and enfolded the 
literature until closure was researched.  Data was collected 
using  multiple  methods,  including  semi-structured  inter-
views, kanban meeting observations, inspection of internal 
documents, and archival of project data [33, 34]. 

During  the  case  study,  we  interviewed  SCM  re-
sources,  developers,  project  managers,  business  analysts, 
and program level executives. We developed an interview 
protocol  (available  from  the  authors  on  request)  prior  to 
entering  the  field.  We  derived  this  protocol  by  devising 
questions about various management systems (as shown in 
Figure 1), their perceived importance for governance, and 
applicability of lean principles and associated lean tools in 
the  case  study  context  [11,  12,  18,  19,  30,  32,  35].  We 
also  used  a  Delphi  technique  to  received  feedback  and 
enhancements  regarding  protocol  from  our  case  study 
colleagues [36].  

Semi-structured interview format was followed to 
produce  consistent  information  across  the  participants 
while  also  remaining  open  to  explore  each  interviewee’s 
unique perspective. These interviews lasted between 15 to 
45 minutes, and were either recorded during the session or 
extensive notes were taken after the interviews.  

Along with the interviews, we also attended mul-
tiple daily kanban meetings, weekly platform status review 
meetings,  and  monthly  program  status  meetings.  The  ob-
servations  from  these  meetings  helped  to  increase  our 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

understanding  of  lean  principles  and  associated  tools  im-
plementation  in  the  case  study  environment.  During  and 
after interviews, we also gathered supplementary material 
including  program  technical  implementation  plans,  soft-
ware configuration management plans etc. explaining var-
ious case study policies, principles and processes.    

At defined milestones in the case study, we con-
tinuously  kept  categorizing  the  collected  data,  based  on 
the  lean  principles,  associated  lean  tools,  and  linking  it 
with  management  systems  as  proposed  by  the  SLAM 
model (Figure 1). Such an iteration between field data and 
data  analysis  is  consider  important  for  the  case  study  re-
search process [33, 34]. Such a recursive process permits 
researchers  to  empirically  ground  their  observations  and 
identify anomalies to advance the theory-building process 
[37]. 

THE CASE STUDY: PROGRAM B 

Program B, a coded name for the actual program, 
was established to build and operate new infrastructure, to 
enable  advanced  super-fast  digital  services  nation-wide. 
The program’s rollout commenced in 2010 and was com-
prised  of  design,  development,  implementation,  and  on-
going  support  and  enhancement  services  of  the  business 
and operational support systems required for the processes 
of activating, assuring and billing services.  

The  Program  B’s  technical  environment  was 
based  on  infrastructure  using  virtual  servers  in  a  hybrid 
cloud  computing  environment  (as  shown  in  Figure  2). 
Before the actual provisioning of the cloud infrastructure, 
platform and related software (management systems etc.), 
appropriate measures were taken regarding privacy, trust-
worthy computing, and auditing compliance [13].  

The  virtual  servers  were  created  by  Program  B 
Data  Centre  (DC)  Engineers  (Cloud  Providers)  on  the 
demand  of  the  program  manager  who  specified  the  re-
quirements  in  an  Infrastructure  Service  Request.    Servers 
were  created  by  specifying  characteristics  such  as  CPU 
cores, memory and disk space as well as by service level 
categories as defined in the DC Service Catalogue.  Other 
Services  were  also  requested  for  databases,  network  ser-
vices  and  user  provisioning.    All management systems as 
proposed  in  section  3  and  illustrated  in  Figure  1  were 
placed  under  Program  B  Data  Centre  –  Trusted  Cloud 
Zone (as shown in Figure 2). These management systems 
were  accessible  to  the  relevant  stakeholders  via  Citrix 
gateway using Citrix virtual desktops.  

Consistency among various managed cloud com-
puting  environments  was  maintained  by  adhering  to  the 
agreed  high-level  SCM  standard  (as  documented  in  Pro-
gram  SCM  Plan)  at  all  operational  levels  of  the  program 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

47

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tasks mentioned above, and should be made readily avail-
able  to  the  relevant  stakeholders  for  further  analysis  and 
hence  the  contribution  towards  continuous  improvement 
“Kaizen”  to  pursuit  perfection  and  conveyed  in  the  con-
stant “change for the better” [18, 29]. The basis of Kaizen 
is  relentless  reflection  which  pursuit  this  perfection,  con-

tinuously  and  iteratively  and  VAM  is  the  control  tool 
which also facilitate Kaizen in this improvement process.  
In  section  5  of  this paper, we will illustrate how 
we deployed the management systems as proposed by the 
SLAM model in the context of case study using different 
lean strategies. 

 

 

Figure 1: SLAM model 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

46

RESEARCH METHODOLOGY 

Following Eisenhardt [33], a qualitative and sin-
gle case study approach for this phase of the research was 
chosen primarily to provide rich data to other researchers 
and  an  opportunity  to  analyze  management  decision  pro-
cesses  of  deciding  how,  what,  and  when  to  apply  SCM 
process facilitated by an internal cloud service provider.  

The case study was unique and complex because 
of  the  coexistence  of  parallel  operational  levels,  such  as, 
program,  platform  and  vender  etc.  with  their  own associ-
ated  management  systems.  Also  the  involved  software 
venders’ teams were using different software development 
methodologies such as, Agile and Plan driven.  The chal-
lenge was to maintain this parallel operational momentum 
with hybrid venders to deliver an integrated product as per 
defined  project  milestones.  Thus,  in  order  to  understand 
what strategies were taken by each operational level man-
agers  to  establish  governance  through  SCM  in  a  cloud 
computing environment, it was deemed essential to pursue 
an  in-depth  look  into  why  and  how  of  the  phenomenon 
[34].  

After  selecting  the  site  and  gained  access  to  the 
case study environment, we developed our research proto-
col, entered the field, analyzed the data, and enfolded the 
literature until closure was researched.  Data was collected 
using  multiple  methods,  including  semi-structured  inter-
views, kanban meeting observations, inspection of internal 
documents, and archival of project data [33, 34]. 

During  the  case  study,  we  interviewed  SCM  re-
sources,  developers,  project  managers,  business  analysts, 
and program level executives. We developed an interview 
protocol  (available  from  the  authors  on  request)  prior  to 
entering  the  field.  We  derived  this  protocol  by  devising 
questions about various management systems (as shown in 
Figure 1), their perceived importance for governance, and 
applicability of lean principles and associated lean tools in 
the  case  study  context  [11,  12,  18,  19,  30,  32,  35].  We 
also  used  a  Delphi  technique  to  received  feedback  and 
enhancements  regarding  protocol  from  our  case  study 
colleagues [36].  

Semi-structured interview format was followed to 
produce  consistent  information  across  the  participants 
while  also  remaining  open  to  explore  each  interviewee’s 
unique perspective. These interviews lasted between 15 to 
45 minutes, and were either recorded during the session or 
extensive notes were taken after the interviews.  

Along with the interviews, we also attended mul-
tiple daily kanban meetings, weekly platform status review 
meetings,  and  monthly  program  status  meetings.  The  ob-
servations  from  these  meetings  helped  to  increase  our 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

understanding  of  lean  principles  and  associated  tools  im-
plementation  in  the  case  study  environment.  During  and 
after interviews, we also gathered supplementary material 
including  program  technical  implementation  plans,  soft-
ware configuration management plans etc. explaining var-
ious case study policies, principles and processes.    

At defined milestones in the case study, we con-
tinuously  kept  categorizing  the  collected  data,  based  on 
the  lean  principles,  associated  lean  tools,  and  linking  it 
with  management  systems  as  proposed  by  the  SLAM 
model (Figure 1). Such an iteration between field data and 
data  analysis  is  consider  important  for  the  case  study  re-
search process [33, 34]. Such a recursive process permits 
researchers  to  empirically  ground  their  observations  and 
identify anomalies to advance the theory-building process 
[37]. 

THE CASE STUDY: PROGRAM B 

Program B, a coded name for the actual program, 
was established to build and operate new infrastructure, to 
enable  advanced  super-fast  digital  services  nation-wide. 
The program’s rollout commenced in 2010 and was com-
prised  of  design,  development,  implementation,  and  on-
going  support  and  enhancement  services  of  the  business 
and operational support systems required for the processes 
of activating, assuring and billing services.  

The  Program  B’s  technical  environment  was 
based  on  infrastructure  using  virtual  servers  in  a  hybrid 
cloud  computing  environment  (as  shown  in  Figure  2). 
Before the actual provisioning of the cloud infrastructure, 
platform and related software (management systems etc.), 
appropriate measures were taken regarding privacy, trust-
worthy computing, and auditing compliance [13].  

The  virtual  servers  were  created  by  Program  B 
Data  Centre  (DC)  Engineers  (Cloud  Providers)  on  the 
demand  of  the  program  manager  who  specified  the  re-
quirements  in  an  Infrastructure  Service  Request.    Servers 
were  created  by  specifying  characteristics  such  as  CPU 
cores, memory and disk space as well as by service level 
categories as defined in the DC Service Catalogue.  Other 
Services  were  also  requested  for  databases,  network  ser-
vices  and  user  provisioning.    All management systems as 
proposed  in  section  3  and  illustrated  in  Figure  1  were 
placed  under  Program  B  Data  Centre  –  Trusted  Cloud 
Zone (as shown in Figure 2). These management systems 
were  accessible  to  the  relevant  stakeholders  via  Citrix 
gateway using Citrix virtual desktops.  

Consistency among various managed cloud com-
puting  environments  was  maintained  by  adhering  to  the 
agreed  high-level  SCM  standard  (as  documented  in  Pro-
gram  SCM  Plan)  at  all  operational  levels  of  the  program 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

47

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tions in a target cloud computing environment using Citrix 
XENAPPS client SW. 

using different management systems. There were however 
few  exceptions  to  the  environment  specific  properties 
changes  that  required  direct  access  to  the  deployed  solu-

 

Figure 2: Hybrid cloud computing implementation in Program B 

 

 

 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

48

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tasks mentioned above, and should be made readily avail-
able  to  the  relevant  stakeholders  for  further  analysis  and 
hence  the  contribution  towards  continuous  improvement 
“Kaizen”  to  pursuit  perfection  and  conveyed  in  the  con-
stant “change for the better” [18, 29]. The basis of Kaizen 
is  relentless  reflection  which  pursuit  this  perfection,  con-

tinuously  and  iteratively  and  VAM  is  the  control  tool 
which also facilitate Kaizen in this improvement process.  
In  section  5  of  this paper, we will illustrate how 
we deployed the management systems as proposed by the 
SLAM model in the context of case study using different 
lean strategies. 

 

 

Figure 1: SLAM model 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

46

RESEARCH METHODOLOGY 

Following Eisenhardt [33], a qualitative and sin-
gle case study approach for this phase of the research was 
chosen primarily to provide rich data to other researchers 
and  an  opportunity  to  analyze  management  decision  pro-
cesses  of  deciding  how,  what,  and  when  to  apply  SCM 
process facilitated by an internal cloud service provider.  

The case study was unique and complex because 
of  the  coexistence  of  parallel  operational  levels,  such  as, 
program,  platform  and  vender  etc.  with  their  own associ-
ated  management  systems.  Also  the  involved  software 
venders’ teams were using different software development 
methodologies such as, Agile and Plan driven.  The chal-
lenge was to maintain this parallel operational momentum 
with hybrid venders to deliver an integrated product as per 
defined  project  milestones.  Thus,  in  order  to  understand 
what strategies were taken by each operational level man-
agers  to  establish  governance  through  SCM  in  a  cloud 
computing environment, it was deemed essential to pursue 
an  in-depth  look  into  why  and  how  of  the  phenomenon 
[34].  

After  selecting  the  site  and  gained  access  to  the 
case study environment, we developed our research proto-
col, entered the field, analyzed the data, and enfolded the 
literature until closure was researched.  Data was collected 
using  multiple  methods,  including  semi-structured  inter-
views, kanban meeting observations, inspection of internal 
documents, and archival of project data [33, 34]. 

During  the  case  study,  we  interviewed  SCM  re-
sources,  developers,  project  managers,  business  analysts, 
and program level executives. We developed an interview 
protocol  (available  from  the  authors  on  request)  prior  to 
entering  the  field.  We  derived  this  protocol  by  devising 
questions about various management systems (as shown in 
Figure 1), their perceived importance for governance, and 
applicability of lean principles and associated lean tools in 
the  case  study  context  [11,  12,  18,  19,  30,  32,  35].  We 
also  used  a  Delphi  technique  to  received  feedback  and 
enhancements  regarding  protocol  from  our  case  study 
colleagues [36].  

Semi-structured interview format was followed to 
produce  consistent  information  across  the  participants 
while  also  remaining  open  to  explore  each  interviewee’s 
unique perspective. These interviews lasted between 15 to 
45 minutes, and were either recorded during the session or 
extensive notes were taken after the interviews.  

Along with the interviews, we also attended mul-
tiple daily kanban meetings, weekly platform status review 
meetings,  and  monthly  program  status  meetings.  The  ob-
servations  from  these  meetings  helped  to  increase  our 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

understanding  of  lean  principles  and  associated  tools  im-
plementation  in  the  case  study  environment.  During  and 
after interviews, we also gathered supplementary material 
including  program  technical  implementation  plans,  soft-
ware configuration management plans etc. explaining var-
ious case study policies, principles and processes.    

At defined milestones in the case study, we con-
tinuously  kept  categorizing  the  collected  data,  based  on 
the  lean  principles,  associated  lean  tools,  and  linking  it 
with  management  systems  as  proposed  by  the  SLAM 
model (Figure 1). Such an iteration between field data and 
data  analysis  is  consider  important  for  the  case  study  re-
search process [33, 34]. Such a recursive process permits 
researchers  to  empirically  ground  their  observations  and 
identify anomalies to advance the theory-building process 
[37]. 

THE CASE STUDY: PROGRAM B 

Program B, a coded name for the actual program, 
was established to build and operate new infrastructure, to 
enable  advanced  super-fast  digital  services  nation-wide. 
The program’s rollout commenced in 2010 and was com-
prised  of  design,  development,  implementation,  and  on-
going  support  and  enhancement  services  of  the  business 
and operational support systems required for the processes 
of activating, assuring and billing services.  

The  Program  B’s  technical  environment  was 
based  on  infrastructure  using  virtual  servers  in  a  hybrid 
cloud  computing  environment  (as  shown  in  Figure  2). 
Before the actual provisioning of the cloud infrastructure, 
platform and related software (management systems etc.), 
appropriate measures were taken regarding privacy, trust-
worthy computing, and auditing compliance [13].  

The  virtual  servers  were  created  by  Program  B 
Data  Centre  (DC)  Engineers  (Cloud  Providers)  on  the 
demand  of  the  program  manager  who  specified  the  re-
quirements  in  an  Infrastructure  Service  Request.    Servers 
were  created  by  specifying  characteristics  such  as  CPU 
cores, memory and disk space as well as by service level 
categories as defined in the DC Service Catalogue.  Other 
Services  were  also  requested  for  databases,  network  ser-
vices  and  user  provisioning.    All management systems as 
proposed  in  section  3  and  illustrated  in  Figure  1  were 
placed  under  Program  B  Data  Centre  –  Trusted  Cloud 
Zone (as shown in Figure 2). These management systems 
were  accessible  to  the  relevant  stakeholders  via  Citrix 
gateway using Citrix virtual desktops.  

Consistency among various managed cloud com-
puting  environments  was  maintained  by  adhering  to  the 
agreed  high-level  SCM  standard  (as  documented  in  Pro-
gram  SCM  Plan)  at  all  operational  levels  of  the  program 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

47

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tions in a target cloud computing environment using Citrix 
XENAPPS client SW. 

using different management systems. There were however 
few  exceptions  to  the  environment  specific  properties 
changes  that  required  direct  access  to  the  deployed  solu-

 

Figure 2: Hybrid cloud computing implementation in Program B 

 

 

 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

48

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

opment  methodology  and  target  cloud  com-
puting environment. 

  Continuous  improvement  of  the 
existing capabilities: In our case study, 
during  the  initial  phase  R1,  all  associated 
work  products  and  software  changes  were 
delivered  through  the  management  systems 
capabilities  already  existed  in  the  environ-
ment  [17].  This  process  was  continuously 
improved during R2, R3A, and R3B through 
the  inputs  from  different  stakeholders  and 
measures  were  taken  to  develop  a  fully  au-
tomated, end to end traceable SCM solution 
defined  at  the  enterprise  level.    One  im-
portant  point  is  that  vendor  and  platform 
teams  continued  to  use  their  relevant  SCM 
processes at the operational level, because of 
its alignment with program goals.  Most im-
portantly SCM process was delivering value 
to  immediate  stakeholders.  Improvements 
were  made  horizontally  with  in  each  opera-
tional  level  to  automate  practices  internally, 
as  well  as,  vertically  to  integrate  their  out-
come with other operational level SCM pro-
cesses. 

Role-based perspective 

In Program B, the consultants responsible for the 
implementation  of  the  SCM  process  had  to  work  closely 
with  the  enterprise,  platform  and  vendor  level  teams  to 
understand  their  existing  SCM  capabilities  and  the  tools 
they used to perform various tasks. Similarly, close coor-
dination  was  also  kept  with  the  Program  B  Data  Centre 
representatives  for  the  provisioning  of  new  hybrid  cloud 
computing  environments  and  its  placements  in  different 
zones as presented in Figure 2.  

From  the  cloud  computing  perspective,  the  key 
difference for the implementation of SCM process was the 
coordination and sharing of various administration activi-
ties  and  the  provisioning  of  managed  cloud  computing 
environments  with  the  cloud  providers  (Program  B  Data 
Centre  team).  Using  their  services,  all  the  management 
systems  were  provisioned  under  Program  B  trusted  zone 
(Figure  2)  and  platform  and  hardware  maintenance  re-
sponsibility  (PaaS,  IaaS  etc.)  was given to them. Vender, 
platform  and  enterprise  level application (SaaS) authenti-
cation  and  authorization  was  handled  by  the  associated 
SCM or management representative. 

RESEARCH FINDINGS 

In  this  section,  we  discuss  the  findings  with  the 
help of the research investigation tools as discussed in the 
research  methodology  section.  The  findings that emerged 
from  the  analysis  of  the  data  were  categorized  into  pro-
cess-based and role-based perspectives. 

Process-based perspective 

In order to implement the end-to-end traceability 
for  the  Program  B,  “Program  Delivery  Framework”  was 
used  as  a  reference  model  to  create  an  enterprise-level 
SCM  framework,  which  was  then  enacted  by  the  vendor 
and platform delivery teams. Each of the teams had taken 
a  value-based  approach  for  the  customization  of  their 
SCM  process  by  adjusting  the  process  complexity  and 
tool  sophistication  according  to  the  traceability  require-
ments  defined by the “Program Delivery Framework” [9-
12, 19]. 

Following were the three key lean strategies tak-

en: 

  Empowering  teams:  Team  empower-
ment  has  been  recognized  as  an  effective 
way of helping organizations to respond rap-
idly to environmental changes, such as those 
initiated  by  customers  [38].  This  strategy  in 
our  case  study  helped  in  building  the  confi-
dence of the delivery teams as well as the in-
tegration teams and created a culture of mu-
tual respect within the program team. It also 
facilitated in the successful migration from a 
vendor  and  platform  defined  SCM  process 
to an enterprise level SCM process in a short 
span  of  one  year  and  without  delaying  any 
program milestones. 

  Designing  simple  solution:  The  em-
phasis  was  made  to  keep  information  flow 
simple  within  the  identified  value  stream 
[39], which for this case study was, the flow 
of information between various management 
systems 
to  ensure  end-to-end  software 
change  traceability.  It  was  recommended  to 
use  existing  processes  and  tools  [17]  in  the 
environment  and  categorize  them  into  man-
agement  systems.  Each  of  the  management 
systems varied in terms of it process formali-
ty and the level of tool sophistication, but it 
was  built 
though  value-based  mind-set 
aligned with the goals of the required opera-
tional  level  and  associated  software  devel-

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

49

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tasks mentioned above, and should be made readily avail-
able  to  the  relevant  stakeholders  for  further  analysis  and 
hence  the  contribution  towards  continuous  improvement 
“Kaizen”  to  pursuit  perfection  and  conveyed  in  the  con-
stant “change for the better” [18, 29]. The basis of Kaizen 
is  relentless  reflection  which  pursuit  this  perfection,  con-

tinuously  and  iteratively  and  VAM  is  the  control  tool 
which also facilitate Kaizen in this improvement process.  
In  section  5  of  this paper, we will illustrate how 
we deployed the management systems as proposed by the 
SLAM model in the context of case study using different 
lean strategies. 

 

 

Figure 1: SLAM model 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

46

RESEARCH METHODOLOGY 

Following Eisenhardt [33], a qualitative and sin-
gle case study approach for this phase of the research was 
chosen primarily to provide rich data to other researchers 
and  an  opportunity  to  analyze  management  decision  pro-
cesses  of  deciding  how,  what,  and  when  to  apply  SCM 
process facilitated by an internal cloud service provider.  

The case study was unique and complex because 
of  the  coexistence  of  parallel  operational  levels,  such  as, 
program,  platform  and  vender  etc.  with  their  own associ-
ated  management  systems.  Also  the  involved  software 
venders’ teams were using different software development 
methodologies such as, Agile and Plan driven.  The chal-
lenge was to maintain this parallel operational momentum 
with hybrid venders to deliver an integrated product as per 
defined  project  milestones.  Thus,  in  order  to  understand 
what strategies were taken by each operational level man-
agers  to  establish  governance  through  SCM  in  a  cloud 
computing environment, it was deemed essential to pursue 
an  in-depth  look  into  why  and  how  of  the  phenomenon 
[34].  

After  selecting  the  site  and  gained  access  to  the 
case study environment, we developed our research proto-
col, entered the field, analyzed the data, and enfolded the 
literature until closure was researched.  Data was collected 
using  multiple  methods,  including  semi-structured  inter-
views, kanban meeting observations, inspection of internal 
documents, and archival of project data [33, 34]. 

During  the  case  study,  we  interviewed  SCM  re-
sources,  developers,  project  managers,  business  analysts, 
and program level executives. We developed an interview 
protocol  (available  from  the  authors  on  request)  prior  to 
entering  the  field.  We  derived  this  protocol  by  devising 
questions about various management systems (as shown in 
Figure 1), their perceived importance for governance, and 
applicability of lean principles and associated lean tools in 
the  case  study  context  [11,  12,  18,  19,  30,  32,  35].  We 
also  used  a  Delphi  technique  to  received  feedback  and 
enhancements  regarding  protocol  from  our  case  study 
colleagues [36].  

Semi-structured interview format was followed to 
produce  consistent  information  across  the  participants 
while  also  remaining  open  to  explore  each  interviewee’s 
unique perspective. These interviews lasted between 15 to 
45 minutes, and were either recorded during the session or 
extensive notes were taken after the interviews.  

Along with the interviews, we also attended mul-
tiple daily kanban meetings, weekly platform status review 
meetings,  and  monthly  program  status  meetings.  The  ob-
servations  from  these  meetings  helped  to  increase  our 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

understanding  of  lean  principles  and  associated  tools  im-
plementation  in  the  case  study  environment.  During  and 
after interviews, we also gathered supplementary material 
including  program  technical  implementation  plans,  soft-
ware configuration management plans etc. explaining var-
ious case study policies, principles and processes.    

At defined milestones in the case study, we con-
tinuously  kept  categorizing  the  collected  data,  based  on 
the  lean  principles,  associated  lean  tools,  and  linking  it 
with  management  systems  as  proposed  by  the  SLAM 
model (Figure 1). Such an iteration between field data and 
data  analysis  is  consider  important  for  the  case  study  re-
search process [33, 34]. Such a recursive process permits 
researchers  to  empirically  ground  their  observations  and 
identify anomalies to advance the theory-building process 
[37]. 

THE CASE STUDY: PROGRAM B 

Program B, a coded name for the actual program, 
was established to build and operate new infrastructure, to 
enable  advanced  super-fast  digital  services  nation-wide. 
The program’s rollout commenced in 2010 and was com-
prised  of  design,  development,  implementation,  and  on-
going  support  and  enhancement  services  of  the  business 
and operational support systems required for the processes 
of activating, assuring and billing services.  

The  Program  B’s  technical  environment  was 
based  on  infrastructure  using  virtual  servers  in  a  hybrid 
cloud  computing  environment  (as  shown  in  Figure  2). 
Before the actual provisioning of the cloud infrastructure, 
platform and related software (management systems etc.), 
appropriate measures were taken regarding privacy, trust-
worthy computing, and auditing compliance [13].  

The  virtual  servers  were  created  by  Program  B 
Data  Centre  (DC)  Engineers  (Cloud  Providers)  on  the 
demand  of  the  program  manager  who  specified  the  re-
quirements  in  an  Infrastructure  Service  Request.    Servers 
were  created  by  specifying  characteristics  such  as  CPU 
cores, memory and disk space as well as by service level 
categories as defined in the DC Service Catalogue.  Other 
Services  were  also  requested  for  databases,  network  ser-
vices  and  user  provisioning.    All management systems as 
proposed  in  section  3  and  illustrated  in  Figure  1  were 
placed  under  Program  B  Data  Centre  –  Trusted  Cloud 
Zone (as shown in Figure 2). These management systems 
were  accessible  to  the  relevant  stakeholders  via  Citrix 
gateway using Citrix virtual desktops.  

Consistency among various managed cloud com-
puting  environments  was  maintained  by  adhering  to  the 
agreed  high-level  SCM  standard  (as  documented  in  Pro-
gram  SCM  Plan)  at  all  operational  levels  of  the  program 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

47

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tions in a target cloud computing environment using Citrix 
XENAPPS client SW. 

using different management systems. There were however 
few  exceptions  to  the  environment  specific  properties 
changes  that  required  direct  access  to  the  deployed  solu-

 

Figure 2: Hybrid cloud computing implementation in Program B 

 

 

 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

48

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

opment  methodology  and  target  cloud  com-
puting environment. 

  Continuous  improvement  of  the 
existing capabilities: In our case study, 
during  the  initial  phase  R1,  all  associated 
work  products  and  software  changes  were 
delivered  through  the  management  systems 
capabilities  already  existed  in  the  environ-
ment  [17].  This  process  was  continuously 
improved during R2, R3A, and R3B through 
the  inputs  from  different  stakeholders  and 
measures  were  taken  to  develop  a  fully  au-
tomated, end to end traceable SCM solution 
defined  at  the  enterprise  level.    One  im-
portant  point  is  that  vendor  and  platform 
teams  continued  to  use  their  relevant  SCM 
processes at the operational level, because of 
its alignment with program goals.  Most im-
portantly SCM process was delivering value 
to  immediate  stakeholders.  Improvements 
were  made  horizontally  with  in  each  opera-
tional  level  to  automate  practices  internally, 
as  well  as,  vertically  to  integrate  their  out-
come with other operational level SCM pro-
cesses. 

Role-based perspective 

In Program B, the consultants responsible for the 
implementation  of  the  SCM  process  had  to  work  closely 
with  the  enterprise,  platform  and  vendor  level  teams  to 
understand  their  existing  SCM  capabilities  and  the  tools 
they used to perform various tasks. Similarly, close coor-
dination  was  also  kept  with  the  Program  B  Data  Centre 
representatives  for  the  provisioning  of  new  hybrid  cloud 
computing  environments  and  its  placements  in  different 
zones as presented in Figure 2.  

From  the  cloud  computing  perspective,  the  key 
difference for the implementation of SCM process was the 
coordination and sharing of various administration activi-
ties  and  the  provisioning  of  managed  cloud  computing 
environments  with  the  cloud  providers  (Program  B  Data 
Centre  team).  Using  their  services,  all  the  management 
systems  were  provisioned  under  Program  B  trusted  zone 
(Figure  2)  and  platform  and  hardware  maintenance  re-
sponsibility  (PaaS,  IaaS  etc.)  was given to them. Vender, 
platform  and  enterprise  level application (SaaS) authenti-
cation  and  authorization  was  handled  by  the  associated 
SCM or management representative. 

RESEARCH FINDINGS 

In  this  section,  we  discuss  the  findings  with  the 
help of the research investigation tools as discussed in the 
research  methodology  section.  The  findings that emerged 
from  the  analysis  of  the  data  were  categorized  into  pro-
cess-based and role-based perspectives. 

Process-based perspective 

In order to implement the end-to-end traceability 
for  the  Program  B,  “Program  Delivery  Framework”  was 
used  as  a  reference  model  to  create  an  enterprise-level 
SCM  framework,  which  was  then  enacted  by  the  vendor 
and platform delivery teams. Each of the teams had taken 
a  value-based  approach  for  the  customization  of  their 
SCM  process  by  adjusting  the  process  complexity  and 
tool  sophistication  according  to  the  traceability  require-
ments  defined by the “Program Delivery Framework” [9-
12, 19]. 

Following were the three key lean strategies tak-

en: 

  Empowering  teams:  Team  empower-
ment  has  been  recognized  as  an  effective 
way of helping organizations to respond rap-
idly to environmental changes, such as those 
initiated  by  customers  [38].  This  strategy  in 
our  case  study  helped  in  building  the  confi-
dence of the delivery teams as well as the in-
tegration teams and created a culture of mu-
tual respect within the program team. It also 
facilitated in the successful migration from a 
vendor  and  platform  defined  SCM  process 
to an enterprise level SCM process in a short 
span  of  one  year  and  without  delaying  any 
program milestones. 

  Designing  simple  solution:  The  em-
phasis  was  made  to  keep  information  flow 
simple  within  the  identified  value  stream 
[39], which for this case study was, the flow 
of information between various management 
systems 
to  ensure  end-to-end  software 
change  traceability.  It  was  recommended  to 
use  existing  processes  and  tools  [17]  in  the 
environment  and  categorize  them  into  man-
agement  systems.  Each  of  the  management 
systems varied in terms of it process formali-
ty and the level of tool sophistication, but it 
was  built 
though  value-based  mind-set 
aligned with the goals of the required opera-
tional  level  and  associated  software  devel-

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

49

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

CONCLUSION, IMPLICATIONS, 

AND FUTURE RESEARCH 

Having  discussed  the  findings  of  the  case  study, 
we  now  examine  their  relevance  using  the  theory  of  lean 
thinking.  We  provide  the  analysis  of  the  theoretical  un-
derpinnings behind the lean strategies taken for the appli-
cation  of  SLAM  model  in  the  Program  B’s  hybrid  cloud 

computing  environment.  Finally,  we  will  discuss  the  im-
plication of our findings in light of changing role of SCM 
Enabler  and  the  adaptable  management  systems  in  the 
cloud computing environment. 

As  shown  in  Table  2,  theory  of  lean  thinking  is 
able to comment on the strategies taken by Program B for 
the implementation of SCM process in a cloud computing 
environment. 

Table 2: Theoretical Bases for case study findings 

Benefits/Motivators 

Initial/Current Concerns 

Lessons from Theory 

 

 

Category of Findings 
Role of SCM Enabler 
in Cloud Computing 

Designing simple 

solution 

The role provide the SCM 
domain knowledge and im-
plementation of management 

systems 

Physical security of manage-
ment systems in cloud service 

providers premises and the 
application level security set-
tings by the SCM Enabler 

Migration of management 
systems from vender, and 
platform operational levels 

to enterprise level in last 

phase 

Too many differences in the 
operational levels such as, 
configuration items naming 
conventions, baseline conven-
tions, release packages names 
etc. may makes migration dif-

ficult 

Lean thinking can comment in 
this area where SCM Enabler 
need to work closely with dif-
ferent stakeholders to identify 
the value stream and then pro-
posed appropriate measures to 
address the security concerns 

Lean Thinking can comment on 
this value based mind-set which 
was applied to define the infor-
mation flow between different 
management systems. Simple 
and consistent naming conven-
tions were used to define con-
figuration items, baselines and 
release packages across all op-

erational levels. 

Theory of lean thinking empha-
size on respect of people which 
also comments on giving em-

powerments to the teams to per-
form their tasks under guiding 
principles given by the project. 

It builds a  confidence and a 
culture of mutual respect in a 

project environment 

Empowering teams 

Every team knows their in-
ternal capabilities more than 
other and it needs to be re-

spected 

External influence on the de-
livery team to make changes to 
their process for the Program 
B may affect their capability to 

deliver on time 

Continuous Im-

provement of the ex-
isting capabilities 

Rather than introducing new 
processes, tools and technol-
ogy immediately in the envi-
ronment it is better to refine 
the existing capabilities and 
introducing small pieces of 

improvements 

Too many immediate and new 
changes may affect the project 

Lean thinking can address that 
through “kaizen” which empha-

delivery deadlines 

sizes on “Challenging every-
thing” by creating an atmos-
phere of continuous learning 
and embracement of change. 

 
The implication of this paper leads us to consider 
more  theoretical  perspectives,  such  as,  dynamic  capabili-
ties  theory,  theory  of  constraints,  capabilities  learning 
loop, to look into similar case studies [7, 17, 40], existing 
software process models and framework activities are not 

going  to  be  adequate  unless  additional  roles,  such  as, 
cloud  providers  and  SCM  enablers  as  suggested  by  this 
case study are included in the process to establish govern-
ance.  This  case  study  also  suggests  the  need  to  develop 
adaptable  management  systems  through  application  of 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

50

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tasks mentioned above, and should be made readily avail-
able  to  the  relevant  stakeholders  for  further  analysis  and 
hence  the  contribution  towards  continuous  improvement 
“Kaizen”  to  pursuit  perfection  and  conveyed  in  the  con-
stant “change for the better” [18, 29]. The basis of Kaizen 
is  relentless  reflection  which  pursuit  this  perfection,  con-

tinuously  and  iteratively  and  VAM  is  the  control  tool 
which also facilitate Kaizen in this improvement process.  
In  section  5  of  this paper, we will illustrate how 
we deployed the management systems as proposed by the 
SLAM model in the context of case study using different 
lean strategies. 

 

 

Figure 1: SLAM model 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

46

RESEARCH METHODOLOGY 

Following Eisenhardt [33], a qualitative and sin-
gle case study approach for this phase of the research was 
chosen primarily to provide rich data to other researchers 
and  an  opportunity  to  analyze  management  decision  pro-
cesses  of  deciding  how,  what,  and  when  to  apply  SCM 
process facilitated by an internal cloud service provider.  

The case study was unique and complex because 
of  the  coexistence  of  parallel  operational  levels,  such  as, 
program,  platform  and  vender  etc.  with  their  own associ-
ated  management  systems.  Also  the  involved  software 
venders’ teams were using different software development 
methodologies such as, Agile and Plan driven.  The chal-
lenge was to maintain this parallel operational momentum 
with hybrid venders to deliver an integrated product as per 
defined  project  milestones.  Thus,  in  order  to  understand 
what strategies were taken by each operational level man-
agers  to  establish  governance  through  SCM  in  a  cloud 
computing environment, it was deemed essential to pursue 
an  in-depth  look  into  why  and  how  of  the  phenomenon 
[34].  

After  selecting  the  site  and  gained  access  to  the 
case study environment, we developed our research proto-
col, entered the field, analyzed the data, and enfolded the 
literature until closure was researched.  Data was collected 
using  multiple  methods,  including  semi-structured  inter-
views, kanban meeting observations, inspection of internal 
documents, and archival of project data [33, 34]. 

During  the  case  study,  we  interviewed  SCM  re-
sources,  developers,  project  managers,  business  analysts, 
and program level executives. We developed an interview 
protocol  (available  from  the  authors  on  request)  prior  to 
entering  the  field.  We  derived  this  protocol  by  devising 
questions about various management systems (as shown in 
Figure 1), their perceived importance for governance, and 
applicability of lean principles and associated lean tools in 
the  case  study  context  [11,  12,  18,  19,  30,  32,  35].  We 
also  used  a  Delphi  technique  to  received  feedback  and 
enhancements  regarding  protocol  from  our  case  study 
colleagues [36].  

Semi-structured interview format was followed to 
produce  consistent  information  across  the  participants 
while  also  remaining  open  to  explore  each  interviewee’s 
unique perspective. These interviews lasted between 15 to 
45 minutes, and were either recorded during the session or 
extensive notes were taken after the interviews.  

Along with the interviews, we also attended mul-
tiple daily kanban meetings, weekly platform status review 
meetings,  and  monthly  program  status  meetings.  The  ob-
servations  from  these  meetings  helped  to  increase  our 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

understanding  of  lean  principles  and  associated  tools  im-
plementation  in  the  case  study  environment.  During  and 
after interviews, we also gathered supplementary material 
including  program  technical  implementation  plans,  soft-
ware configuration management plans etc. explaining var-
ious case study policies, principles and processes.    

At defined milestones in the case study, we con-
tinuously  kept  categorizing  the  collected  data,  based  on 
the  lean  principles,  associated  lean  tools,  and  linking  it 
with  management  systems  as  proposed  by  the  SLAM 
model (Figure 1). Such an iteration between field data and 
data  analysis  is  consider  important  for  the  case  study  re-
search process [33, 34]. Such a recursive process permits 
researchers  to  empirically  ground  their  observations  and 
identify anomalies to advance the theory-building process 
[37]. 

THE CASE STUDY: PROGRAM B 

Program B, a coded name for the actual program, 
was established to build and operate new infrastructure, to 
enable  advanced  super-fast  digital  services  nation-wide. 
The program’s rollout commenced in 2010 and was com-
prised  of  design,  development,  implementation,  and  on-
going  support  and  enhancement  services  of  the  business 
and operational support systems required for the processes 
of activating, assuring and billing services.  

The  Program  B’s  technical  environment  was 
based  on  infrastructure  using  virtual  servers  in  a  hybrid 
cloud  computing  environment  (as  shown  in  Figure  2). 
Before the actual provisioning of the cloud infrastructure, 
platform and related software (management systems etc.), 
appropriate measures were taken regarding privacy, trust-
worthy computing, and auditing compliance [13].  

The  virtual  servers  were  created  by  Program  B 
Data  Centre  (DC)  Engineers  (Cloud  Providers)  on  the 
demand  of  the  program  manager  who  specified  the  re-
quirements  in  an  Infrastructure  Service  Request.    Servers 
were  created  by  specifying  characteristics  such  as  CPU 
cores, memory and disk space as well as by service level 
categories as defined in the DC Service Catalogue.  Other 
Services  were  also  requested  for  databases,  network  ser-
vices  and  user  provisioning.    All management systems as 
proposed  in  section  3  and  illustrated  in  Figure  1  were 
placed  under  Program  B  Data  Centre  –  Trusted  Cloud 
Zone (as shown in Figure 2). These management systems 
were  accessible  to  the  relevant  stakeholders  via  Citrix 
gateway using Citrix virtual desktops.  

Consistency among various managed cloud com-
puting  environments  was  maintained  by  adhering  to  the 
agreed  high-level  SCM  standard  (as  documented  in  Pro-
gram  SCM  Plan)  at  all  operational  levels  of  the  program 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

47

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tions in a target cloud computing environment using Citrix 
XENAPPS client SW. 

using different management systems. There were however 
few  exceptions  to  the  environment  specific  properties 
changes  that  required  direct  access  to  the  deployed  solu-

 

Figure 2: Hybrid cloud computing implementation in Program B 

 

 

 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

48

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

opment  methodology  and  target  cloud  com-
puting environment. 

  Continuous  improvement  of  the 
existing capabilities: In our case study, 
during  the  initial  phase  R1,  all  associated 
work  products  and  software  changes  were 
delivered  through  the  management  systems 
capabilities  already  existed  in  the  environ-
ment  [17].  This  process  was  continuously 
improved during R2, R3A, and R3B through 
the  inputs  from  different  stakeholders  and 
measures  were  taken  to  develop  a  fully  au-
tomated, end to end traceable SCM solution 
defined  at  the  enterprise  level.    One  im-
portant  point  is  that  vendor  and  platform 
teams  continued  to  use  their  relevant  SCM 
processes at the operational level, because of 
its alignment with program goals.  Most im-
portantly SCM process was delivering value 
to  immediate  stakeholders.  Improvements 
were  made  horizontally  with  in  each  opera-
tional  level  to  automate  practices  internally, 
as  well  as,  vertically  to  integrate  their  out-
come with other operational level SCM pro-
cesses. 

Role-based perspective 

In Program B, the consultants responsible for the 
implementation  of  the  SCM  process  had  to  work  closely 
with  the  enterprise,  platform  and  vendor  level  teams  to 
understand  their  existing  SCM  capabilities  and  the  tools 
they used to perform various tasks. Similarly, close coor-
dination  was  also  kept  with  the  Program  B  Data  Centre 
representatives  for  the  provisioning  of  new  hybrid  cloud 
computing  environments  and  its  placements  in  different 
zones as presented in Figure 2.  

From  the  cloud  computing  perspective,  the  key 
difference for the implementation of SCM process was the 
coordination and sharing of various administration activi-
ties  and  the  provisioning  of  managed  cloud  computing 
environments  with  the  cloud  providers  (Program  B  Data 
Centre  team).  Using  their  services,  all  the  management 
systems  were  provisioned  under  Program  B  trusted  zone 
(Figure  2)  and  platform  and  hardware  maintenance  re-
sponsibility  (PaaS,  IaaS  etc.)  was given to them. Vender, 
platform  and  enterprise  level application (SaaS) authenti-
cation  and  authorization  was  handled  by  the  associated 
SCM or management representative. 

RESEARCH FINDINGS 

In  this  section,  we  discuss  the  findings  with  the 
help of the research investigation tools as discussed in the 
research  methodology  section.  The  findings that emerged 
from  the  analysis  of  the  data  were  categorized  into  pro-
cess-based and role-based perspectives. 

Process-based perspective 

In order to implement the end-to-end traceability 
for  the  Program  B,  “Program  Delivery  Framework”  was 
used  as  a  reference  model  to  create  an  enterprise-level 
SCM  framework,  which  was  then  enacted  by  the  vendor 
and platform delivery teams. Each of the teams had taken 
a  value-based  approach  for  the  customization  of  their 
SCM  process  by  adjusting  the  process  complexity  and 
tool  sophistication  according  to  the  traceability  require-
ments  defined by the “Program Delivery Framework” [9-
12, 19]. 

Following were the three key lean strategies tak-

en: 

  Empowering  teams:  Team  empower-
ment  has  been  recognized  as  an  effective 
way of helping organizations to respond rap-
idly to environmental changes, such as those 
initiated  by  customers  [38].  This  strategy  in 
our  case  study  helped  in  building  the  confi-
dence of the delivery teams as well as the in-
tegration teams and created a culture of mu-
tual respect within the program team. It also 
facilitated in the successful migration from a 
vendor  and  platform  defined  SCM  process 
to an enterprise level SCM process in a short 
span  of  one  year  and  without  delaying  any 
program milestones. 

  Designing  simple  solution:  The  em-
phasis  was  made  to  keep  information  flow 
simple  within  the  identified  value  stream 
[39], which for this case study was, the flow 
of information between various management 
systems 
to  ensure  end-to-end  software 
change  traceability.  It  was  recommended  to 
use  existing  processes  and  tools  [17]  in  the 
environment  and  categorize  them  into  man-
agement  systems.  Each  of  the  management 
systems varied in terms of it process formali-
ty and the level of tool sophistication, but it 
was  built 
though  value-based  mind-set 
aligned with the goals of the required opera-
tional  level  and  associated  software  devel-

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

49

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

CONCLUSION, IMPLICATIONS, 

AND FUTURE RESEARCH 

Having  discussed  the  findings  of  the  case  study, 
we  now  examine  their  relevance  using  the  theory  of  lean 
thinking.  We  provide  the  analysis  of  the  theoretical  un-
derpinnings behind the lean strategies taken for the appli-
cation  of  SLAM  model  in  the  Program  B’s  hybrid  cloud 

computing  environment.  Finally,  we  will  discuss  the  im-
plication of our findings in light of changing role of SCM 
Enabler  and  the  adaptable  management  systems  in  the 
cloud computing environment. 

As  shown  in  Table  2,  theory  of  lean  thinking  is 
able to comment on the strategies taken by Program B for 
the implementation of SCM process in a cloud computing 
environment. 

Table 2: Theoretical Bases for case study findings 

Benefits/Motivators 

Initial/Current Concerns 

Lessons from Theory 

 

 

Category of Findings 
Role of SCM Enabler 
in Cloud Computing 

Designing simple 

solution 

The role provide the SCM 
domain knowledge and im-
plementation of management 

systems 

Physical security of manage-
ment systems in cloud service 

providers premises and the 
application level security set-
tings by the SCM Enabler 

Migration of management 
systems from vender, and 
platform operational levels 

to enterprise level in last 

phase 

Too many differences in the 
operational levels such as, 
configuration items naming 
conventions, baseline conven-
tions, release packages names 
etc. may makes migration dif-

ficult 

Lean thinking can comment in 
this area where SCM Enabler 
need to work closely with dif-
ferent stakeholders to identify 
the value stream and then pro-
posed appropriate measures to 
address the security concerns 

Lean Thinking can comment on 
this value based mind-set which 
was applied to define the infor-
mation flow between different 
management systems. Simple 
and consistent naming conven-
tions were used to define con-
figuration items, baselines and 
release packages across all op-

erational levels. 

Theory of lean thinking empha-
size on respect of people which 
also comments on giving em-

powerments to the teams to per-
form their tasks under guiding 
principles given by the project. 

It builds a  confidence and a 
culture of mutual respect in a 

project environment 

Empowering teams 

Every team knows their in-
ternal capabilities more than 
other and it needs to be re-

spected 

External influence on the de-
livery team to make changes to 
their process for the Program 
B may affect their capability to 

deliver on time 

Continuous Im-

provement of the ex-
isting capabilities 

Rather than introducing new 
processes, tools and technol-
ogy immediately in the envi-
ronment it is better to refine 
the existing capabilities and 
introducing small pieces of 

improvements 

Too many immediate and new 
changes may affect the project 

Lean thinking can address that 
through “kaizen” which empha-

delivery deadlines 

sizes on “Challenging every-
thing” by creating an atmos-
phere of continuous learning 
and embracement of change. 

 
The implication of this paper leads us to consider 
more  theoretical  perspectives,  such  as,  dynamic  capabili-
ties  theory,  theory  of  constraints,  capabilities  learning 
loop, to look into similar case studies [7, 17, 40], existing 
software process models and framework activities are not 

going  to  be  adequate  unless  additional  roles,  such  as, 
cloud  providers  and  SCM  enablers  as  suggested  by  this 
case study are included in the process to establish govern-
ance.  This  case  study  also  suggests  the  need  to  develop 
adaptable  management  systems  through  application  of 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

50

lean  thinking  and  possibly  through  other  theoretical  un-
derpinning.  Thus,  our  future  research  will  be  directed to-
wards  more  case  studies  on  adaptable  management  sys-
tems  which  may  facilitate  in  the  implementation  of  gov-
ernance especially in different cloud delivery models. 

REFERENCES 

[1] 

J.  Tao,  H.  Marten,  D.  Kramer,  and  W.  Karl,  "An 
intuitive 
for  accessing  computing 
clouds,"  Procedia  Computer  Science,  vol.  4,  pp. 
2049-2057, 2011. 

framework 

[2]  R. Buyya, C. S. Yeo, S. Venugopal, J. Broberg, and 
I.  Brandic,  "Cloud  computing  and  emerging  IT 
platforms:  Vision,  hype,  and  reality  for  delivering 
computing  as  the  5th  utility,"  Future  Generation 
computer systems, vol. 25, pp. 599-616, 2009. 

[3]  S. Marston, Z. Li, S. Bandyopadhyay, J. Zhang, and 
A.  Ghalsasi,  "Cloud  computing—The  business 
perspective,"  Decision  Support  Systems,  vol.  51, 
pp. 176-189, 2011. 

[4]  Z.  Yaming  and  L.  Haiou,  "Applications  and 
business  value  analysis  of  cloud  computing,"  in  E-
Business  and  E-Government 
(ICEE),  2011 
International Conference on, 2011, pp. 1-4. 

[5]  S.  B.  Chebrolu,  "How  Do  Cloud  Capabilities 
Impact  Various  Aspects  of  IT  Effectiveness?,"  in 
Cloud  Computing  (CLOUD),  2012  IEEE  5th 
International Conference on, 2012, pp. 932-940. 

[6]  A.  Behl,  "Emerging  security  challenges  in  cloud 
computing:  An  insight  to  cloud  security  challenges 
and 
Information  and 
Communication  Technologies  (WICT),  2011 World 
Congress on, 2011, pp. 217-222. 

their  mitigation," 

in 

computing 

[7]  R. Guha and D. Al-Dabass, "Impact of web 2.0 and 
software 
cloud 
engineering,"  in  Electronic  System  Design  (ISED), 
2010  International  Symposium  on,  2010,  pp.  213-
218. 

platform 

on 

[8]  R.  E.  Raygan,  "Configuration  management  in  a 
system-of-systems 
IT 
services," in Engineering Management Conference, 
2007 IEEE International, 2007, pp. 330-335. 

environment  delivering 

[9]  B. Appleton, S. Berczuk, and R. Cowham. (2007 ). 
Lean-Agile  Traceability:  Strategies  and  Solutions. 
Available: www.is.gd/2zWy3u 

[10]  B.  Appleton  and  R.  Cowham,  "Defining  Agile 

SCM: Past, Present & Future," CM Journal., 2008. 

[11]  C.  Larman  and  B.  Vodde,  "Scaling  Lean  &  Agile 
Development," Organization, vol. 230, p. 11, 2009. 
[12]  J.  P.  Womack  and  D.  T.  Jones,  "Lean  thinking: 
in  your 

create  wealth 

Banish  waste 

and 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

organisation,"  Simon  and  Shuster,  New  York,  NY, 
vol. 397, 1996. 

[13]  H.  Al-Aqrabi,  L.  Liu,  J.  Xu,  R.  Hill,  N. 
Antonopoulos,  and  Y.  Zhan,  "Investigation  of  IT 
Security and Compliance Challenges in Security-as-
a-Service 
in 
Real-Time 
Object/Component/Service-Oriented 
Distributed  Computing  Workshops 
(ISORCW), 
2012 15th IEEE International Symposium on, 2012, 
pp. 124-129. 

Computing," 

Cloud 

for 

[14]  Y.  Xin-yu  and  L.  Wei-jia,  "Research  and 
application of the management and control platform 
oriented  the  cloud  manufacturing  services,"  in 
System 
and 
(ICSEM),  2011 
Manufacturing 
International Conference on, 2011, pp. 286-289. 

Science,  Engineering  Design 

Informatization 

[15]  A.  Ross  and  D.  Francis,  "Lean  is  not  enough  [lean 
manufacturing],"  Manufacturing  Engineer,  vol.  82, 
pp. 14-17, 2003. 

[16]  M.  Adams,  P.  Componation,  H.  Czarnecki,  and  B. 
J.  Schroer,  "Simulation  as  a  tool  for  continuous 
process  improvement,"  in  Simulation  Conference 
Proceedings, 1999 Winter, 1999, pp. 766-773. 

[17]  R. Andreu and C. Ciborra, "Organisational learning 
and  core  capabilities  development:  the  role  of  IT," 
The  Journal  of  Strategic  Information  Systems,  vol. 
5, pp. 111-127, 1996. 

[18]  J.  Liker,  The  Toyota  Way—14  Management 
Principles 
Greatest 
Manufacturer. New York, NY: McGraw-Hill, 2004. 
[19]  M.  Poppendieck,  "Principles  of  lean  thinking,"  IT 

the  World’s 

from 

Management Select, p. 18, 2011. 

[20]  U.  K.  Durrani,  J.  Richardson,  J.  Lenarcic,  and  Z. 
Pita,  "Lean  traceability  solution  through  SLAM 
model:A  case  study  of  a  hybrid  delivery  team  in  a 
hybrid  cloud  computing  environment,"  in  press, 
2013. 

[21]  Y.  Jadeja  and  K.  Modi,  "Cloud  computing-
in 
Electrical 
International 

concepts, 
Computing, 
Technologies 
2012 
Conference on, 2012, pp. 877-880. 

Electronics 
(ICCEET), 

challenges," 

architecture 

and 

and 

[22]  P.  Mell  and  T.  Grance,  "The  NIST  definition  of 
cloud  computing,  2009,"  URL  http://www.  nist. 
gov/itl/cloud/upload/cloud-def-v15. pdf, 2012. 

[23]  M. Armbrust, A. Fox, R. Griffith, A. D. Joseph, R. 
Katz,  A.  Konwinski,  G.  Lee,  D.  Patterson,  A. 
Rabkin,  and 
I.  Stoica,  "A  view  of  cloud 
computing,"  Communications  of  the ACM, vol. 53, 
pp. 50-58, 2010. 

[24]  P.  Kalagiakos  and  P.  Karampelas, 

"Cloud 
computing  learning,"  in Application of Information 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

51

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tasks mentioned above, and should be made readily avail-
able  to  the  relevant  stakeholders  for  further  analysis  and 
hence  the  contribution  towards  continuous  improvement 
“Kaizen”  to  pursuit  perfection  and  conveyed  in  the  con-
stant “change for the better” [18, 29]. The basis of Kaizen 
is  relentless  reflection  which  pursuit  this  perfection,  con-

tinuously  and  iteratively  and  VAM  is  the  control  tool 
which also facilitate Kaizen in this improvement process.  
In  section  5  of  this paper, we will illustrate how 
we deployed the management systems as proposed by the 
SLAM model in the context of case study using different 
lean strategies. 

 

 

Figure 1: SLAM model 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

46

RESEARCH METHODOLOGY 

Following Eisenhardt [33], a qualitative and sin-
gle case study approach for this phase of the research was 
chosen primarily to provide rich data to other researchers 
and  an  opportunity  to  analyze  management  decision  pro-
cesses  of  deciding  how,  what,  and  when  to  apply  SCM 
process facilitated by an internal cloud service provider.  

The case study was unique and complex because 
of  the  coexistence  of  parallel  operational  levels,  such  as, 
program,  platform  and  vender  etc.  with  their  own associ-
ated  management  systems.  Also  the  involved  software 
venders’ teams were using different software development 
methodologies such as, Agile and Plan driven.  The chal-
lenge was to maintain this parallel operational momentum 
with hybrid venders to deliver an integrated product as per 
defined  project  milestones.  Thus,  in  order  to  understand 
what strategies were taken by each operational level man-
agers  to  establish  governance  through  SCM  in  a  cloud 
computing environment, it was deemed essential to pursue 
an  in-depth  look  into  why  and  how  of  the  phenomenon 
[34].  

After  selecting  the  site  and  gained  access  to  the 
case study environment, we developed our research proto-
col, entered the field, analyzed the data, and enfolded the 
literature until closure was researched.  Data was collected 
using  multiple  methods,  including  semi-structured  inter-
views, kanban meeting observations, inspection of internal 
documents, and archival of project data [33, 34]. 

During  the  case  study,  we  interviewed  SCM  re-
sources,  developers,  project  managers,  business  analysts, 
and program level executives. We developed an interview 
protocol  (available  from  the  authors  on  request)  prior  to 
entering  the  field.  We  derived  this  protocol  by  devising 
questions about various management systems (as shown in 
Figure 1), their perceived importance for governance, and 
applicability of lean principles and associated lean tools in 
the  case  study  context  [11,  12,  18,  19,  30,  32,  35].  We 
also  used  a  Delphi  technique  to  received  feedback  and 
enhancements  regarding  protocol  from  our  case  study 
colleagues [36].  

Semi-structured interview format was followed to 
produce  consistent  information  across  the  participants 
while  also  remaining  open  to  explore  each  interviewee’s 
unique perspective. These interviews lasted between 15 to 
45 minutes, and were either recorded during the session or 
extensive notes were taken after the interviews.  

Along with the interviews, we also attended mul-
tiple daily kanban meetings, weekly platform status review 
meetings,  and  monthly  program  status  meetings.  The  ob-
servations  from  these  meetings  helped  to  increase  our 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

understanding  of  lean  principles  and  associated  tools  im-
plementation  in  the  case  study  environment.  During  and 
after interviews, we also gathered supplementary material 
including  program  technical  implementation  plans,  soft-
ware configuration management plans etc. explaining var-
ious case study policies, principles and processes.    

At defined milestones in the case study, we con-
tinuously  kept  categorizing  the  collected  data,  based  on 
the  lean  principles,  associated  lean  tools,  and  linking  it 
with  management  systems  as  proposed  by  the  SLAM 
model (Figure 1). Such an iteration between field data and 
data  analysis  is  consider  important  for  the  case  study  re-
search process [33, 34]. Such a recursive process permits 
researchers  to  empirically  ground  their  observations  and 
identify anomalies to advance the theory-building process 
[37]. 

THE CASE STUDY: PROGRAM B 

Program B, a coded name for the actual program, 
was established to build and operate new infrastructure, to 
enable  advanced  super-fast  digital  services  nation-wide. 
The program’s rollout commenced in 2010 and was com-
prised  of  design,  development,  implementation,  and  on-
going  support  and  enhancement  services  of  the  business 
and operational support systems required for the processes 
of activating, assuring and billing services.  

The  Program  B’s  technical  environment  was 
based  on  infrastructure  using  virtual  servers  in  a  hybrid 
cloud  computing  environment  (as  shown  in  Figure  2). 
Before the actual provisioning of the cloud infrastructure, 
platform and related software (management systems etc.), 
appropriate measures were taken regarding privacy, trust-
worthy computing, and auditing compliance [13].  

The  virtual  servers  were  created  by  Program  B 
Data  Centre  (DC)  Engineers  (Cloud  Providers)  on  the 
demand  of  the  program  manager  who  specified  the  re-
quirements  in  an  Infrastructure  Service  Request.    Servers 
were  created  by  specifying  characteristics  such  as  CPU 
cores, memory and disk space as well as by service level 
categories as defined in the DC Service Catalogue.  Other 
Services  were  also  requested  for  databases,  network  ser-
vices  and  user  provisioning.    All management systems as 
proposed  in  section  3  and  illustrated  in  Figure  1  were 
placed  under  Program  B  Data  Centre  –  Trusted  Cloud 
Zone (as shown in Figure 2). These management systems 
were  accessible  to  the  relevant  stakeholders  via  Citrix 
gateway using Citrix virtual desktops.  

Consistency among various managed cloud com-
puting  environments  was  maintained  by  adhering  to  the 
agreed  high-level  SCM  standard  (as  documented  in  Pro-
gram  SCM  Plan)  at  all  operational  levels  of  the  program 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

47

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tions in a target cloud computing environment using Citrix 
XENAPPS client SW. 

using different management systems. There were however 
few  exceptions  to  the  environment  specific  properties 
changes  that  required  direct  access  to  the  deployed  solu-

 

Figure 2: Hybrid cloud computing implementation in Program B 

 

 

 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

48

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

opment  methodology  and  target  cloud  com-
puting environment. 

  Continuous  improvement  of  the 
existing capabilities: In our case study, 
during  the  initial  phase  R1,  all  associated 
work  products  and  software  changes  were 
delivered  through  the  management  systems 
capabilities  already  existed  in  the  environ-
ment  [17].  This  process  was  continuously 
improved during R2, R3A, and R3B through 
the  inputs  from  different  stakeholders  and 
measures  were  taken  to  develop  a  fully  au-
tomated, end to end traceable SCM solution 
defined  at  the  enterprise  level.    One  im-
portant  point  is  that  vendor  and  platform 
teams  continued  to  use  their  relevant  SCM 
processes at the operational level, because of 
its alignment with program goals.  Most im-
portantly SCM process was delivering value 
to  immediate  stakeholders.  Improvements 
were  made  horizontally  with  in  each  opera-
tional  level  to  automate  practices  internally, 
as  well  as,  vertically  to  integrate  their  out-
come with other operational level SCM pro-
cesses. 

Role-based perspective 

In Program B, the consultants responsible for the 
implementation  of  the  SCM  process  had  to  work  closely 
with  the  enterprise,  platform  and  vendor  level  teams  to 
understand  their  existing  SCM  capabilities  and  the  tools 
they used to perform various tasks. Similarly, close coor-
dination  was  also  kept  with  the  Program  B  Data  Centre 
representatives  for  the  provisioning  of  new  hybrid  cloud 
computing  environments  and  its  placements  in  different 
zones as presented in Figure 2.  

From  the  cloud  computing  perspective,  the  key 
difference for the implementation of SCM process was the 
coordination and sharing of various administration activi-
ties  and  the  provisioning  of  managed  cloud  computing 
environments  with  the  cloud  providers  (Program  B  Data 
Centre  team).  Using  their  services,  all  the  management 
systems  were  provisioned  under  Program  B  trusted  zone 
(Figure  2)  and  platform  and  hardware  maintenance  re-
sponsibility  (PaaS,  IaaS  etc.)  was given to them. Vender, 
platform  and  enterprise  level application (SaaS) authenti-
cation  and  authorization  was  handled  by  the  associated 
SCM or management representative. 

RESEARCH FINDINGS 

In  this  section,  we  discuss  the  findings  with  the 
help of the research investigation tools as discussed in the 
research  methodology  section.  The  findings that emerged 
from  the  analysis  of  the  data  were  categorized  into  pro-
cess-based and role-based perspectives. 

Process-based perspective 

In order to implement the end-to-end traceability 
for  the  Program  B,  “Program  Delivery  Framework”  was 
used  as  a  reference  model  to  create  an  enterprise-level 
SCM  framework,  which  was  then  enacted  by  the  vendor 
and platform delivery teams. Each of the teams had taken 
a  value-based  approach  for  the  customization  of  their 
SCM  process  by  adjusting  the  process  complexity  and 
tool  sophistication  according  to  the  traceability  require-
ments  defined by the “Program Delivery Framework” [9-
12, 19]. 

Following were the three key lean strategies tak-

en: 

  Empowering  teams:  Team  empower-
ment  has  been  recognized  as  an  effective 
way of helping organizations to respond rap-
idly to environmental changes, such as those 
initiated  by  customers  [38].  This  strategy  in 
our  case  study  helped  in  building  the  confi-
dence of the delivery teams as well as the in-
tegration teams and created a culture of mu-
tual respect within the program team. It also 
facilitated in the successful migration from a 
vendor  and  platform  defined  SCM  process 
to an enterprise level SCM process in a short 
span  of  one  year  and  without  delaying  any 
program milestones. 

  Designing  simple  solution:  The  em-
phasis  was  made  to  keep  information  flow 
simple  within  the  identified  value  stream 
[39], which for this case study was, the flow 
of information between various management 
systems 
to  ensure  end-to-end  software 
change  traceability.  It  was  recommended  to 
use  existing  processes  and  tools  [17]  in  the 
environment  and  categorize  them  into  man-
agement  systems.  Each  of  the  management 
systems varied in terms of it process formali-
ty and the level of tool sophistication, but it 
was  built 
though  value-based  mind-set 
aligned with the goals of the required opera-
tional  level  and  associated  software  devel-

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

49

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

CONCLUSION, IMPLICATIONS, 

AND FUTURE RESEARCH 

Having  discussed  the  findings  of  the  case  study, 
we  now  examine  their  relevance  using  the  theory  of  lean 
thinking.  We  provide  the  analysis  of  the  theoretical  un-
derpinnings behind the lean strategies taken for the appli-
cation  of  SLAM  model  in  the  Program  B’s  hybrid  cloud 

computing  environment.  Finally,  we  will  discuss  the  im-
plication of our findings in light of changing role of SCM 
Enabler  and  the  adaptable  management  systems  in  the 
cloud computing environment. 

As  shown  in  Table  2,  theory  of  lean  thinking  is 
able to comment on the strategies taken by Program B for 
the implementation of SCM process in a cloud computing 
environment. 

Table 2: Theoretical Bases for case study findings 

Benefits/Motivators 

Initial/Current Concerns 

Lessons from Theory 

 

 

Category of Findings 
Role of SCM Enabler 
in Cloud Computing 

Designing simple 

solution 

The role provide the SCM 
domain knowledge and im-
plementation of management 

systems 

Physical security of manage-
ment systems in cloud service 

providers premises and the 
application level security set-
tings by the SCM Enabler 

Migration of management 
systems from vender, and 
platform operational levels 

to enterprise level in last 

phase 

Too many differences in the 
operational levels such as, 
configuration items naming 
conventions, baseline conven-
tions, release packages names 
etc. may makes migration dif-

ficult 

Lean thinking can comment in 
this area where SCM Enabler 
need to work closely with dif-
ferent stakeholders to identify 
the value stream and then pro-
posed appropriate measures to 
address the security concerns 

Lean Thinking can comment on 
this value based mind-set which 
was applied to define the infor-
mation flow between different 
management systems. Simple 
and consistent naming conven-
tions were used to define con-
figuration items, baselines and 
release packages across all op-

erational levels. 

Theory of lean thinking empha-
size on respect of people which 
also comments on giving em-

powerments to the teams to per-
form their tasks under guiding 
principles given by the project. 

It builds a  confidence and a 
culture of mutual respect in a 

project environment 

Empowering teams 

Every team knows their in-
ternal capabilities more than 
other and it needs to be re-

spected 

External influence on the de-
livery team to make changes to 
their process for the Program 
B may affect their capability to 

deliver on time 

Continuous Im-

provement of the ex-
isting capabilities 

Rather than introducing new 
processes, tools and technol-
ogy immediately in the envi-
ronment it is better to refine 
the existing capabilities and 
introducing small pieces of 

improvements 

Too many immediate and new 
changes may affect the project 

Lean thinking can address that 
through “kaizen” which empha-

delivery deadlines 

sizes on “Challenging every-
thing” by creating an atmos-
phere of continuous learning 
and embracement of change. 

 
The implication of this paper leads us to consider 
more  theoretical  perspectives,  such  as,  dynamic  capabili-
ties  theory,  theory  of  constraints,  capabilities  learning 
loop, to look into similar case studies [7, 17, 40], existing 
software process models and framework activities are not 

going  to  be  adequate  unless  additional  roles,  such  as, 
cloud  providers  and  SCM  enablers  as  suggested  by  this 
case study are included in the process to establish govern-
ance.  This  case  study  also  suggests  the  need  to  develop 
adaptable  management  systems  through  application  of 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

50

lean  thinking  and  possibly  through  other  theoretical  un-
derpinning.  Thus,  our  future  research  will  be  directed to-
wards  more  case  studies  on  adaptable  management  sys-
tems  which  may  facilitate  in  the  implementation  of  gov-
ernance especially in different cloud delivery models. 

REFERENCES 

[1] 

J.  Tao,  H.  Marten,  D.  Kramer,  and  W.  Karl,  "An 
intuitive 
for  accessing  computing 
clouds,"  Procedia  Computer  Science,  vol.  4,  pp. 
2049-2057, 2011. 

framework 

[2]  R. Buyya, C. S. Yeo, S. Venugopal, J. Broberg, and 
I.  Brandic,  "Cloud  computing  and  emerging  IT 
platforms:  Vision,  hype,  and  reality  for  delivering 
computing  as  the  5th  utility,"  Future  Generation 
computer systems, vol. 25, pp. 599-616, 2009. 

[3]  S. Marston, Z. Li, S. Bandyopadhyay, J. Zhang, and 
A.  Ghalsasi,  "Cloud  computing—The  business 
perspective,"  Decision  Support  Systems,  vol.  51, 
pp. 176-189, 2011. 

[4]  Z.  Yaming  and  L.  Haiou,  "Applications  and 
business  value  analysis  of  cloud  computing,"  in  E-
Business  and  E-Government 
(ICEE),  2011 
International Conference on, 2011, pp. 1-4. 

[5]  S.  B.  Chebrolu,  "How  Do  Cloud  Capabilities 
Impact  Various  Aspects  of  IT  Effectiveness?,"  in 
Cloud  Computing  (CLOUD),  2012  IEEE  5th 
International Conference on, 2012, pp. 932-940. 

[6]  A.  Behl,  "Emerging  security  challenges  in  cloud 
computing:  An  insight  to  cloud  security  challenges 
and 
Information  and 
Communication  Technologies  (WICT),  2011 World 
Congress on, 2011, pp. 217-222. 

their  mitigation," 

in 

computing 

[7]  R. Guha and D. Al-Dabass, "Impact of web 2.0 and 
software 
cloud 
engineering,"  in  Electronic  System  Design  (ISED), 
2010  International  Symposium  on,  2010,  pp.  213-
218. 

platform 

on 

[8]  R.  E.  Raygan,  "Configuration  management  in  a 
system-of-systems 
IT 
services," in Engineering Management Conference, 
2007 IEEE International, 2007, pp. 330-335. 

environment  delivering 

[9]  B. Appleton, S. Berczuk, and R. Cowham. (2007 ). 
Lean-Agile  Traceability:  Strategies  and  Solutions. 
Available: www.is.gd/2zWy3u 

[10]  B.  Appleton  and  R.  Cowham,  "Defining  Agile 

SCM: Past, Present & Future," CM Journal., 2008. 

[11]  C.  Larman  and  B.  Vodde,  "Scaling  Lean  &  Agile 
Development," Organization, vol. 230, p. 11, 2009. 
[12]  J.  P.  Womack  and  D.  T.  Jones,  "Lean  thinking: 
in  your 

create  wealth 

Banish  waste 

and 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

organisation,"  Simon  and  Shuster,  New  York,  NY, 
vol. 397, 1996. 

[13]  H.  Al-Aqrabi,  L.  Liu,  J.  Xu,  R.  Hill,  N. 
Antonopoulos,  and  Y.  Zhan,  "Investigation  of  IT 
Security and Compliance Challenges in Security-as-
a-Service 
in 
Real-Time 
Object/Component/Service-Oriented 
Distributed  Computing  Workshops 
(ISORCW), 
2012 15th IEEE International Symposium on, 2012, 
pp. 124-129. 

Computing," 

Cloud 

for 

[14]  Y.  Xin-yu  and  L.  Wei-jia,  "Research  and 
application of the management and control platform 
oriented  the  cloud  manufacturing  services,"  in 
System 
and 
(ICSEM),  2011 
Manufacturing 
International Conference on, 2011, pp. 286-289. 

Science,  Engineering  Design 

Informatization 

[15]  A.  Ross  and  D.  Francis,  "Lean  is  not  enough  [lean 
manufacturing],"  Manufacturing  Engineer,  vol.  82, 
pp. 14-17, 2003. 

[16]  M.  Adams,  P.  Componation,  H.  Czarnecki,  and  B. 
J.  Schroer,  "Simulation  as  a  tool  for  continuous 
process  improvement,"  in  Simulation  Conference 
Proceedings, 1999 Winter, 1999, pp. 766-773. 

[17]  R. Andreu and C. Ciborra, "Organisational learning 
and  core  capabilities  development:  the  role  of  IT," 
The  Journal  of  Strategic  Information  Systems,  vol. 
5, pp. 111-127, 1996. 

[18]  J.  Liker,  The  Toyota  Way—14  Management 
Principles 
Greatest 
Manufacturer. New York, NY: McGraw-Hill, 2004. 
[19]  M.  Poppendieck,  "Principles  of  lean  thinking,"  IT 

the  World’s 

from 

Management Select, p. 18, 2011. 

[20]  U.  K.  Durrani,  J.  Richardson,  J.  Lenarcic,  and  Z. 
Pita,  "Lean  traceability  solution  through  SLAM 
model:A  case  study  of  a  hybrid  delivery  team  in  a 
hybrid  cloud  computing  environment,"  in  press, 
2013. 

[21]  Y.  Jadeja  and  K.  Modi,  "Cloud  computing-
in 
Electrical 
International 

concepts, 
Computing, 
Technologies 
2012 
Conference on, 2012, pp. 877-880. 

Electronics 
(ICCEET), 

challenges," 

architecture 

and 

and 

[22]  P.  Mell  and  T.  Grance,  "The  NIST  definition  of 
cloud  computing,  2009,"  URL  http://www.  nist. 
gov/itl/cloud/upload/cloud-def-v15. pdf, 2012. 

[23]  M. Armbrust, A. Fox, R. Griffith, A. D. Joseph, R. 
Katz,  A.  Konwinski,  G.  Lee,  D.  Patterson,  A. 
Rabkin,  and 
I.  Stoica,  "A  view  of  cloud 
computing,"  Communications  of  the ACM, vol. 53, 
pp. 50-58, 2010. 

[24]  P.  Kalagiakos  and  P.  Karampelas, 

"Cloud 
computing  learning,"  in Application of Information 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

51

and Communication Technologies (AICT), 2011 5th 
International Conference on, 2011, pp. 1-4. 

[25]  S.  Patidar,  D.  Rane,  and  P.  Jain,  "Challenges  of 
software  development  on  cloud  platform," 
in 
Information  and  Communication  Technologies 
(WICT), 2011 World Congress on, 2011, pp. 1009-
1013. 

[26]  S.  Rajan  and  A.  Jairath,  "Cloud  Computing:  The 
Fifth Generation of Computing," in Communication 
Systems  and  Network  Technologies  (CSNT),  2011 
International Conference on, 2011, pp. 665-667. 

[27]  K.  Ren,  C.  Wang,  and  Q.  Wang,  "Security 
Internet 

challenges 
Computing, IEEE, vol. 16, pp. 69-73, 2012. 

the  public 

cloud," 

for 

[28]  S. Subashini and V. Kavitha, "A survey on security 
issues 
in  service  delivery  models  of  cloud 
computing,"  Journal  of  Network  and  Computer 
Applications, vol. 34, pp. 1-11, 2011. 

[29]  U.  Dombrowski  and  T.  Zahn,  "Design  of  a  lean 
development framework," in Industrial Engineering 
and  Engineering  Management (IEEM), 2011 IEEE 
International Conference on, 2011, pp. 1917-1921. 
[30]  T. Ohno, Toyota production system: beyond large-

scale production: Productivity press, 1988. 

[31]  IEEE.Std.828,  "IEEE  Standard  for  Configuration 
Management 
Software 
Engineering,"  IEEE  Std  828-2012  (Revision  of 
IEEE Std 828-2005), pp. 1-71, 2012. 

Systems 

and 

in 

[32]  M.  Poppendieck  and  T.  Poppendieck,  Lean 
software  development:  An  agile  toolkit:  Addison-
Wesley Professional, 2003. 

[33]  K.  M.  Eisenhardt,  "Building  Theories  from  Case 
Study  Research.  ,"  The  Academy  of  Management 
Review, vol. 14, pp. 532-550, 1989. 

[34]  K.  M.  Eisenhardt  and  M.  E.  Graebner,  "Theory 
and 
Building 
Challenges,"  The  Academy  of  Management 
Journal, pp. 25-32, 2007. 

from  Cases:  Opportunities 

[35]  K.  Ohashi,  H.  Kurihara,  Y.  Tananaka,  and  R. 
Yamamoto,  "A  means  of  establishing  traceability 
based  on  a  UML  model  in  business  application 
development," 
in  Requirements  Engineering 
Conference  (RE),  2011  19th  IEEE  International, 
2011, pp. 279-284. 

[36]  C. Okoli and S. D. Pawlowski, "The Delphi method 
as 
example,  design 
considerations  and  applications,"  Information  & 
Management, vol. 42, pp. 15-29, 2004. 

research 

tool: 

an 

a 

[37]  B. R. Staats, D. J. Brunner, and D. M. Upton, "Lean 
principles, learning, and knowledge work: Evidence 
from  a  software  services  provider,"  Journal  of 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Operations  Management,  vol.  29,  pp.  376-390, 
2011. 

[38]  C. 

on 

Jian'an, 

"Research 

and 
empowerment  process  to  achieve  self-management 
team,"  in  Wireless  Communications,  Networking 
and  Mobile  Computing,  2008.  WiCOM'08.  4th 
International Conference on, 2008, pp. 1-5. 

strategies 

[39]  K.  Hiranabe, 

"Kanban  applied 

software 
development: From agile to lean," published online 
at<  http://www.  infoq.  com/articles/hiranabe-lean-
agile-kanban, 2008. 

to 

[40]  D.  J.  Teece,  G.  Pisano,  and  A.  Shuen,  "Dynamic 
capabilities  and  strategic  management,"  Strategic 
management journal, vol. 18, pp. 509-533, 1997. 

 ACKNOWLEDGEMENT 

This  research  work  has  been  partially  sponsored 
by RMIT University. Also this work has benefited greatly 
from  discussions  with  School  of  Mathematical  and  Geo-
spatial Sciences RMIT University for their constant guide-
lines  on  statistics  and  research  methods  applied  in  the 
study. 

AUTHOR BIOGRAPHIES 

Joan  Richardson  has  been  an  academic  for  the 
last  20  years.  She  completed  a  PhD  on  “An  episode  of 
change  in  a  contemporary  higher  education  setting”  and 
has  published  widely  on  IT  education  issues.  She  has 
completed  a  number  of  learning  and  teaching  projects 
funded  by  Learning  and  Teaching  Infrastructure  Funds 
and was awarded with an Australian Learning and Teach-
ing Council (ALTC) citation in 2010. She is the main au-
thor  of  the  book  Business  Computing  1,  which  is  to  date 
an  innovation  in  learning  and  teaching  with  material  pre-
sented on CD Rom, websites and a set of online resources. 
Dr. Joan has worked with Pearson Education Australia to 
produce  the text book, and has been working on learning 
and  teaching  funded  projects  to  innovate  learning  re-
sources. She also supervises PhD students and is the depu-
ty Head of School responsible for all Learning and Teach-
ing matters. 

 
Usman Durrani is currently doing his PhD from 
School of Business Information Technology and Logistics 
RMIT  University  in  Melbourne,  Australia.  He  is  a  sea-
soned  management  consultant,  working  in  the  area  of 
software  configuration  management  for  more than twelve 
years.  He  has  been  involved  in  many  high-tech  govern-
ment  and  private  projects  in  US,  China,  Australia,  and 
Pakistan.  His  research  interests  include  agile  software 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

52

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Journal of Information Technology Management 

ISSN #1042-1319 

A Publication of the Association of Management 

LEAN CONFIGURATION MANAGEMENT SYSTEMS 

IMPLEMENTATION FOR THE GOVERNANCE: A CLOUD 

COMPUTING CASE STUDY 

 

USMAN DURRANI 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

usman.durrani@rmit.edu.au  

JOAN RICHARDSON 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

joan. richardson@rmit.edu.au 

ZIJAD PITA 

RMIT UNIVERSITY, MELBOURNE, AUSTRALIA 

zijad.pita@rmit.edu.au 

ABSTRACT 

With the shift of computing paradigm from standalone, to parallel, to distributed, to grid, and now “Cloud Compu-
ting”,  came new waves of issues, concerns, and challenges and a need to explore more innovative ways to govern software 
development activities. At present there is a lack of studies in the area of governance in cloud computing and its impact on the 
software development activities. This paper presents an adaptable management systems model formulated for this purpose as 
a result of a longitudinal case study in a large Australian IT program.  The case study environment involved various agile and 
plan driven software development teams collaborated with each other using various lean strategies, to develop and deliver a 
consolidated software system in a hybrid cloud computing environment. This paper will contribute an empirical study towards 
literature  of  lean  thinking,  governance,  and  traceability  models  and  practical  guidelines  for  process  engineers  to  implement 
governance. 
 
Keywords: Cloud Computing, Adaptable Management Systems, Software Configuration Management, Lean, Lean Thinking, 
Traceability, Governance, Process, Model 
 
 

INTRODUCTION 

Cloud computing is emerging as a novel compu-
ting  environment,  where  computation  and  storage  re-
sources are provided as services [1]. It is considered “as a 
type of parallel and distributed system consisting of a col-

lection  of  inter-connected  and  virtualized  computers  that 
are dynamically provisioned and presented as one or more 
unified  computing  resources(s)  based  on  service-level 
agreements  established  through  negotiation  between  the 
service provider and consumers” [2]. 

Cloud  computing  on  one  hand  provide  benefits, 
such  as,  cost  effectiveness,  real  time  provisioning  and 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

43

pay-as-you go services [3, 4], and on the other hand, pre-
sent  concerns  and  issues  in  terms  of  security,  privacy, 
performance,  availability,  integration  and  governance  [1, 
5-7]. Such environments raise number of challenges to the 
classical software engineering processes, such as Software 
Configuration Management (SCM), especially in a highly 
regulated and audited environments [8].  

According  to  Guha  and  Al-Dabass  [7],  existing 
software process models and framework activities are not 
adequate  for  cloud  computing  environments, unless addi-
tional  measures  are  taken  to  make  it  compatible  with 
cloud  computing  environment.  At  present,  there  is  a  lack 
of  empirical  and  academic  studies  which  may  provide 
adaptable  governance  solutions  to  implement  classical 
software  engineering  processes,  such  as,  SCM  process 
through  lean  principles,  and  strategies  and  considering 
cloud privacy and security requirements [9-14].  

Motivated to investigate hybrid cloud computing 
environment and its governance through SCM process and 
associated management systems solution, we performed a 
longitudinal  case  study  of  a  large  Australian  IT program, 
where Agile and Plan driven software development teams, 
coexisted  to  deliver  a  consolidated  software  system,  and 
management  was  concerned  about  the  governance  of 
software development activities in cloud computing envi-
ronment. This paper contribute an empirical study towards 
literature  on  lean thinking, cloud computing, and govern-
ance, and also present a traceability model for the practi-
cal  guidelines  of  IT  practitioners,  in  general  and  process 
engineers, in particular. 

This  paper  is  structured  as  follows:  In  next  sec-
tion, we will provide the background and the related work 
associated with the research. Proceeding section will then 
formulate an adaptable management systems model called 
as  Software  configuration  Lean  Agile  Management 
(SLAM). It will then followed by a section describing the 
research  methodology  adopted  for  the  case  study.  Next 
section  will  then  present  the  case  study  background  in-
cluding  description  of  technical  cloud  computing  envi-
ronment of the case. Next section will discuss the findings 
of  the  case  study.  In  the  last  section,  we  will  present  the 
conclusion, implication, and the future research direction. 

BACKGROUND 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

ed activities, encompassing wasted time, activities, inven-
tory,  and  space  –  and  create  processes  that  flow  and  are 
initiated by customer demand [15, 16].  

There  are  two  pillars  that  support  this  system, 
“continuous  improvement”,  and  “Respect  for  People” 
[11].  Continuous  improvement  also  called  as  “kaizen” 
emphasizes  on  “Challenging  everything”  by  creating  an 
atmosphere  of  continuous  learning  and  embracement  of 
change  [17].  Such  an  environment  can  only  be  created 
where there is a respect for people [11, 18].  

In addition, five associated principles that facili-
tate the above mentioned pillars are: 1) definition of prod-
uct that precisely meets customer requirement, 2) identify 
the value stream for each product, 3) allow value to flow 
through  the  value  stream  without  delays  or  barriers,  4) 
allow the customer to pull value, and 5) pursue perfection 
and practice continuous improvement  [12]. These princi-
ples,  along  with  others,  when  applied  appropriately  can 
provide  an  adaptable  environment  through  which  various 
software  engineering  practices and collaborative manage-
ment systems can prevail to deliver value [9, 10, 18-20].  

In the scope of this paper, we used of a subset of 
lean  tools  selected  based  on  the  goals  of  the  case  study 
and listed in Table 1. We also presented the implementa-
tion of these lean tools in the context of the case study and 
illustrated in Figure 1. 

 

Table 1: Lean tools for the SLAM model im-

plementation 

 
Lean Tools 

Meaning 

Sustaining continuous 
flow (Heijunka, Takt 

Creating flow and elimi-

nating waste 

Time) 
Jidoka 

Kanban 

Kaizen 

Yokoten 

Continuous integration 

and intelligent automation 
Visual management and 

pull system 

Continuous improvement 
(“change for the better”) 

Best practice sharing 

across everywhere 

Gemba 

The real place (Go and see 

the work) 

 

Theory of Lean Thinking and the associated 
properties 

Lean thinking represents a culture where all em-
ployees  continuously  look  for  ways  to  improve  the  pro-
cess with the philosophy of eliminating all non-value add-

Cloud Computing Environments and Gov-
ernance Challenges 

Many studies have been performed in an attempt 
to  define  cloud  computing  and  to  identify,  and  describe 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

44

the  key  characteristics  of  cloud  computing [3, 4, 21, 22]. 
As stated by Armbrust, et al. [23], it refers to both appli-
cations  delivered  as  a  service  over  the  internet  and  the 
hardware  and  systems  software  in  the  data  centers, 
through the use of different virtualization technologies by 
defining  images  of  operating  systems,  middleware,  and 
applications to represent physical machines and are usual-
ly pro-allocated to an available server [24].  

Research studies in the past have identified vari-
ous  advantages  and  benefits  of  using  cloud  computing, 
such  as,  cost  effectiveness,  real  time  provisioning  and 
pay-as-you  go  services  etc.[3,  4].  On  the  contrary,  it  has 
also presented different challenges, issues, vulnerabilities, 
and complexities, such as, security, privacy, performance, 
availability, integration and governance [5, 7, 21, 25-28].  
According to Guha and Al-Dabass [7], the exist-
ing software development process models and frameworks 
are  not  adequate  from  the  cloud  computing  aspects,  and 
the suggestion was made to involve cloud service provid-
ers  during  the  software  development  lifecycle  for  the  es-
tablishment  of  different  processes  (such  as,  cost  and 
schedule  estimations,  risk  management,  configuration 
management, change management, and quality assurance) 
and  the  provisioning  of  different  project  related  environ-
ments . 

In  the  scope  of  this  paper,  in  later  section,  we 
will discuss and illustrate the deployment of various man-
agement systems for the governance of software develop-
ment  activities  in  the  cloud  computing  environment  and 
the role of different stakeholders. 

FORMULATION OF THE 

ADAPTABLE MANAGEMENT 

SYSTEMS MODEL 

Adaptable management system in Figure 1 shows 
a high-level view of a SLAM model [20] with its basis on 
lean  principles  and  associated  lean  tools  [11,  12,  18,  29, 
30].  

From  structural  aspect,  SLAM  model  comprises 
of  six  collaborative  management  systems  established 
through a principle defined for this research as, “the level 
of tool and technology sophistication and the formality of 
the  process  and  practices  associated  with  each  manage-
ment  systems  should  be  directly  proportional  to  change 
traceability  granularity  expected  by  the  customer,  and 
should  be  aligned  with  the  business  goals  and  customer 
requirements to deliver value” [20].  

The  process  and  tool  control  arrows,  which  we 
called “Volume Adjustment Monitor (VAM)” is associat-
ed with each of the management systems and facilitate in 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

the application of lean principles for pragmatic implemen-
tation  of  sound  SCM  principles  to  serve  the  need  of  the 
business  [9,  10,  31].  VAM  represent  the  pre-assessment 
tasks executed at the operational level of the organization 
to review business goals and the assess change traceability 
granularity required. Consideration should be made to add 
nothing  but  value  (eliminate  waste),  center  on  the  people 
who  add  value,  flow  value  from  demand  (delay  commit-
ment), and optimization of the target management system 
across the organization [19, 32]. 

As  illustrated  in  Figure  1,  “upstream  compo-
nents”  or  “manufacturing  components”  of  SLAM  model 
comprises  of  Change/Requirement  management  system, 
and  defect  management  system.  These  management  sys-
tems  are  linked  with  the  “Production  KANBAN”  repre-
senting  a  “pull”  system  to  avoid  overproduction  [18]. 
Once  a  requirement  is  recorded  through  the  upstream 
component, project development team members gets their 
assigned  workload  through  the  established  workflow 
channel (such as, Kanban stand-up meetings, and/or email 
notification  of  assignment  through  management  systems 
etc.)  and  software  changes  gets  released  through  a  “Sus-
tainable  Continuous  Flow”  and  stored  under  the  “version 
control management system” [18].  

Once  the  software  changes  are  stored  inside  the 
version  control  system,  it  waits  for  the  “Withdraw 
Kanban”; a pull event which represents a “wish” of a tar-
get  environment  owner  to  deploy  selective  changes  into 
the relevant managed environments [18].  

The role of “downstream components” or “distri-
bution  components”  starts  from  this  point  and  comprises 
of  Build  management  system  and  the  Release  &  Deploy-
ment  management  system.  Build  management  system 
pulls  as  a  result  of  “Withdraw  Kanban”  all  the  software 
changes 
“base-
line/snapshot/tag”  and  package  the  changes  as  per  build 
instructions.  Release  &  Deployment  management  system 
gets  trigger  at  a  defined  regular  interval  of  time  for  the 
collection  of  “release  package”  and  deploys  in  the  target 
managed  environment  through  a  “continuous  integration 
(Jidoka)” process. 

represented 

by 

a 

particular 

Software changes once deployed in the managed 
environment,  goes  through  a  “customer  acceptance  crite-
ria” and the “production Kanban” gets updated according-
ly to reflect the updated state of the requirement and hence 
another  trigger  of  a  pull  event  for  the  upstream  compo-
nent.  

Since  collaboration  between  different  manage-
ment  systems  is  the  basis  of  a  SLAM  model,  the  content 
management  system  which  performs  the  role  of  central-
ized reporting system should be kept up-to-date (automat-
ically  or  manually  etc.)  to  reflect  the  progress  of  all  the 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

45

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tasks mentioned above, and should be made readily avail-
able  to  the  relevant  stakeholders  for  further  analysis  and 
hence  the  contribution  towards  continuous  improvement 
“Kaizen”  to  pursuit  perfection  and  conveyed  in  the  con-
stant “change for the better” [18, 29]. The basis of Kaizen 
is  relentless  reflection  which  pursuit  this  perfection,  con-

tinuously  and  iteratively  and  VAM  is  the  control  tool 
which also facilitate Kaizen in this improvement process.  
In  section  5  of  this paper, we will illustrate how 
we deployed the management systems as proposed by the 
SLAM model in the context of case study using different 
lean strategies. 

 

 

Figure 1: SLAM model 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

46

RESEARCH METHODOLOGY 

Following Eisenhardt [33], a qualitative and sin-
gle case study approach for this phase of the research was 
chosen primarily to provide rich data to other researchers 
and  an  opportunity  to  analyze  management  decision  pro-
cesses  of  deciding  how,  what,  and  when  to  apply  SCM 
process facilitated by an internal cloud service provider.  

The case study was unique and complex because 
of  the  coexistence  of  parallel  operational  levels,  such  as, 
program,  platform  and  vender  etc.  with  their  own associ-
ated  management  systems.  Also  the  involved  software 
venders’ teams were using different software development 
methodologies such as, Agile and Plan driven.  The chal-
lenge was to maintain this parallel operational momentum 
with hybrid venders to deliver an integrated product as per 
defined  project  milestones.  Thus,  in  order  to  understand 
what strategies were taken by each operational level man-
agers  to  establish  governance  through  SCM  in  a  cloud 
computing environment, it was deemed essential to pursue 
an  in-depth  look  into  why  and  how  of  the  phenomenon 
[34].  

After  selecting  the  site  and  gained  access  to  the 
case study environment, we developed our research proto-
col, entered the field, analyzed the data, and enfolded the 
literature until closure was researched.  Data was collected 
using  multiple  methods,  including  semi-structured  inter-
views, kanban meeting observations, inspection of internal 
documents, and archival of project data [33, 34]. 

During  the  case  study,  we  interviewed  SCM  re-
sources,  developers,  project  managers,  business  analysts, 
and program level executives. We developed an interview 
protocol  (available  from  the  authors  on  request)  prior  to 
entering  the  field.  We  derived  this  protocol  by  devising 
questions about various management systems (as shown in 
Figure 1), their perceived importance for governance, and 
applicability of lean principles and associated lean tools in 
the  case  study  context  [11,  12,  18,  19,  30,  32,  35].  We 
also  used  a  Delphi  technique  to  received  feedback  and 
enhancements  regarding  protocol  from  our  case  study 
colleagues [36].  

Semi-structured interview format was followed to 
produce  consistent  information  across  the  participants 
while  also  remaining  open  to  explore  each  interviewee’s 
unique perspective. These interviews lasted between 15 to 
45 minutes, and were either recorded during the session or 
extensive notes were taken after the interviews.  

Along with the interviews, we also attended mul-
tiple daily kanban meetings, weekly platform status review 
meetings,  and  monthly  program  status  meetings.  The  ob-
servations  from  these  meetings  helped  to  increase  our 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

understanding  of  lean  principles  and  associated  tools  im-
plementation  in  the  case  study  environment.  During  and 
after interviews, we also gathered supplementary material 
including  program  technical  implementation  plans,  soft-
ware configuration management plans etc. explaining var-
ious case study policies, principles and processes.    

At defined milestones in the case study, we con-
tinuously  kept  categorizing  the  collected  data,  based  on 
the  lean  principles,  associated  lean  tools,  and  linking  it 
with  management  systems  as  proposed  by  the  SLAM 
model (Figure 1). Such an iteration between field data and 
data  analysis  is  consider  important  for  the  case  study  re-
search process [33, 34]. Such a recursive process permits 
researchers  to  empirically  ground  their  observations  and 
identify anomalies to advance the theory-building process 
[37]. 

THE CASE STUDY: PROGRAM B 

Program B, a coded name for the actual program, 
was established to build and operate new infrastructure, to 
enable  advanced  super-fast  digital  services  nation-wide. 
The program’s rollout commenced in 2010 and was com-
prised  of  design,  development,  implementation,  and  on-
going  support  and  enhancement  services  of  the  business 
and operational support systems required for the processes 
of activating, assuring and billing services.  

The  Program  B’s  technical  environment  was 
based  on  infrastructure  using  virtual  servers  in  a  hybrid 
cloud  computing  environment  (as  shown  in  Figure  2). 
Before the actual provisioning of the cloud infrastructure, 
platform and related software (management systems etc.), 
appropriate measures were taken regarding privacy, trust-
worthy computing, and auditing compliance [13].  

The  virtual  servers  were  created  by  Program  B 
Data  Centre  (DC)  Engineers  (Cloud  Providers)  on  the 
demand  of  the  program  manager  who  specified  the  re-
quirements  in  an  Infrastructure  Service  Request.    Servers 
were  created  by  specifying  characteristics  such  as  CPU 
cores, memory and disk space as well as by service level 
categories as defined in the DC Service Catalogue.  Other 
Services  were  also  requested  for  databases,  network  ser-
vices  and  user  provisioning.    All management systems as 
proposed  in  section  3  and  illustrated  in  Figure  1  were 
placed  under  Program  B  Data  Centre  –  Trusted  Cloud 
Zone (as shown in Figure 2). These management systems 
were  accessible  to  the  relevant  stakeholders  via  Citrix 
gateway using Citrix virtual desktops.  

Consistency among various managed cloud com-
puting  environments  was  maintained  by  adhering  to  the 
agreed  high-level  SCM  standard  (as  documented  in  Pro-
gram  SCM  Plan)  at  all  operational  levels  of  the  program 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

47

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

tions in a target cloud computing environment using Citrix 
XENAPPS client SW. 

using different management systems. There were however 
few  exceptions  to  the  environment  specific  properties 
changes  that  required  direct  access  to  the  deployed  solu-

 

Figure 2: Hybrid cloud computing implementation in Program B 

 

 

 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

 

48

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

opment  methodology  and  target  cloud  com-
puting environment. 

  Continuous  improvement  of  the 
existing capabilities: In our case study, 
during  the  initial  phase  R1,  all  associated 
work  products  and  software  changes  were 
delivered  through  the  management  systems 
capabilities  already  existed  in  the  environ-
ment  [17].  This  process  was  continuously 
improved during R2, R3A, and R3B through 
the  inputs  from  different  stakeholders  and 
measures  were  taken  to  develop  a  fully  au-
tomated, end to end traceable SCM solution 
defined  at  the  enterprise  level.    One  im-
portant  point  is  that  vendor  and  platform 
teams  continued  to  use  their  relevant  SCM 
processes at the operational level, because of 
its alignment with program goals.  Most im-
portantly SCM process was delivering value 
to  immediate  stakeholders.  Improvements 
were  made  horizontally  with  in  each  opera-
tional  level  to  automate  practices  internally, 
as  well  as,  vertically  to  integrate  their  out-
come with other operational level SCM pro-
cesses. 

Role-based perspective 

In Program B, the consultants responsible for the 
implementation  of  the  SCM  process  had  to  work  closely 
with  the  enterprise,  platform  and  vendor  level  teams  to 
understand  their  existing  SCM  capabilities  and  the  tools 
they used to perform various tasks. Similarly, close coor-
dination  was  also  kept  with  the  Program  B  Data  Centre 
representatives  for  the  provisioning  of  new  hybrid  cloud 
computing  environments  and  its  placements  in  different 
zones as presented in Figure 2.  

From  the  cloud  computing  perspective,  the  key 
difference for the implementation of SCM process was the 
coordination and sharing of various administration activi-
ties  and  the  provisioning  of  managed  cloud  computing 
environments  with  the  cloud  providers  (Program  B  Data 
Centre  team).  Using  their  services,  all  the  management 
systems  were  provisioned  under  Program  B  trusted  zone 
(Figure  2)  and  platform  and  hardware  maintenance  re-
sponsibility  (PaaS,  IaaS  etc.)  was given to them. Vender, 
platform  and  enterprise  level application (SaaS) authenti-
cation  and  authorization  was  handled  by  the  associated 
SCM or management representative. 

RESEARCH FINDINGS 

In  this  section,  we  discuss  the  findings  with  the 
help of the research investigation tools as discussed in the 
research  methodology  section.  The  findings that emerged 
from  the  analysis  of  the  data  were  categorized  into  pro-
cess-based and role-based perspectives. 

Process-based perspective 

In order to implement the end-to-end traceability 
for  the  Program  B,  “Program  Delivery  Framework”  was 
used  as  a  reference  model  to  create  an  enterprise-level 
SCM  framework,  which  was  then  enacted  by  the  vendor 
and platform delivery teams. Each of the teams had taken 
a  value-based  approach  for  the  customization  of  their 
SCM  process  by  adjusting  the  process  complexity  and 
tool  sophistication  according  to  the  traceability  require-
ments  defined by the “Program Delivery Framework” [9-
12, 19]. 

Following were the three key lean strategies tak-

en: 

  Empowering  teams:  Team  empower-
ment  has  been  recognized  as  an  effective 
way of helping organizations to respond rap-
idly to environmental changes, such as those 
initiated  by  customers  [38].  This  strategy  in 
our  case  study  helped  in  building  the  confi-
dence of the delivery teams as well as the in-
tegration teams and created a culture of mu-
tual respect within the program team. It also 
facilitated in the successful migration from a 
vendor  and  platform  defined  SCM  process 
to an enterprise level SCM process in a short 
span  of  one  year  and  without  delaying  any 
program milestones. 

  Designing  simple  solution:  The  em-
phasis  was  made  to  keep  information  flow 
simple  within  the  identified  value  stream 
[39], which for this case study was, the flow 
of information between various management 
systems 
to  ensure  end-to-end  software 
change  traceability.  It  was  recommended  to 
use  existing  processes  and  tools  [17]  in  the 
environment  and  categorize  them  into  man-
agement  systems.  Each  of  the  management 
systems varied in terms of it process formali-
ty and the level of tool sophistication, but it 
was  built 
though  value-based  mind-set 
aligned with the goals of the required opera-
tional  level  and  associated  software  devel-

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

49

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

CONCLUSION, IMPLICATIONS, 

AND FUTURE RESEARCH 

Having  discussed  the  findings  of  the  case  study, 
we  now  examine  their  relevance  using  the  theory  of  lean 
thinking.  We  provide  the  analysis  of  the  theoretical  un-
derpinnings behind the lean strategies taken for the appli-
cation  of  SLAM  model  in  the  Program  B’s  hybrid  cloud 

computing  environment.  Finally,  we  will  discuss  the  im-
plication of our findings in light of changing role of SCM 
Enabler  and  the  adaptable  management  systems  in  the 
cloud computing environment. 

As  shown  in  Table  2,  theory  of  lean  thinking  is 
able to comment on the strategies taken by Program B for 
the implementation of SCM process in a cloud computing 
environment. 

Table 2: Theoretical Bases for case study findings 

Benefits/Motivators 

Initial/Current Concerns 

Lessons from Theory 

 

 

Category of Findings 
Role of SCM Enabler 
in Cloud Computing 

Designing simple 

solution 

The role provide the SCM 
domain knowledge and im-
plementation of management 

systems 

Physical security of manage-
ment systems in cloud service 

providers premises and the 
application level security set-
tings by the SCM Enabler 

Migration of management 
systems from vender, and 
platform operational levels 

to enterprise level in last 

phase 

Too many differences in the 
operational levels such as, 
configuration items naming 
conventions, baseline conven-
tions, release packages names 
etc. may makes migration dif-

ficult 

Lean thinking can comment in 
this area where SCM Enabler 
need to work closely with dif-
ferent stakeholders to identify 
the value stream and then pro-
posed appropriate measures to 
address the security concerns 

Lean Thinking can comment on 
this value based mind-set which 
was applied to define the infor-
mation flow between different 
management systems. Simple 
and consistent naming conven-
tions were used to define con-
figuration items, baselines and 
release packages across all op-

erational levels. 

Theory of lean thinking empha-
size on respect of people which 
also comments on giving em-

powerments to the teams to per-
form their tasks under guiding 
principles given by the project. 

It builds a  confidence and a 
culture of mutual respect in a 

project environment 

Empowering teams 

Every team knows their in-
ternal capabilities more than 
other and it needs to be re-

spected 

External influence on the de-
livery team to make changes to 
their process for the Program 
B may affect their capability to 

deliver on time 

Continuous Im-

provement of the ex-
isting capabilities 

Rather than introducing new 
processes, tools and technol-
ogy immediately in the envi-
ronment it is better to refine 
the existing capabilities and 
introducing small pieces of 

improvements 

Too many immediate and new 
changes may affect the project 

Lean thinking can address that 
through “kaizen” which empha-

delivery deadlines 

sizes on “Challenging every-
thing” by creating an atmos-
phere of continuous learning 
and embracement of change. 

 
The implication of this paper leads us to consider 
more  theoretical  perspectives,  such  as,  dynamic  capabili-
ties  theory,  theory  of  constraints,  capabilities  learning 
loop, to look into similar case studies [7, 17, 40], existing 
software process models and framework activities are not 

going  to  be  adequate  unless  additional  roles,  such  as, 
cloud  providers  and  SCM  enablers  as  suggested  by  this 
case study are included in the process to establish govern-
ance.  This  case  study  also  suggests  the  need  to  develop 
adaptable  management  systems  through  application  of 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

50

lean  thinking  and  possibly  through  other  theoretical  un-
derpinning.  Thus,  our  future  research  will  be  directed to-
wards  more  case  studies  on  adaptable  management  sys-
tems  which  may  facilitate  in  the  implementation  of  gov-
ernance especially in different cloud delivery models. 

REFERENCES 

[1] 

J.  Tao,  H.  Marten,  D.  Kramer,  and  W.  Karl,  "An 
intuitive 
for  accessing  computing 
clouds,"  Procedia  Computer  Science,  vol.  4,  pp. 
2049-2057, 2011. 

framework 

[2]  R. Buyya, C. S. Yeo, S. Venugopal, J. Broberg, and 
I.  Brandic,  "Cloud  computing  and  emerging  IT 
platforms:  Vision,  hype,  and  reality  for  delivering 
computing  as  the  5th  utility,"  Future  Generation 
computer systems, vol. 25, pp. 599-616, 2009. 

[3]  S. Marston, Z. Li, S. Bandyopadhyay, J. Zhang, and 
A.  Ghalsasi,  "Cloud  computing—The  business 
perspective,"  Decision  Support  Systems,  vol.  51, 
pp. 176-189, 2011. 

[4]  Z.  Yaming  and  L.  Haiou,  "Applications  and 
business  value  analysis  of  cloud  computing,"  in  E-
Business  and  E-Government 
(ICEE),  2011 
International Conference on, 2011, pp. 1-4. 

[5]  S.  B.  Chebrolu,  "How  Do  Cloud  Capabilities 
Impact  Various  Aspects  of  IT  Effectiveness?,"  in 
Cloud  Computing  (CLOUD),  2012  IEEE  5th 
International Conference on, 2012, pp. 932-940. 

[6]  A.  Behl,  "Emerging  security  challenges  in  cloud 
computing:  An  insight  to  cloud  security  challenges 
and 
Information  and 
Communication  Technologies  (WICT),  2011 World 
Congress on, 2011, pp. 217-222. 

their  mitigation," 

in 

computing 

[7]  R. Guha and D. Al-Dabass, "Impact of web 2.0 and 
software 
cloud 
engineering,"  in  Electronic  System  Design  (ISED), 
2010  International  Symposium  on,  2010,  pp.  213-
218. 

platform 

on 

[8]  R.  E.  Raygan,  "Configuration  management  in  a 
system-of-systems 
IT 
services," in Engineering Management Conference, 
2007 IEEE International, 2007, pp. 330-335. 

environment  delivering 

[9]  B. Appleton, S. Berczuk, and R. Cowham. (2007 ). 
Lean-Agile  Traceability:  Strategies  and  Solutions. 
Available: www.is.gd/2zWy3u 

[10]  B.  Appleton  and  R.  Cowham,  "Defining  Agile 

SCM: Past, Present & Future," CM Journal., 2008. 

[11]  C.  Larman  and  B.  Vodde,  "Scaling  Lean  &  Agile 
Development," Organization, vol. 230, p. 11, 2009. 
[12]  J.  P.  Womack  and  D.  T.  Jones,  "Lean  thinking: 
in  your 

create  wealth 

Banish  waste 

and 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

organisation,"  Simon  and  Shuster,  New  York,  NY, 
vol. 397, 1996. 

[13]  H.  Al-Aqrabi,  L.  Liu,  J.  Xu,  R.  Hill,  N. 
Antonopoulos,  and  Y.  Zhan,  "Investigation  of  IT 
Security and Compliance Challenges in Security-as-
a-Service 
in 
Real-Time 
Object/Component/Service-Oriented 
Distributed  Computing  Workshops 
(ISORCW), 
2012 15th IEEE International Symposium on, 2012, 
pp. 124-129. 

Computing," 

Cloud 

for 

[14]  Y.  Xin-yu  and  L.  Wei-jia,  "Research  and 
application of the management and control platform 
oriented  the  cloud  manufacturing  services,"  in 
System 
and 
(ICSEM),  2011 
Manufacturing 
International Conference on, 2011, pp. 286-289. 

Science,  Engineering  Design 

Informatization 

[15]  A.  Ross  and  D.  Francis,  "Lean  is  not  enough  [lean 
manufacturing],"  Manufacturing  Engineer,  vol.  82, 
pp. 14-17, 2003. 

[16]  M.  Adams,  P.  Componation,  H.  Czarnecki,  and  B. 
J.  Schroer,  "Simulation  as  a  tool  for  continuous 
process  improvement,"  in  Simulation  Conference 
Proceedings, 1999 Winter, 1999, pp. 766-773. 

[17]  R. Andreu and C. Ciborra, "Organisational learning 
and  core  capabilities  development:  the  role  of  IT," 
The  Journal  of  Strategic  Information  Systems,  vol. 
5, pp. 111-127, 1996. 

[18]  J.  Liker,  The  Toyota  Way—14  Management 
Principles 
Greatest 
Manufacturer. New York, NY: McGraw-Hill, 2004. 
[19]  M.  Poppendieck,  "Principles  of  lean  thinking,"  IT 

the  World’s 

from 

Management Select, p. 18, 2011. 

[20]  U.  K.  Durrani,  J.  Richardson,  J.  Lenarcic,  and  Z. 
Pita,  "Lean  traceability  solution  through  SLAM 
model:A  case  study  of  a  hybrid  delivery  team  in  a 
hybrid  cloud  computing  environment,"  in  press, 
2013. 

[21]  Y.  Jadeja  and  K.  Modi,  "Cloud  computing-
in 
Electrical 
International 

concepts, 
Computing, 
Technologies 
2012 
Conference on, 2012, pp. 877-880. 

Electronics 
(ICCEET), 

challenges," 

architecture 

and 

and 

[22]  P.  Mell  and  T.  Grance,  "The  NIST  definition  of 
cloud  computing,  2009,"  URL  http://www.  nist. 
gov/itl/cloud/upload/cloud-def-v15. pdf, 2012. 

[23]  M. Armbrust, A. Fox, R. Griffith, A. D. Joseph, R. 
Katz,  A.  Konwinski,  G.  Lee,  D.  Patterson,  A. 
Rabkin,  and 
I.  Stoica,  "A  view  of  cloud 
computing,"  Communications  of  the ACM, vol. 53, 
pp. 50-58, 2010. 

[24]  P.  Kalagiakos  and  P.  Karampelas, 

"Cloud 
computing  learning,"  in Application of Information 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

51

and Communication Technologies (AICT), 2011 5th 
International Conference on, 2011, pp. 1-4. 

[25]  S.  Patidar,  D.  Rane,  and  P.  Jain,  "Challenges  of 
software  development  on  cloud  platform," 
in 
Information  and  Communication  Technologies 
(WICT), 2011 World Congress on, 2011, pp. 1009-
1013. 

[26]  S.  Rajan  and  A.  Jairath,  "Cloud  Computing:  The 
Fifth Generation of Computing," in Communication 
Systems  and  Network  Technologies  (CSNT),  2011 
International Conference on, 2011, pp. 665-667. 

[27]  K.  Ren,  C.  Wang,  and  Q.  Wang,  "Security 
Internet 

challenges 
Computing, IEEE, vol. 16, pp. 69-73, 2012. 

the  public 

cloud," 

for 

[28]  S. Subashini and V. Kavitha, "A survey on security 
issues 
in  service  delivery  models  of  cloud 
computing,"  Journal  of  Network  and  Computer 
Applications, vol. 34, pp. 1-11, 2011. 

[29]  U.  Dombrowski  and  T.  Zahn,  "Design  of  a  lean 
development framework," in Industrial Engineering 
and  Engineering  Management (IEEM), 2011 IEEE 
International Conference on, 2011, pp. 1917-1921. 
[30]  T. Ohno, Toyota production system: beyond large-

scale production: Productivity press, 1988. 

[31]  IEEE.Std.828,  "IEEE  Standard  for  Configuration 
Management 
Software 
Engineering,"  IEEE  Std  828-2012  (Revision  of 
IEEE Std 828-2005), pp. 1-71, 2012. 

Systems 

and 

in 

[32]  M.  Poppendieck  and  T.  Poppendieck,  Lean 
software  development:  An  agile  toolkit:  Addison-
Wesley Professional, 2003. 

[33]  K.  M.  Eisenhardt,  "Building  Theories  from  Case 
Study  Research.  ,"  The  Academy  of  Management 
Review, vol. 14, pp. 532-550, 1989. 

[34]  K.  M.  Eisenhardt  and  M.  E.  Graebner,  "Theory 
and 
Building 
Challenges,"  The  Academy  of  Management 
Journal, pp. 25-32, 2007. 

from  Cases:  Opportunities 

[35]  K.  Ohashi,  H.  Kurihara,  Y.  Tananaka,  and  R. 
Yamamoto,  "A  means  of  establishing  traceability 
based  on  a  UML  model  in  business  application 
development," 
in  Requirements  Engineering 
Conference  (RE),  2011  19th  IEEE  International, 
2011, pp. 279-284. 

[36]  C. Okoli and S. D. Pawlowski, "The Delphi method 
as 
example,  design 
considerations  and  applications,"  Information  & 
Management, vol. 42, pp. 15-29, 2004. 

research 

tool: 

an 

a 

[37]  B. R. Staats, D. J. Brunner, and D. M. Upton, "Lean 
principles, learning, and knowledge work: Evidence 
from  a  software  services  provider,"  Journal  of 

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

Operations  Management,  vol.  29,  pp.  376-390, 
2011. 

[38]  C. 

on 

Jian'an, 

"Research 

and 
empowerment  process  to  achieve  self-management 
team,"  in  Wireless  Communications,  Networking 
and  Mobile  Computing,  2008.  WiCOM'08.  4th 
International Conference on, 2008, pp. 1-5. 

strategies 

[39]  K.  Hiranabe, 

"Kanban  applied 

software 
development: From agile to lean," published online 
at<  http://www.  infoq.  com/articles/hiranabe-lean-
agile-kanban, 2008. 

to 

[40]  D.  J.  Teece,  G.  Pisano,  and  A.  Shuen,  "Dynamic 
capabilities  and  strategic  management,"  Strategic 
management journal, vol. 18, pp. 509-533, 1997. 

 ACKNOWLEDGEMENT 

This  research  work  has  been  partially  sponsored 
by RMIT University. Also this work has benefited greatly 
from  discussions  with  School  of  Mathematical  and  Geo-
spatial Sciences RMIT University for their constant guide-
lines  on  statistics  and  research  methods  applied  in  the 
study. 

AUTHOR BIOGRAPHIES 

Joan  Richardson  has  been  an  academic  for  the 
last  20  years.  She  completed  a  PhD  on  “An  episode  of 
change  in  a  contemporary  higher  education  setting”  and 
has  published  widely  on  IT  education  issues.  She  has 
completed  a  number  of  learning  and  teaching  projects 
funded  by  Learning  and  Teaching  Infrastructure  Funds 
and was awarded with an Australian Learning and Teach-
ing Council (ALTC) citation in 2010. She is the main au-
thor  of  the  book  Business  Computing  1,  which  is  to  date 
an  innovation  in  learning  and  teaching  with  material  pre-
sented on CD Rom, websites and a set of online resources. 
Dr. Joan has worked with Pearson Education Australia to 
produce  the text book, and has been working on learning 
and  teaching  funded  projects  to  innovate  learning  re-
sources. She also supervises PhD students and is the depu-
ty Head of School responsible for all Learning and Teach-
ing matters. 

 
Usman Durrani is currently doing his PhD from 
School of Business Information Technology and Logistics 
RMIT  University  in  Melbourne,  Australia.  He  is  a  sea-
soned  management  consultant,  working  in  the  area  of 
software  configuration  management  for  more than twelve 
years.  He  has  been  involved  in  many  high-tech  govern-
ment  and  private  projects  in  US,  China,  Australia,  and 
Pakistan.  His  research  interests  include  agile  software 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

52

LEAN CMS IMPLEMENTATION FOR THE GOVERNANCE 
 
 
 

development  methodologies  software  configuration  man-
agement, lean thinking concepts and principles, and man-
agement  and  control  aspects  of  cloud  computing.  Mr. 
Usman  has  got  two  Masters  Degrees  (CS  &  IT)  and  a 
Bachelor  Degree  in  2003,  2000  and  1997  respectively 
from RMIT University Australia, UCP Pakistan and Pun-
jab University Pakistan. He also holds international certi-
fications, such as, PMP, and ITIL. 

 
Zijad Pita received his PhD and Master’s degree 
from  RMIT  University  in  Australia.  He  was  awarded  the 
most  outstanding  academic  performance  in  the  Master  of 
Business in Information Technology, RMIT 2000. He has 
held numerous positions in various industries and current-
ly a lecturer in the School of Business Information Tech-
nology and Logistics at RMIT University. He has present-
ed papers at national and international conferences in Eu-
rope and Australia. His research in the SISP area is due to 
be  published  in  a  book  Strategic  Information  Manage-
ment.  His  research  interests  include  strategic  information 
systems  planning,  the  modeling  and  simulation  of  com-
plex  systems,  decision  support  systems  and  knowledge 
management. 

Journal of Information Technology Management Volume XXV, Number 1, 2014 
 

53

