Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

ENERGY EFFICIENT DATA 
TRAFFIC MANAGEMENT IN 

MOBILE CLOUD COMPUTING 

Bharath V1, Priyadarsini K2 

 

1Department of CSE, SRM University, bharath10feb@gmail.com  
2 Department of CSE, SRM University, priyadarsinikk@gmail.com 

 

 

Abstract 

 
The cloud heralds a new era of computing where application services are provided through the Internet. 
Cloud computing can enhance the computing capability of mobile systems, but is it the ultimate solution 
for  extending  such  system’s  battery  lifetimes.  Cloud  computing1  is  a  new  paradigm  in  which  computing 
resources  such  as  processing,  memory,  and  storage  are  not  physically  present  at  the  user’s  location. 
Instead, a service provider owns and manages these resources, and users access them via the Internet. For 
example,  Amazon  Web  Services  lets  users  store  personal  data  via  its  Simple  Storage  Service  (S3)  and 
perform  computations  on  stored  data  using  the  Elastic  Compute  Cloud  (EC2).  This  type  of  computing 
provides  many  advantages  for  businesses—including  low  initial  capital  investment,  shorter  start-up  time 
for  new  services,  lower  maintenance  and  operation  costs,  higher  utilization  through  virtualization,  and 
easier  disaster  recovery—that  make  cloud  computing  an attractive  option.  Reports  suggest  that  there  are 
several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud.1,  2.  The  primary  constraints  for 
mobile computing are limited energy and wireless bandwidth. Cloud computing can provide energy savings 
as a service to mobile users, though it also poses some unique challenges. 

Keywords: Feed Cloud (FC), Feed Base (FB), Organizer, Collector, Temporary Feed Base 

 

 
1. INTRODUCTION 

Energy  efficiency  is  a  fundamental  consideration  for  mobile  devices.  Cloud  computing  has  the 
potential  to  save  mobile  client  energy  but  the  savings  from  offloading  the  computation  need  to  exceed  the 
energy  cost  of  the  additional  communication.  Existing  studies  thus  focus  on  determining  whether  to  offload 
computation by predicting the relationships among these three factors. The computation offloading depends on 
the  wireless  bandwidth  B,  the  amount  of  computation  to  be  performed  C,  and  the  amount  of  data  to  be 
transmitted  D.  In  proposed  system  we  identified  a  service  provider  owns  and  manages  resources  (such  as 
processing,  memory,  storage),  and  users  access  them  via  the  Internet.  For  example,  Amazon  Web  Services 
Simple  Storage  Service  (S3):  let  users  store  personal  data,  Elastic  Compute  Cloud  (EC2):  perform 
computations  on  stored  data. There  are  several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud. 
The primary constraints for mobile computing are limited energy and wireless bandwidth. 

 
2. SYSTEM DESIGN 

Feed cloud (FC), which is the key role of feed prefetching and pushing. In the FC, there is the main 
feed base (FB), which stores all pre fetched feed contents, including the XML-based updates of the feed and all 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       59 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

ENERGY EFFICIENT DATA 
TRAFFIC MANAGEMENT IN 

MOBILE CLOUD COMPUTING 

Bharath V1, Priyadarsini K2 

 

1Department of CSE, SRM University, bharath10feb@gmail.com  
2 Department of CSE, SRM University, priyadarsinikk@gmail.com 

 

 

Abstract 

 
The cloud heralds a new era of computing where application services are provided through the Internet. 
Cloud computing can enhance the computing capability of mobile systems, but is it the ultimate solution 
for  extending  such  system’s  battery  lifetimes.  Cloud  computing1  is  a  new  paradigm  in  which  computing 
resources  such  as  processing,  memory,  and  storage  are  not  physically  present  at  the  user’s  location. 
Instead, a service provider owns and manages these resources, and users access them via the Internet. For 
example,  Amazon  Web  Services  lets  users  store  personal  data  via  its  Simple  Storage  Service  (S3)  and 
perform  computations  on  stored  data  using  the  Elastic  Compute  Cloud  (EC2).  This  type  of  computing 
provides  many  advantages  for  businesses—including  low  initial  capital  investment,  shorter  start-up  time 
for  new  services,  lower  maintenance  and  operation  costs,  higher  utilization  through  virtualization,  and 
easier  disaster  recovery—that  make  cloud  computing  an attractive  option.  Reports  suggest  that  there  are 
several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud.1,  2.  The  primary  constraints  for 
mobile computing are limited energy and wireless bandwidth. Cloud computing can provide energy savings 
as a service to mobile users, though it also poses some unique challenges. 

Keywords: Feed Cloud (FC), Feed Base (FB), Organizer, Collector, Temporary Feed Base 

 

 
1. INTRODUCTION 

Energy  efficiency  is  a  fundamental  consideration  for  mobile  devices.  Cloud  computing  has  the 
potential  to  save  mobile  client  energy  but  the  savings  from  offloading  the  computation  need  to  exceed  the 
energy  cost  of  the  additional  communication.  Existing  studies  thus  focus  on  determining  whether  to  offload 
computation by predicting the relationships among these three factors. The computation offloading depends on 
the  wireless  bandwidth  B,  the  amount  of  computation  to  be  performed  C,  and  the  amount  of  data  to  be 
transmitted  D.  In  proposed  system  we  identified  a  service  provider  owns  and  manages  resources  (such  as 
processing,  memory,  storage),  and  users  access  them  via  the  Internet.  For  example,  Amazon  Web  Services 
Simple  Storage  Service  (S3):  let  users  store  personal  data,  Elastic  Compute  Cloud  (EC2):  perform 
computations  on  stored  data. There  are  several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud. 
The primary constraints for mobile computing are limited energy and wireless bandwidth. 

 
2. SYSTEM DESIGN 

Feed cloud (FC), which is the key role of feed prefetching and pushing. In the FC, there is the main 
feed base (FB), which stores all pre fetched feed contents, including the XML-based updates of the feed and all 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       59 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
text, image, and multimedia contents of the original website. There is also a tempFB, which temporarily stores 
new feeds, and once it is accessed by a required number of users, it will be moved to FB.  

There is the organizer to make a summary of all RSSs of all users by filtering out duplicated ones, and 
then the collector will fetch the RSS updates and the original content from the feed content SPs. In particular, 
for  each  active  subscribing  user,  the  cloud  virtualizes  a  smart  agent  called  subFC  to  monitor  the  user  RSS 
requirement, as well as the wireless link quality, and then to decide how to request the RSS content and how to 
push  content  to  the  mobile  user.  Due  to  the  elastic  computation  of  dynamic  resource  allocation  of  cloud 
computing, FCs with subFCs is working with optimal performance adaptively to the user demands. 

Figure 1: PreFeed 

 

In PreFeed, users first share their subscribed RSS lists to the cloud agent subFC, which will report to 
FC’s  organizer  to  shrink  the  duplicated  RSSs  (due  to  the  disparity  of  the  RSS  popularity)  with  the  requests 
from other users. Due to the disparity of RSS popularity, it is expected that many duplicated subscriptions will 
be filtered out and the redundant bandwidth and storage consumption will be maximally reduced. Each subFC 
will evaluate the update frequency of each RSS feed of each user and then carry out prefetching feed content 
periodically. The RSS feed is only an XML-based file containing the URL address of the RSS site, and if we 
take  HTML  request  to  that  address,  a  list  of  up-to-date  news  in  format  of  abstract  will  be  returned.  The 
collector  will  not  only  fetch  the  abstracts  of  the  RSS  updates  but  also  parse  the  HTML  source  code  of  the 
original  website  of  the  specified  document  in  order  to  obtain  the  texts,  images,  and  even  embedded  videos. 
Once all the files of the document are obtained, they will be stored in tempFC by extending new names with 
suffixes while the controller will update the file database FB. The naming system can be referred to the Named 
Data  Networking  architecture.  Anytime  any  new  request  arrives  from  subFC,  the  FC  will  check  the  tempFB 
and  FB  to  check  if  the  needed  file  is  already  cached  by  maximal  prefix  matching.  If  so,  it  will  be  directly 
reused. 

Every user has her own habit on mobile reading while she may be also in varying mobility conditions. 
Furthermore, the cellular link condition is fluctuating all the time. So how to find an appropriate time to push 
the content to the user while many people prefer to not to use cellular data plan but only access to free Wi-Fi 
for obtaining the RSS contents. When link quality is bad, they should not refresh for new RSS updates due to 
large amount of energy consumption. Therefore, the mobile client at user’s device will periodically report the 
link condition (whether it is connected to 3G/4G or to Wi-Fi and whether the signal is good or bad). Hence, the 
cloud  agent  subFC  will  check  the  availability.  The  system  has  been  identified  to  have  the  following  Saving 
Energy for Mobile Systems, Offloading Computation to Save Energy, Making Computation Offloading More 
Attractive & Challenges and Possible Solution. 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       60 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

ENERGY EFFICIENT DATA 
TRAFFIC MANAGEMENT IN 

MOBILE CLOUD COMPUTING 

Bharath V1, Priyadarsini K2 

 

1Department of CSE, SRM University, bharath10feb@gmail.com  
2 Department of CSE, SRM University, priyadarsinikk@gmail.com 

 

 

Abstract 

 
The cloud heralds a new era of computing where application services are provided through the Internet. 
Cloud computing can enhance the computing capability of mobile systems, but is it the ultimate solution 
for  extending  such  system’s  battery  lifetimes.  Cloud  computing1  is  a  new  paradigm  in  which  computing 
resources  such  as  processing,  memory,  and  storage  are  not  physically  present  at  the  user’s  location. 
Instead, a service provider owns and manages these resources, and users access them via the Internet. For 
example,  Amazon  Web  Services  lets  users  store  personal  data  via  its  Simple  Storage  Service  (S3)  and 
perform  computations  on  stored  data  using  the  Elastic  Compute  Cloud  (EC2).  This  type  of  computing 
provides  many  advantages  for  businesses—including  low  initial  capital  investment,  shorter  start-up  time 
for  new  services,  lower  maintenance  and  operation  costs,  higher  utilization  through  virtualization,  and 
easier  disaster  recovery—that  make  cloud  computing  an attractive  option.  Reports  suggest  that  there  are 
several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud.1,  2.  The  primary  constraints  for 
mobile computing are limited energy and wireless bandwidth. Cloud computing can provide energy savings 
as a service to mobile users, though it also poses some unique challenges. 

Keywords: Feed Cloud (FC), Feed Base (FB), Organizer, Collector, Temporary Feed Base 

 

 
1. INTRODUCTION 

Energy  efficiency  is  a  fundamental  consideration  for  mobile  devices.  Cloud  computing  has  the 
potential  to  save  mobile  client  energy  but  the  savings  from  offloading  the  computation  need  to  exceed  the 
energy  cost  of  the  additional  communication.  Existing  studies  thus  focus  on  determining  whether  to  offload 
computation by predicting the relationships among these three factors. The computation offloading depends on 
the  wireless  bandwidth  B,  the  amount  of  computation  to  be  performed  C,  and  the  amount  of  data  to  be 
transmitted  D.  In  proposed  system  we  identified  a  service  provider  owns  and  manages  resources  (such  as 
processing,  memory,  storage),  and  users  access  them  via  the  Internet.  For  example,  Amazon  Web  Services 
Simple  Storage  Service  (S3):  let  users  store  personal  data,  Elastic  Compute  Cloud  (EC2):  perform 
computations  on  stored  data. There  are  several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud. 
The primary constraints for mobile computing are limited energy and wireless bandwidth. 

 
2. SYSTEM DESIGN 

Feed cloud (FC), which is the key role of feed prefetching and pushing. In the FC, there is the main 
feed base (FB), which stores all pre fetched feed contents, including the XML-based updates of the feed and all 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       59 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
text, image, and multimedia contents of the original website. There is also a tempFB, which temporarily stores 
new feeds, and once it is accessed by a required number of users, it will be moved to FB.  

There is the organizer to make a summary of all RSSs of all users by filtering out duplicated ones, and 
then the collector will fetch the RSS updates and the original content from the feed content SPs. In particular, 
for  each  active  subscribing  user,  the  cloud  virtualizes  a  smart  agent  called  subFC  to  monitor  the  user  RSS 
requirement, as well as the wireless link quality, and then to decide how to request the RSS content and how to 
push  content  to  the  mobile  user.  Due  to  the  elastic  computation  of  dynamic  resource  allocation  of  cloud 
computing, FCs with subFCs is working with optimal performance adaptively to the user demands. 

Figure 1: PreFeed 

 

In PreFeed, users first share their subscribed RSS lists to the cloud agent subFC, which will report to 
FC’s  organizer  to  shrink  the  duplicated  RSSs  (due  to  the  disparity  of  the  RSS  popularity)  with  the  requests 
from other users. Due to the disparity of RSS popularity, it is expected that many duplicated subscriptions will 
be filtered out and the redundant bandwidth and storage consumption will be maximally reduced. Each subFC 
will evaluate the update frequency of each RSS feed of each user and then carry out prefetching feed content 
periodically. The RSS feed is only an XML-based file containing the URL address of the RSS site, and if we 
take  HTML  request  to  that  address,  a  list  of  up-to-date  news  in  format  of  abstract  will  be  returned.  The 
collector  will  not  only  fetch  the  abstracts  of  the  RSS  updates  but  also  parse  the  HTML  source  code  of  the 
original  website  of  the  specified  document  in  order  to  obtain  the  texts,  images,  and  even  embedded  videos. 
Once all the files of the document are obtained, they will be stored in tempFC by extending new names with 
suffixes while the controller will update the file database FB. The naming system can be referred to the Named 
Data  Networking  architecture.  Anytime  any  new  request  arrives  from  subFC,  the  FC  will  check  the  tempFB 
and  FB  to  check  if  the  needed  file  is  already  cached  by  maximal  prefix  matching.  If  so,  it  will  be  directly 
reused. 

Every user has her own habit on mobile reading while she may be also in varying mobility conditions. 
Furthermore, the cellular link condition is fluctuating all the time. So how to find an appropriate time to push 
the content to the user while many people prefer to not to use cellular data plan but only access to free Wi-Fi 
for obtaining the RSS contents. When link quality is bad, they should not refresh for new RSS updates due to 
large amount of energy consumption. Therefore, the mobile client at user’s device will periodically report the 
link condition (whether it is connected to 3G/4G or to Wi-Fi and whether the signal is good or bad). Hence, the 
cloud  agent  subFC  will  check  the  availability.  The  system  has  been  identified  to  have  the  following  Saving 
Energy for Mobile Systems, Offloading Computation to Save Energy, Making Computation Offloading More 
Attractive & Challenges and Possible Solution. 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       60 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
2.1 SAVING ENERGY FOR MOBILE SYSTEM 

Various  studies  have  identified  longer  battery  lifetime  as  the  most  desired  feature  of  such  systems. 
Many applications are too computation intensive to perform on a mobile system. If a mobile user wants to use 
such  applications,  the  computation  must  be  performed  in  the  cloud.  Other  applications  can  run  on  a  mobile 
system.  However,  they  consume  significant  amounts  of  energy,  such  as  Image  retrieval,  voice  recognition, 
gaming,  and  navigation.  Eliminate  computation  all  together.  The  mobile  system  does  not  perform  the 
computation. Instead computation is performed somewhere else. 

2.2 OFFLOADING COMPUTATION TO SAVE ENERGY 

 

Client – Server computing: Service providers managing programs running on servers Cloud computing: 

Figure 2: Energy analysis for computation offloading 

 

Allows  cloud  vendors  to  run  arbitrary  applications  from  different  customers  on  virtual  machines. 
Cloud  vendors  thus  provide  computing  cycles,  and  users  can  use  these  cycles  to  reduce  the  amounts  of 
computation on mobile systems and save energy. Cloud computing can save energy for mobile users through 
computation  offloading.  Virtualization:  Lets  applications  from  different  customers  run  on  different  virtual 
machines, thereby providing separation and protection. 

2.3 MAKING COMPUTATION OFFLOADING MORE ATTRACTIVE: 

Energy  saved  by  computation  offloading  through  wireless  bandwidth,  amount  of  computation  to  be 

 
performed, and amount of data to be transmitted. 

Client-Server  Model:  Because  the  server  does  not  already  contain  the  data,  all  the  data  must  be  sent  to  the 
service provider. 

Cloud  Computing:  The  cloud  stores  data  and  performs  computation  on  it.  Google’s  Picasa,  Amazon  S3, 
Amazon EC2. 

2.4 CHALLENGES AND POSSIBLE SOLUTIONS 

Because the data is stored and managed in the cloud, security and privacy settings depend on the IT 
(information technology) management of the cloud provides. Some types of data cannot be stored in the cloud 
without  considering  these  privacy  and  security  implications.  One  possible  solution  is  to  encrypt  data  before 
storage Reliability. A mobile user performing computation in the cloud depends on the wireless network and 
cloud service. 

3. TRAFFIC LOAD CONTROL 

PreFeed  can  find  proper  link  condition  to  push  to  users,  the  total  delay  is  reduced.  Then,  we  test  how  the 
system performs when there are a group of 78 mobile users.  

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       61 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

ENERGY EFFICIENT DATA 
TRAFFIC MANAGEMENT IN 

MOBILE CLOUD COMPUTING 

Bharath V1, Priyadarsini K2 

 

1Department of CSE, SRM University, bharath10feb@gmail.com  
2 Department of CSE, SRM University, priyadarsinikk@gmail.com 

 

 

Abstract 

 
The cloud heralds a new era of computing where application services are provided through the Internet. 
Cloud computing can enhance the computing capability of mobile systems, but is it the ultimate solution 
for  extending  such  system’s  battery  lifetimes.  Cloud  computing1  is  a  new  paradigm  in  which  computing 
resources  such  as  processing,  memory,  and  storage  are  not  physically  present  at  the  user’s  location. 
Instead, a service provider owns and manages these resources, and users access them via the Internet. For 
example,  Amazon  Web  Services  lets  users  store  personal  data  via  its  Simple  Storage  Service  (S3)  and 
perform  computations  on  stored  data  using  the  Elastic  Compute  Cloud  (EC2).  This  type  of  computing 
provides  many  advantages  for  businesses—including  low  initial  capital  investment,  shorter  start-up  time 
for  new  services,  lower  maintenance  and  operation  costs,  higher  utilization  through  virtualization,  and 
easier  disaster  recovery—that  make  cloud  computing  an attractive  option.  Reports  suggest  that  there  are 
several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud.1,  2.  The  primary  constraints  for 
mobile computing are limited energy and wireless bandwidth. Cloud computing can provide energy savings 
as a service to mobile users, though it also poses some unique challenges. 

Keywords: Feed Cloud (FC), Feed Base (FB), Organizer, Collector, Temporary Feed Base 

 

 
1. INTRODUCTION 

Energy  efficiency  is  a  fundamental  consideration  for  mobile  devices.  Cloud  computing  has  the 
potential  to  save  mobile  client  energy  but  the  savings  from  offloading  the  computation  need  to  exceed  the 
energy  cost  of  the  additional  communication.  Existing  studies  thus  focus  on  determining  whether  to  offload 
computation by predicting the relationships among these three factors. The computation offloading depends on 
the  wireless  bandwidth  B,  the  amount  of  computation  to  be  performed  C,  and  the  amount  of  data  to  be 
transmitted  D.  In  proposed  system  we  identified  a  service  provider  owns  and  manages  resources  (such  as 
processing,  memory,  storage),  and  users  access  them  via  the  Internet.  For  example,  Amazon  Web  Services 
Simple  Storage  Service  (S3):  let  users  store  personal  data,  Elastic  Compute  Cloud  (EC2):  perform 
computations  on  stored  data. There  are  several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud. 
The primary constraints for mobile computing are limited energy and wireless bandwidth. 

 
2. SYSTEM DESIGN 

Feed cloud (FC), which is the key role of feed prefetching and pushing. In the FC, there is the main 
feed base (FB), which stores all pre fetched feed contents, including the XML-based updates of the feed and all 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       59 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
text, image, and multimedia contents of the original website. There is also a tempFB, which temporarily stores 
new feeds, and once it is accessed by a required number of users, it will be moved to FB.  

There is the organizer to make a summary of all RSSs of all users by filtering out duplicated ones, and 
then the collector will fetch the RSS updates and the original content from the feed content SPs. In particular, 
for  each  active  subscribing  user,  the  cloud  virtualizes  a  smart  agent  called  subFC  to  monitor  the  user  RSS 
requirement, as well as the wireless link quality, and then to decide how to request the RSS content and how to 
push  content  to  the  mobile  user.  Due  to  the  elastic  computation  of  dynamic  resource  allocation  of  cloud 
computing, FCs with subFCs is working with optimal performance adaptively to the user demands. 

Figure 1: PreFeed 

 

In PreFeed, users first share their subscribed RSS lists to the cloud agent subFC, which will report to 
FC’s  organizer  to  shrink  the  duplicated  RSSs  (due  to  the  disparity  of  the  RSS  popularity)  with  the  requests 
from other users. Due to the disparity of RSS popularity, it is expected that many duplicated subscriptions will 
be filtered out and the redundant bandwidth and storage consumption will be maximally reduced. Each subFC 
will evaluate the update frequency of each RSS feed of each user and then carry out prefetching feed content 
periodically. The RSS feed is only an XML-based file containing the URL address of the RSS site, and if we 
take  HTML  request  to  that  address,  a  list  of  up-to-date  news  in  format  of  abstract  will  be  returned.  The 
collector  will  not  only  fetch  the  abstracts  of  the  RSS  updates  but  also  parse  the  HTML  source  code  of  the 
original  website  of  the  specified  document  in  order  to  obtain  the  texts,  images,  and  even  embedded  videos. 
Once all the files of the document are obtained, they will be stored in tempFC by extending new names with 
suffixes while the controller will update the file database FB. The naming system can be referred to the Named 
Data  Networking  architecture.  Anytime  any  new  request  arrives  from  subFC,  the  FC  will  check  the  tempFB 
and  FB  to  check  if  the  needed  file  is  already  cached  by  maximal  prefix  matching.  If  so,  it  will  be  directly 
reused. 

Every user has her own habit on mobile reading while she may be also in varying mobility conditions. 
Furthermore, the cellular link condition is fluctuating all the time. So how to find an appropriate time to push 
the content to the user while many people prefer to not to use cellular data plan but only access to free Wi-Fi 
for obtaining the RSS contents. When link quality is bad, they should not refresh for new RSS updates due to 
large amount of energy consumption. Therefore, the mobile client at user’s device will periodically report the 
link condition (whether it is connected to 3G/4G or to Wi-Fi and whether the signal is good or bad). Hence, the 
cloud  agent  subFC  will  check  the  availability.  The  system  has  been  identified  to  have  the  following  Saving 
Energy for Mobile Systems, Offloading Computation to Save Energy, Making Computation Offloading More 
Attractive & Challenges and Possible Solution. 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       60 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
2.1 SAVING ENERGY FOR MOBILE SYSTEM 

Various  studies  have  identified  longer  battery  lifetime  as  the  most  desired  feature  of  such  systems. 
Many applications are too computation intensive to perform on a mobile system. If a mobile user wants to use 
such  applications,  the  computation  must  be  performed  in  the  cloud.  Other  applications  can  run  on  a  mobile 
system.  However,  they  consume  significant  amounts  of  energy,  such  as  Image  retrieval,  voice  recognition, 
gaming,  and  navigation.  Eliminate  computation  all  together.  The  mobile  system  does  not  perform  the 
computation. Instead computation is performed somewhere else. 

2.2 OFFLOADING COMPUTATION TO SAVE ENERGY 

 

Client – Server computing: Service providers managing programs running on servers Cloud computing: 

Figure 2: Energy analysis for computation offloading 

 

Allows  cloud  vendors  to  run  arbitrary  applications  from  different  customers  on  virtual  machines. 
Cloud  vendors  thus  provide  computing  cycles,  and  users  can  use  these  cycles  to  reduce  the  amounts  of 
computation on mobile systems and save energy. Cloud computing can save energy for mobile users through 
computation  offloading.  Virtualization:  Lets  applications  from  different  customers  run  on  different  virtual 
machines, thereby providing separation and protection. 

2.3 MAKING COMPUTATION OFFLOADING MORE ATTRACTIVE: 

Energy  saved  by  computation  offloading  through  wireless  bandwidth,  amount  of  computation  to  be 

 
performed, and amount of data to be transmitted. 

Client-Server  Model:  Because  the  server  does  not  already  contain  the  data,  all  the  data  must  be  sent  to  the 
service provider. 

Cloud  Computing:  The  cloud  stores  data  and  performs  computation  on  it.  Google’s  Picasa,  Amazon  S3, 
Amazon EC2. 

2.4 CHALLENGES AND POSSIBLE SOLUTIONS 

Because the data is stored and managed in the cloud, security and privacy settings depend on the IT 
(information technology) management of the cloud provides. Some types of data cannot be stored in the cloud 
without  considering  these  privacy  and  security  implications.  One  possible  solution  is  to  encrypt  data  before 
storage Reliability. A mobile user performing computation in the cloud depends on the wireless network and 
cloud service. 

3. TRAFFIC LOAD CONTROL 

PreFeed  can  find  proper  link  condition  to  push  to  users,  the  total  delay  is  reduced.  Then,  we  test  how  the 
system performs when there are a group of 78 mobile users.  

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       61 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

Figure 3: Traffic load without and with PreFeed. 

 

They access RSS feeds during their daily life, and we evaluate the real traffic via the PreFeed service per day. 
As shown in Fig. 3, the total traffic is the estimated full traffic by assuming if there is no caching, which shows 
traditional  RSS  services  for  multiple  users,  and  the  optimized  traffic  is  the  realistic  traffic  going  through 
PreFeed.  Obviously,  due  to  the  reutilization  of  RSS  content  files  cached  in  subFB/FB,  a  large  portion  of  the 
traffic, around 43%–74%, is reduced. 

 

4   CONCLUSION 

In  this  paper,  we  have  utilized  the  cloud  computing  technology  to  propose  a  new  framework  to 
improve  the  system’s  battery  life  time  for  mobile  users.  PreFeed  consists  of  two  parts,  i.e.,  cloud-assisted 
prefetching,  which  will  proactively  fetch  the  multimedia  content  of  the  RSS  feeds  for  all  subscribed  mobile 
users, and cognitive pushing, which will push the content to mobile users at an appropriate time by evaluating 
the  link  quality  and  user  QoS  requirements.  Furthermore,  the  social  impact  among  users  is  considered.  We 
implement a prototype of the PreFeed framework to evaluate its performance. It is shown that cloud computing 
can effectively facilitate feed prefetching and cognitive pushing for mobile users; a large portion of traffic load 
(around 43%–74%) due to redundant downloads can be reduced. 

 

REFERENCES 

[1] X. Wang, A. V. Vasilakos, M. Chen, Y. Liu, and T. T. Kwon, “A survey of green mobile networks: Opportunities and 
challenges,” ACM/Springer MONET, vol. 17, no. 1, pp. 4–20, Feb. 2012. 
 
[2]  M.  Chen,  “MM-QoS  for  BAN:  Multi-Level  MAC-Layer  QoS  Design  in  Body  Area  Networks,”  in  Proc.  IEEE 
Globecom, Atlanta, GA, USA, Dec. 9–13, 2013. 
 
[3] RSS 2.0 Specification, Advisory R. S. S. Board, Jun. 2007. 
 
[4] Power Law. http://en.wikipedia.org/wiki Power_law 
 
[5] X. Li, J. Yan, Z. Deng, L. Ji, W. Fan, B. Zhang, and Z. Chen, “A Novel Clustering-based RSS Aggregator,” in Proc. 
16th Int. Conf. World Wide Web, 2007, pp. 1309–1310. 
 
[6]  M.  Chen,  Y.Wen,  H.  Jin,  and  V.  Leung,  “Enabling  technologies  for  future  data  center  networking:  A  primer,”  IEEE 
Netw., vol. 27, no. 4, pp. 8–15, Jul. 2013. 
 
[7]  C.  Lai,  H.  Chao,  Y.  Lai,  and  J.  Wan,  “Cloud-assisted  real-time  transrating  for  http  live  streaming,”  IEEE  Wireless 
Commun., vol. 20, no. 3, pp. 62– 70, Jun. 2013. 
 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       62 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

ENERGY EFFICIENT DATA 
TRAFFIC MANAGEMENT IN 

MOBILE CLOUD COMPUTING 

Bharath V1, Priyadarsini K2 

 

1Department of CSE, SRM University, bharath10feb@gmail.com  
2 Department of CSE, SRM University, priyadarsinikk@gmail.com 

 

 

Abstract 

 
The cloud heralds a new era of computing where application services are provided through the Internet. 
Cloud computing can enhance the computing capability of mobile systems, but is it the ultimate solution 
for  extending  such  system’s  battery  lifetimes.  Cloud  computing1  is  a  new  paradigm  in  which  computing 
resources  such  as  processing,  memory,  and  storage  are  not  physically  present  at  the  user’s  location. 
Instead, a service provider owns and manages these resources, and users access them via the Internet. For 
example,  Amazon  Web  Services  lets  users  store  personal  data  via  its  Simple  Storage  Service  (S3)  and 
perform  computations  on  stored  data  using  the  Elastic  Compute  Cloud  (EC2).  This  type  of  computing 
provides  many  advantages  for  businesses—including  low  initial  capital  investment,  shorter  start-up  time 
for  new  services,  lower  maintenance  and  operation  costs,  higher  utilization  through  virtualization,  and 
easier  disaster  recovery—that  make  cloud  computing  an attractive  option.  Reports  suggest  that  there  are 
several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud.1,  2.  The  primary  constraints  for 
mobile computing are limited energy and wireless bandwidth. Cloud computing can provide energy savings 
as a service to mobile users, though it also poses some unique challenges. 

Keywords: Feed Cloud (FC), Feed Base (FB), Organizer, Collector, Temporary Feed Base 

 

 
1. INTRODUCTION 

Energy  efficiency  is  a  fundamental  consideration  for  mobile  devices.  Cloud  computing  has  the 
potential  to  save  mobile  client  energy  but  the  savings  from  offloading  the  computation  need  to  exceed  the 
energy  cost  of  the  additional  communication.  Existing  studies  thus  focus  on  determining  whether  to  offload 
computation by predicting the relationships among these three factors. The computation offloading depends on 
the  wireless  bandwidth  B,  the  amount  of  computation  to  be  performed  C,  and  the  amount  of  data  to  be 
transmitted  D.  In  proposed  system  we  identified  a  service  provider  owns  and  manages  resources  (such  as 
processing,  memory,  storage),  and  users  access  them  via  the  Internet.  For  example,  Amazon  Web  Services 
Simple  Storage  Service  (S3):  let  users  store  personal  data,  Elastic  Compute  Cloud  (EC2):  perform 
computations  on  stored  data. There  are  several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud. 
The primary constraints for mobile computing are limited energy and wireless bandwidth. 

 
2. SYSTEM DESIGN 

Feed cloud (FC), which is the key role of feed prefetching and pushing. In the FC, there is the main 
feed base (FB), which stores all pre fetched feed contents, including the XML-based updates of the feed and all 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       59 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
text, image, and multimedia contents of the original website. There is also a tempFB, which temporarily stores 
new feeds, and once it is accessed by a required number of users, it will be moved to FB.  

There is the organizer to make a summary of all RSSs of all users by filtering out duplicated ones, and 
then the collector will fetch the RSS updates and the original content from the feed content SPs. In particular, 
for  each  active  subscribing  user,  the  cloud  virtualizes  a  smart  agent  called  subFC  to  monitor  the  user  RSS 
requirement, as well as the wireless link quality, and then to decide how to request the RSS content and how to 
push  content  to  the  mobile  user.  Due  to  the  elastic  computation  of  dynamic  resource  allocation  of  cloud 
computing, FCs with subFCs is working with optimal performance adaptively to the user demands. 

Figure 1: PreFeed 

 

In PreFeed, users first share their subscribed RSS lists to the cloud agent subFC, which will report to 
FC’s  organizer  to  shrink  the  duplicated  RSSs  (due  to  the  disparity  of  the  RSS  popularity)  with  the  requests 
from other users. Due to the disparity of RSS popularity, it is expected that many duplicated subscriptions will 
be filtered out and the redundant bandwidth and storage consumption will be maximally reduced. Each subFC 
will evaluate the update frequency of each RSS feed of each user and then carry out prefetching feed content 
periodically. The RSS feed is only an XML-based file containing the URL address of the RSS site, and if we 
take  HTML  request  to  that  address,  a  list  of  up-to-date  news  in  format  of  abstract  will  be  returned.  The 
collector  will  not  only  fetch  the  abstracts  of  the  RSS  updates  but  also  parse  the  HTML  source  code  of  the 
original  website  of  the  specified  document  in  order  to  obtain  the  texts,  images,  and  even  embedded  videos. 
Once all the files of the document are obtained, they will be stored in tempFC by extending new names with 
suffixes while the controller will update the file database FB. The naming system can be referred to the Named 
Data  Networking  architecture.  Anytime  any  new  request  arrives  from  subFC,  the  FC  will  check  the  tempFB 
and  FB  to  check  if  the  needed  file  is  already  cached  by  maximal  prefix  matching.  If  so,  it  will  be  directly 
reused. 

Every user has her own habit on mobile reading while she may be also in varying mobility conditions. 
Furthermore, the cellular link condition is fluctuating all the time. So how to find an appropriate time to push 
the content to the user while many people prefer to not to use cellular data plan but only access to free Wi-Fi 
for obtaining the RSS contents. When link quality is bad, they should not refresh for new RSS updates due to 
large amount of energy consumption. Therefore, the mobile client at user’s device will periodically report the 
link condition (whether it is connected to 3G/4G or to Wi-Fi and whether the signal is good or bad). Hence, the 
cloud  agent  subFC  will  check  the  availability.  The  system  has  been  identified  to  have  the  following  Saving 
Energy for Mobile Systems, Offloading Computation to Save Energy, Making Computation Offloading More 
Attractive & Challenges and Possible Solution. 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       60 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
2.1 SAVING ENERGY FOR MOBILE SYSTEM 

Various  studies  have  identified  longer  battery  lifetime  as  the  most  desired  feature  of  such  systems. 
Many applications are too computation intensive to perform on a mobile system. If a mobile user wants to use 
such  applications,  the  computation  must  be  performed  in  the  cloud.  Other  applications  can  run  on  a  mobile 
system.  However,  they  consume  significant  amounts  of  energy,  such  as  Image  retrieval,  voice  recognition, 
gaming,  and  navigation.  Eliminate  computation  all  together.  The  mobile  system  does  not  perform  the 
computation. Instead computation is performed somewhere else. 

2.2 OFFLOADING COMPUTATION TO SAVE ENERGY 

 

Client – Server computing: Service providers managing programs running on servers Cloud computing: 

Figure 2: Energy analysis for computation offloading 

 

Allows  cloud  vendors  to  run  arbitrary  applications  from  different  customers  on  virtual  machines. 
Cloud  vendors  thus  provide  computing  cycles,  and  users  can  use  these  cycles  to  reduce  the  amounts  of 
computation on mobile systems and save energy. Cloud computing can save energy for mobile users through 
computation  offloading.  Virtualization:  Lets  applications  from  different  customers  run  on  different  virtual 
machines, thereby providing separation and protection. 

2.3 MAKING COMPUTATION OFFLOADING MORE ATTRACTIVE: 

Energy  saved  by  computation  offloading  through  wireless  bandwidth,  amount  of  computation  to  be 

 
performed, and amount of data to be transmitted. 

Client-Server  Model:  Because  the  server  does  not  already  contain  the  data,  all  the  data  must  be  sent  to  the 
service provider. 

Cloud  Computing:  The  cloud  stores  data  and  performs  computation  on  it.  Google’s  Picasa,  Amazon  S3, 
Amazon EC2. 

2.4 CHALLENGES AND POSSIBLE SOLUTIONS 

Because the data is stored and managed in the cloud, security and privacy settings depend on the IT 
(information technology) management of the cloud provides. Some types of data cannot be stored in the cloud 
without  considering  these  privacy  and  security  implications.  One  possible  solution  is  to  encrypt  data  before 
storage Reliability. A mobile user performing computation in the cloud depends on the wireless network and 
cloud service. 

3. TRAFFIC LOAD CONTROL 

PreFeed  can  find  proper  link  condition  to  push  to  users,  the  total  delay  is  reduced.  Then,  we  test  how  the 
system performs when there are a group of 78 mobile users.  

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       61 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

Figure 3: Traffic load without and with PreFeed. 

 

They access RSS feeds during their daily life, and we evaluate the real traffic via the PreFeed service per day. 
As shown in Fig. 3, the total traffic is the estimated full traffic by assuming if there is no caching, which shows 
traditional  RSS  services  for  multiple  users,  and  the  optimized  traffic  is  the  realistic  traffic  going  through 
PreFeed.  Obviously,  due  to  the  reutilization  of  RSS  content  files  cached  in  subFB/FB,  a  large  portion  of  the 
traffic, around 43%–74%, is reduced. 

 

4   CONCLUSION 

In  this  paper,  we  have  utilized  the  cloud  computing  technology  to  propose  a  new  framework  to 
improve  the  system’s  battery  life  time  for  mobile  users.  PreFeed  consists  of  two  parts,  i.e.,  cloud-assisted 
prefetching,  which  will  proactively  fetch  the  multimedia  content  of  the  RSS  feeds  for  all  subscribed  mobile 
users, and cognitive pushing, which will push the content to mobile users at an appropriate time by evaluating 
the  link  quality  and  user  QoS  requirements.  Furthermore,  the  social  impact  among  users  is  considered.  We 
implement a prototype of the PreFeed framework to evaluate its performance. It is shown that cloud computing 
can effectively facilitate feed prefetching and cognitive pushing for mobile users; a large portion of traffic load 
(around 43%–74%) due to redundant downloads can be reduced. 

 

REFERENCES 

[1] X. Wang, A. V. Vasilakos, M. Chen, Y. Liu, and T. T. Kwon, “A survey of green mobile networks: Opportunities and 
challenges,” ACM/Springer MONET, vol. 17, no. 1, pp. 4–20, Feb. 2012. 
 
[2]  M.  Chen,  “MM-QoS  for  BAN:  Multi-Level  MAC-Layer  QoS  Design  in  Body  Area  Networks,”  in  Proc.  IEEE 
Globecom, Atlanta, GA, USA, Dec. 9–13, 2013. 
 
[3] RSS 2.0 Specification, Advisory R. S. S. Board, Jun. 2007. 
 
[4] Power Law. http://en.wikipedia.org/wiki Power_law 
 
[5] X. Li, J. Yan, Z. Deng, L. Ji, W. Fan, B. Zhang, and Z. Chen, “A Novel Clustering-based RSS Aggregator,” in Proc. 
16th Int. Conf. World Wide Web, 2007, pp. 1309–1310. 
 
[6]  M.  Chen,  Y.Wen,  H.  Jin,  and  V.  Leung,  “Enabling  technologies  for  future  data  center  networking:  A  primer,”  IEEE 
Netw., vol. 27, no. 4, pp. 8–15, Jul. 2013. 
 
[7]  C.  Lai,  H.  Chao,  Y.  Lai,  and  J.  Wan,  “Cloud-assisted  real-time  transrating  for  http  live  streaming,”  IEEE  Wireless 
Commun., vol. 20, no. 3, pp. 62– 70, Jun. 2013. 
 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       62 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
[8] D. Niu, H. Xu, B. Li, and S. Zhao, “Quality-assured cloud bandwidth autoscaling for video-on-demand applications,” in 
Proc. IEEE INFOCOM, 2012, pp. 460–468. 
 
[9] X.Wang, M. Chen, T. T. Kwon, L. T. Yang, and V. C. M. Leung, “AMESCloud:A framework of adaptive mobile video 
streaming  and  efficient  social  video  sharing  in  the  clouds,”  IEEE  Trans.  Multimedia,  vol.  15,  no.  4,  pp.  811–820,  Feb. 
2013. 
 
[10]  L.  Zhou  and  H.  Wang,  “Toward  blind  scheduling  in  mobile  media  cloud:  Fairness,  simplicity,  and  asymptotic 
optimality,” IEEE Trans. Multimedia, vol. 15, no. 4, pp. 735–746, Jun. 2013. 
 
[11] N. Davies, “The case for VM-based cloudlets in mobile computing,” in IEEE Pervasive Comput., Oct.–Dec. 2009, vol. 
8, no. 4, pp. 14–23. 
 
[12] B. Aggarwal, N. Spring, and A. Schulman, “Stratus: Energy-efficient mobile communication using cloud support,” in 
Proc. ACM SIGCOMM, 2010, pp. 477–478. 
 
[13] C. Ji and J. Zhou, “A study on recommendation features for an RSS reader,” in Proc. Int. Conf. CyberC, Oct. 2010, pp. 
193–198. 
 
[14]  J.  J.  Samper,  P.  A.  Castillo,  L.  Araujo,  J.  J.  Merelo,  Cordón  Ó.,  and  F.  Tricas,  “NectaRSS,  an  intelligent  RSS  feed 
reader,” J. Netw. Comput. Appl., vol. 31, no. 4, pp. 793–806, Nov. 2008. 
 
[15] A. Das, M. Datar, and A. Garg, “Google news personalization: Scalable online collaborative filtering,” in Proc. 16th 
Int. Conf. World Wide Web, 2007, pp. 271–280. 
 
[16] Y. Kim, J. W.  Lee, S. R. Park, and B. C. Choi, “Mobile advertisement system using  data push scheduling based on 
user preference,” in Wireless Telecommun. Symp., 2009, pp. 1–5. 
 
[17] G. Cugola and H.-A. Jacobsen, “Using publish/subscribe middleware for mobile systems,” ACM SIGMOBILE Mobile 
Comput. Commun. Rev., vol. 6, no. 4, pp. 25–33, Oct. 2002. 
 
[18] S. Zhao, P. P. C. Lee, J. C. S. Lui, X. Guan, X. Ma, and J. Tao, “Cloud based push-styled mobile botnets: A case study 
of exploiting the cloud to device messaging service,” in Proc. ACSAC, Dec. 2012, pp. 119–128. 
 
[19]  G.  Yunwen,  W.  Shaochun,  Y.  Bowen,  and  L.  Jiazheng,  “The  methods  of  data  prefetching  based  on  user  model  in 
cloud computing,” in Proc. Int. Conf. iThings/CPSCom, Oct. 2011. 
 
[20]  B.  Cheluvaraju,  A.  S.  R.  Kousik,  and  S.  Rao,  “Anticipatory  retrieval  and  caching  of  data  for  mobile  devices  in 
variable-bandwidth environments,” in Proc. IEEE Int. SysCon, Apr. 2011, pp. 531–537. 
 
[21] B. Li and X. Jia, “Caching and prefetching for web content distribution,” in Proc. Comput. Sci. Eng., Jul./Aug. 2004, 
vol. 6, no. 4, pp. 54–59. 
 
[22] B. D. Higgins, J. Flinn, T. J. Giuli, B. Noble, C. Peplin, and D. Watson, “Informed mobile prefetching,” in Proc. ACM 
MobiSys, 2012, pp. 1–14. 
 
[23] Y. Yang and H. Zhang, “HTML page analysis based on visual cues,” in Proc. 6th Int. Conf. Document Anal. Recog., 
2001, p. 859. 
 
[24] B. Han, X. Wang, N. Choi, T. T. Kwon, and Y. Choi, “AMVS-NDN: Adaptive mobile video streaming and sharing in 
wireless named data networking,” in Proc. INFOCOM NOMEN Workshop, 2013, pp. 1–6. 
 
[25] X. Wang, T. T. Kwon, Y. Choi, H. Wang, and J. Liu, “Cloud-assisted adaptive video streaming and social-aware video 
prefetching for mobile users,” IEEE Wireless Commun. Mag., vol. 20, no. 3, pp. 72–79, 
Jun. 2013. 
 
 

 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       63 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

ENERGY EFFICIENT DATA 
TRAFFIC MANAGEMENT IN 

MOBILE CLOUD COMPUTING 

Bharath V1, Priyadarsini K2 

 

1Department of CSE, SRM University, bharath10feb@gmail.com  
2 Department of CSE, SRM University, priyadarsinikk@gmail.com 

 

 

Abstract 

 
The cloud heralds a new era of computing where application services are provided through the Internet. 
Cloud computing can enhance the computing capability of mobile systems, but is it the ultimate solution 
for  extending  such  system’s  battery  lifetimes.  Cloud  computing1  is  a  new  paradigm  in  which  computing 
resources  such  as  processing,  memory,  and  storage  are  not  physically  present  at  the  user’s  location. 
Instead, a service provider owns and manages these resources, and users access them via the Internet. For 
example,  Amazon  Web  Services  lets  users  store  personal  data  via  its  Simple  Storage  Service  (S3)  and 
perform  computations  on  stored  data  using  the  Elastic  Compute  Cloud  (EC2).  This  type  of  computing 
provides  many  advantages  for  businesses—including  low  initial  capital  investment,  shorter  start-up  time 
for  new  services,  lower  maintenance  and  operation  costs,  higher  utilization  through  virtualization,  and 
easier  disaster  recovery—that  make  cloud  computing  an attractive  option.  Reports  suggest  that  there  are 
several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud.1,  2.  The  primary  constraints  for 
mobile computing are limited energy and wireless bandwidth. Cloud computing can provide energy savings 
as a service to mobile users, though it also poses some unique challenges. 

Keywords: Feed Cloud (FC), Feed Base (FB), Organizer, Collector, Temporary Feed Base 

 

 
1. INTRODUCTION 

Energy  efficiency  is  a  fundamental  consideration  for  mobile  devices.  Cloud  computing  has  the 
potential  to  save  mobile  client  energy  but  the  savings  from  offloading  the  computation  need  to  exceed  the 
energy  cost  of  the  additional  communication.  Existing  studies  thus  focus  on  determining  whether  to  offload 
computation by predicting the relationships among these three factors. The computation offloading depends on 
the  wireless  bandwidth  B,  the  amount  of  computation  to  be  performed  C,  and  the  amount  of  data  to  be 
transmitted  D.  In  proposed  system  we  identified  a  service  provider  owns  and  manages  resources  (such  as 
processing,  memory,  storage),  and  users  access  them  via  the  Internet.  For  example,  Amazon  Web  Services 
Simple  Storage  Service  (S3):  let  users  store  personal  data,  Elastic  Compute  Cloud  (EC2):  perform 
computations  on  stored  data. There  are  several  benefits  in  shifting  computing  from  the  desktop  to  the  cloud. 
The primary constraints for mobile computing are limited energy and wireless bandwidth. 

 
2. SYSTEM DESIGN 

Feed cloud (FC), which is the key role of feed prefetching and pushing. In the FC, there is the main 
feed base (FB), which stores all pre fetched feed contents, including the XML-based updates of the feed and all 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       59 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
text, image, and multimedia contents of the original website. There is also a tempFB, which temporarily stores 
new feeds, and once it is accessed by a required number of users, it will be moved to FB.  

There is the organizer to make a summary of all RSSs of all users by filtering out duplicated ones, and 
then the collector will fetch the RSS updates and the original content from the feed content SPs. In particular, 
for  each  active  subscribing  user,  the  cloud  virtualizes  a  smart  agent  called  subFC  to  monitor  the  user  RSS 
requirement, as well as the wireless link quality, and then to decide how to request the RSS content and how to 
push  content  to  the  mobile  user.  Due  to  the  elastic  computation  of  dynamic  resource  allocation  of  cloud 
computing, FCs with subFCs is working with optimal performance adaptively to the user demands. 

Figure 1: PreFeed 

 

In PreFeed, users first share their subscribed RSS lists to the cloud agent subFC, which will report to 
FC’s  organizer  to  shrink  the  duplicated  RSSs  (due  to  the  disparity  of  the  RSS  popularity)  with  the  requests 
from other users. Due to the disparity of RSS popularity, it is expected that many duplicated subscriptions will 
be filtered out and the redundant bandwidth and storage consumption will be maximally reduced. Each subFC 
will evaluate the update frequency of each RSS feed of each user and then carry out prefetching feed content 
periodically. The RSS feed is only an XML-based file containing the URL address of the RSS site, and if we 
take  HTML  request  to  that  address,  a  list  of  up-to-date  news  in  format  of  abstract  will  be  returned.  The 
collector  will  not  only  fetch  the  abstracts  of  the  RSS  updates  but  also  parse  the  HTML  source  code  of  the 
original  website  of  the  specified  document  in  order  to  obtain  the  texts,  images,  and  even  embedded  videos. 
Once all the files of the document are obtained, they will be stored in tempFC by extending new names with 
suffixes while the controller will update the file database FB. The naming system can be referred to the Named 
Data  Networking  architecture.  Anytime  any  new  request  arrives  from  subFC,  the  FC  will  check  the  tempFB 
and  FB  to  check  if  the  needed  file  is  already  cached  by  maximal  prefix  matching.  If  so,  it  will  be  directly 
reused. 

Every user has her own habit on mobile reading while she may be also in varying mobility conditions. 
Furthermore, the cellular link condition is fluctuating all the time. So how to find an appropriate time to push 
the content to the user while many people prefer to not to use cellular data plan but only access to free Wi-Fi 
for obtaining the RSS contents. When link quality is bad, they should not refresh for new RSS updates due to 
large amount of energy consumption. Therefore, the mobile client at user’s device will periodically report the 
link condition (whether it is connected to 3G/4G or to Wi-Fi and whether the signal is good or bad). Hence, the 
cloud  agent  subFC  will  check  the  availability.  The  system  has  been  identified  to  have  the  following  Saving 
Energy for Mobile Systems, Offloading Computation to Save Energy, Making Computation Offloading More 
Attractive & Challenges and Possible Solution. 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       60 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
2.1 SAVING ENERGY FOR MOBILE SYSTEM 

Various  studies  have  identified  longer  battery  lifetime  as  the  most  desired  feature  of  such  systems. 
Many applications are too computation intensive to perform on a mobile system. If a mobile user wants to use 
such  applications,  the  computation  must  be  performed  in  the  cloud.  Other  applications  can  run  on  a  mobile 
system.  However,  they  consume  significant  amounts  of  energy,  such  as  Image  retrieval,  voice  recognition, 
gaming,  and  navigation.  Eliminate  computation  all  together.  The  mobile  system  does  not  perform  the 
computation. Instead computation is performed somewhere else. 

2.2 OFFLOADING COMPUTATION TO SAVE ENERGY 

 

Client – Server computing: Service providers managing programs running on servers Cloud computing: 

Figure 2: Energy analysis for computation offloading 

 

Allows  cloud  vendors  to  run  arbitrary  applications  from  different  customers  on  virtual  machines. 
Cloud  vendors  thus  provide  computing  cycles,  and  users  can  use  these  cycles  to  reduce  the  amounts  of 
computation on mobile systems and save energy. Cloud computing can save energy for mobile users through 
computation  offloading.  Virtualization:  Lets  applications  from  different  customers  run  on  different  virtual 
machines, thereby providing separation and protection. 

2.3 MAKING COMPUTATION OFFLOADING MORE ATTRACTIVE: 

Energy  saved  by  computation  offloading  through  wireless  bandwidth,  amount  of  computation  to  be 

 
performed, and amount of data to be transmitted. 

Client-Server  Model:  Because  the  server  does  not  already  contain  the  data,  all  the  data  must  be  sent  to  the 
service provider. 

Cloud  Computing:  The  cloud  stores  data  and  performs  computation  on  it.  Google’s  Picasa,  Amazon  S3, 
Amazon EC2. 

2.4 CHALLENGES AND POSSIBLE SOLUTIONS 

Because the data is stored and managed in the cloud, security and privacy settings depend on the IT 
(information technology) management of the cloud provides. Some types of data cannot be stored in the cloud 
without  considering  these  privacy  and  security  implications.  One  possible  solution  is  to  encrypt  data  before 
storage Reliability. A mobile user performing computation in the cloud depends on the wireless network and 
cloud service. 

3. TRAFFIC LOAD CONTROL 

PreFeed  can  find  proper  link  condition  to  push  to  users,  the  total  delay  is  reduced.  Then,  we  test  how  the 
system performs when there are a group of 78 mobile users.  

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       61 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 

Figure 3: Traffic load without and with PreFeed. 

 

They access RSS feeds during their daily life, and we evaluate the real traffic via the PreFeed service per day. 
As shown in Fig. 3, the total traffic is the estimated full traffic by assuming if there is no caching, which shows 
traditional  RSS  services  for  multiple  users,  and  the  optimized  traffic  is  the  realistic  traffic  going  through 
PreFeed.  Obviously,  due  to  the  reutilization  of  RSS  content  files  cached  in  subFB/FB,  a  large  portion  of  the 
traffic, around 43%–74%, is reduced. 

 

4   CONCLUSION 

In  this  paper,  we  have  utilized  the  cloud  computing  technology  to  propose  a  new  framework  to 
improve  the  system’s  battery  life  time  for  mobile  users.  PreFeed  consists  of  two  parts,  i.e.,  cloud-assisted 
prefetching,  which  will  proactively  fetch  the  multimedia  content  of  the  RSS  feeds  for  all  subscribed  mobile 
users, and cognitive pushing, which will push the content to mobile users at an appropriate time by evaluating 
the  link  quality  and  user  QoS  requirements.  Furthermore,  the  social  impact  among  users  is  considered.  We 
implement a prototype of the PreFeed framework to evaluate its performance. It is shown that cloud computing 
can effectively facilitate feed prefetching and cognitive pushing for mobile users; a large portion of traffic load 
(around 43%–74%) due to redundant downloads can be reduced. 

 

REFERENCES 

[1] X. Wang, A. V. Vasilakos, M. Chen, Y. Liu, and T. T. Kwon, “A survey of green mobile networks: Opportunities and 
challenges,” ACM/Springer MONET, vol. 17, no. 1, pp. 4–20, Feb. 2012. 
 
[2]  M.  Chen,  “MM-QoS  for  BAN:  Multi-Level  MAC-Layer  QoS  Design  in  Body  Area  Networks,”  in  Proc.  IEEE 
Globecom, Atlanta, GA, USA, Dec. 9–13, 2013. 
 
[3] RSS 2.0 Specification, Advisory R. S. S. Board, Jun. 2007. 
 
[4] Power Law. http://en.wikipedia.org/wiki Power_law 
 
[5] X. Li, J. Yan, Z. Deng, L. Ji, W. Fan, B. Zhang, and Z. Chen, “A Novel Clustering-based RSS Aggregator,” in Proc. 
16th Int. Conf. World Wide Web, 2007, pp. 1309–1310. 
 
[6]  M.  Chen,  Y.Wen,  H.  Jin,  and  V.  Leung,  “Enabling  technologies  for  future  data  center  networking:  A  primer,”  IEEE 
Netw., vol. 27, no. 4, pp. 8–15, Jul. 2013. 
 
[7]  C.  Lai,  H.  Chao,  Y.  Lai,  and  J.  Wan,  “Cloud-assisted  real-time  transrating  for  http  live  streaming,”  IEEE  Wireless 
Commun., vol. 20, no. 3, pp. 62– 70, Jun. 2013. 
 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       62 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
[8] D. Niu, H. Xu, B. Li, and S. Zhao, “Quality-assured cloud bandwidth autoscaling for video-on-demand applications,” in 
Proc. IEEE INFOCOM, 2012, pp. 460–468. 
 
[9] X.Wang, M. Chen, T. T. Kwon, L. T. Yang, and V. C. M. Leung, “AMESCloud:A framework of adaptive mobile video 
streaming  and  efficient  social  video  sharing  in  the  clouds,”  IEEE  Trans.  Multimedia,  vol.  15,  no.  4,  pp.  811–820,  Feb. 
2013. 
 
[10]  L.  Zhou  and  H.  Wang,  “Toward  blind  scheduling  in  mobile  media  cloud:  Fairness,  simplicity,  and  asymptotic 
optimality,” IEEE Trans. Multimedia, vol. 15, no. 4, pp. 735–746, Jun. 2013. 
 
[11] N. Davies, “The case for VM-based cloudlets in mobile computing,” in IEEE Pervasive Comput., Oct.–Dec. 2009, vol. 
8, no. 4, pp. 14–23. 
 
[12] B. Aggarwal, N. Spring, and A. Schulman, “Stratus: Energy-efficient mobile communication using cloud support,” in 
Proc. ACM SIGCOMM, 2010, pp. 477–478. 
 
[13] C. Ji and J. Zhou, “A study on recommendation features for an RSS reader,” in Proc. Int. Conf. CyberC, Oct. 2010, pp. 
193–198. 
 
[14]  J.  J.  Samper,  P.  A.  Castillo,  L.  Araujo,  J.  J.  Merelo,  Cordón  Ó.,  and  F.  Tricas,  “NectaRSS,  an  intelligent  RSS  feed 
reader,” J. Netw. Comput. Appl., vol. 31, no. 4, pp. 793–806, Nov. 2008. 
 
[15] A. Das, M. Datar, and A. Garg, “Google news personalization: Scalable online collaborative filtering,” in Proc. 16th 
Int. Conf. World Wide Web, 2007, pp. 271–280. 
 
[16] Y. Kim, J. W.  Lee, S. R. Park, and B. C. Choi, “Mobile advertisement system using  data push scheduling based on 
user preference,” in Wireless Telecommun. Symp., 2009, pp. 1–5. 
 
[17] G. Cugola and H.-A. Jacobsen, “Using publish/subscribe middleware for mobile systems,” ACM SIGMOBILE Mobile 
Comput. Commun. Rev., vol. 6, no. 4, pp. 25–33, Oct. 2002. 
 
[18] S. Zhao, P. P. C. Lee, J. C. S. Lui, X. Guan, X. Ma, and J. Tao, “Cloud based push-styled mobile botnets: A case study 
of exploiting the cloud to device messaging service,” in Proc. ACSAC, Dec. 2012, pp. 119–128. 
 
[19]  G.  Yunwen,  W.  Shaochun,  Y.  Bowen,  and  L.  Jiazheng,  “The  methods  of  data  prefetching  based  on  user  model  in 
cloud computing,” in Proc. Int. Conf. iThings/CPSCom, Oct. 2011. 
 
[20]  B.  Cheluvaraju,  A.  S.  R.  Kousik,  and  S.  Rao,  “Anticipatory  retrieval  and  caching  of  data  for  mobile  devices  in 
variable-bandwidth environments,” in Proc. IEEE Int. SysCon, Apr. 2011, pp. 531–537. 
 
[21] B. Li and X. Jia, “Caching and prefetching for web content distribution,” in Proc. Comput. Sci. Eng., Jul./Aug. 2004, 
vol. 6, no. 4, pp. 54–59. 
 
[22] B. D. Higgins, J. Flinn, T. J. Giuli, B. Noble, C. Peplin, and D. Watson, “Informed mobile prefetching,” in Proc. ACM 
MobiSys, 2012, pp. 1–14. 
 
[23] Y. Yang and H. Zhang, “HTML page analysis based on visual cues,” in Proc. 6th Int. Conf. Document Anal. Recog., 
2001, p. 859. 
 
[24] B. Han, X. Wang, N. Choi, T. T. Kwon, and Y. Choi, “AMVS-NDN: Adaptive mobile video streaming and sharing in 
wireless named data networking,” in Proc. INFOCOM NOMEN Workshop, 2013, pp. 1–6. 
 
[25] X. Wang, T. T. Kwon, Y. Choi, H. Wang, and J. Liu, “Cloud-assisted adaptive video streaming and social-aware video 
prefetching for mobile users,” IEEE Wireless Commun. Mag., vol. 20, no. 3, pp. 72–79, 
Jun. 2013. 
 
 

 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       63 
 

Bharath V et al, International Journal of Computer Science and Mobile Applications, 

 

Vol.2 Issue. 4, April- 2014, pg. 59-64                              ISSN: 2321-8363 

 
A Brief Author Biography  
 
1Bharath  V – Bharath is pursuing MTECH CSE in SRM University  who is interested in Cloud Computing research. He 
holds BE CSE and working in a software concern.  
 
2Priyadarsini K – Priyadarsini is working as an Asst. Professor in SRM University, who currently doing research in Cloud 
is computing. 
 
 

©2014, IJCSMA All Rights Reserved, www.ijcsma.com                                                                       64 
 

