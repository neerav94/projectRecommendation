What can we learn from the accelerometer data?
What can we learn from the accelerometer data?
What can we learn from the accelerometer data?

A close look into privacy
A close look into privacy

Team Member: Devu Manikantan Shila
Team Member: Devu Manikantan Shila

1, 2] were employed. The dataset mainly consists of the raw tri

noise; these characteristics may vary from one activity

second layer, we will identify the user with regard to the identified gait

This project leverages supervised learning techniques such as

? The objective of this project is to apply state-of-the-art
(aka gait) data collected from the wearable devices

Adaboost performed well with identifying activities (
99% for dataset 2) and users (accuracy of 99% for datasets 1 and 2).

also accelerometer mounted at multiple body locations) to recognize
The proposed approach is based on a multi-layer (2-layer)

Abstract: A handful of research efforts nowadays focus on gathering and
A handful of research efforts nowadays focus on gathering and analyzing the data from the
analyzing the data from the
end devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
their solutions based on the identified user patterns
their solutions based on the identified user patterns (e.g., health care industries monitors the walking
(e.g., health care industries monitors the walking
early disease diagnosis). A key question is: what else could we learn from the
what else could we learn from the
pattern of the patients for early disease
data besides the activity pattern? The objective of this project is to apply
art machine learning
devices (chest mounted
techniques on the raw activity (aka gait)
accelerometer and also accelerometer mounted at multiple
recognize the ``user''
layer) classification
performing the specific activity. The proposed approach
problem: (a) In the first layer, we will
layer, we will identify the gait (irrespective of the user) and map into the most
user) and map into the most
probable gait label; (b) In the second
with regard to the identified gait with
a certain level of confidence. This project
supervised learning techniques such as Adaboost,
NB for the multi-layer classification problem. For the experiments, the
SVM, kNN, Random Forest trees, NB
For the experiments, the
datasets from UCI repository [1, 2
employed. The dataset mainly consists of the raw tri-axial
measured in three spatial dimensions x, y and z). The three dimensional data
acceleration (acceleration measured
The three dimensional data
mainly captures the acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
accelerometer device and sensor noise; these
may vary from one activity (or user) to
and serve as a useful measure for distinguishing users and activities. The experime
another and serve as a useful measure for distinguishing users and activities. The experime
and serve as a useful measure for distinguishing users and activities. The experiment results
with identifying activities (accuracy of 82%
showed that Random Forest and Adaboost performed
for dataset 1 and 99% for dataset 2) and users (
tasets 1 and 2). We envision that
this research project will have two key advantages:
this research project will have two key advantages: First, design a machine learning based technique
a machine learning based technique for
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
researchers to think in a new direction: should we randomize or
passwords/PINs. Second, enables
a new direction: should we randomize or
anonymize data in such a manner only the
only the gait pattern can be learned without violating
violating (leaking) the user
privacy?
Approach: The proposed effort mainly encompasses
proposed effort mainly encompasses
three components: (a) data gathering
ring - identifying the
right dataset to use for gait and user classification
and user classification
(`feature’) extraction
(`feature’) extraction-
experiments;
deriving the right set of features
deriving the right set of features for the machine
raw
learning
from the
from the
raw tri-axial
accelerometer data; (c) learning and
earning and cross-validation
of machine learning models: identifying the right set of
: identifying the right set of
and training the data on the “training set” and
models and training the data on the “
validating using “test set”. The figure
. The figure to the right
shows our approach graphically.
Data gathering: We used the publicly
were used to confirm our findings related to
were used to confirm our findings related to gait/activity based user recognition: (dataset #1)
from the wearable accelerometer mounted
accelerometer mounted on four body locations

1, 2]. Two datasets
gait/activity based user recognition: (dataset #1) is obtained
is obtained from the wearable
waist, left thigh, right arm and right ankle [2]. (Dataset #

accelerometer mounted on the chest [1] and (dataset #2) is obtained from the

body locations – waist, left thigh, right arm and right ankle

We used the publicly available datasets from the UCI repository [1,

(b)

signature
signature

algorithms

What can we learn from the accelerometer data?
What can we learn from the accelerometer data?
What can we learn from the accelerometer data?

A close look into privacy
A close look into privacy

Team Member: Devu Manikantan Shila
Team Member: Devu Manikantan Shila

1, 2] were employed. The dataset mainly consists of the raw tri

noise; these characteristics may vary from one activity

second layer, we will identify the user with regard to the identified gait

This project leverages supervised learning techniques such as

? The objective of this project is to apply state-of-the-art
(aka gait) data collected from the wearable devices

Adaboost performed well with identifying activities (
99% for dataset 2) and users (accuracy of 99% for datasets 1 and 2).

also accelerometer mounted at multiple body locations) to recognize
The proposed approach is based on a multi-layer (2-layer)

Abstract: A handful of research efforts nowadays focus on gathering and
A handful of research efforts nowadays focus on gathering and analyzing the data from the
analyzing the data from the
end devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
their solutions based on the identified user patterns
their solutions based on the identified user patterns (e.g., health care industries monitors the walking
(e.g., health care industries monitors the walking
early disease diagnosis). A key question is: what else could we learn from the
what else could we learn from the
pattern of the patients for early disease
data besides the activity pattern? The objective of this project is to apply
art machine learning
devices (chest mounted
techniques on the raw activity (aka gait)
accelerometer and also accelerometer mounted at multiple
recognize the ``user''
layer) classification
performing the specific activity. The proposed approach
problem: (a) In the first layer, we will
layer, we will identify the gait (irrespective of the user) and map into the most
user) and map into the most
probable gait label; (b) In the second
with regard to the identified gait with
a certain level of confidence. This project
supervised learning techniques such as Adaboost,
NB for the multi-layer classification problem. For the experiments, the
SVM, kNN, Random Forest trees, NB
For the experiments, the
datasets from UCI repository [1, 2
employed. The dataset mainly consists of the raw tri-axial
measured in three spatial dimensions x, y and z). The three dimensional data
acceleration (acceleration measured
The three dimensional data
mainly captures the acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
accelerometer device and sensor noise; these
may vary from one activity (or user) to
and serve as a useful measure for distinguishing users and activities. The experime
another and serve as a useful measure for distinguishing users and activities. The experime
and serve as a useful measure for distinguishing users and activities. The experiment results
with identifying activities (accuracy of 82%
showed that Random Forest and Adaboost performed
for dataset 1 and 99% for dataset 2) and users (
tasets 1 and 2). We envision that
this research project will have two key advantages:
this research project will have two key advantages: First, design a machine learning based technique
a machine learning based technique for
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
researchers to think in a new direction: should we randomize or
passwords/PINs. Second, enables
a new direction: should we randomize or
anonymize data in such a manner only the
only the gait pattern can be learned without violating
violating (leaking) the user
privacy?
Approach: The proposed effort mainly encompasses
proposed effort mainly encompasses
three components: (a) data gathering
ring - identifying the
right dataset to use for gait and user classification
and user classification
(`feature’) extraction
(`feature’) extraction-
experiments;
deriving the right set of features
deriving the right set of features for the machine
raw
learning
from the
from the
raw tri-axial
accelerometer data; (c) learning and
earning and cross-validation
of machine learning models: identifying the right set of
: identifying the right set of
and training the data on the “training set” and
models and training the data on the “
validating using “test set”. The figure
. The figure to the right
shows our approach graphically.
Data gathering: We used the publicly
were used to confirm our findings related to
were used to confirm our findings related to gait/activity based user recognition: (dataset #1)
from the wearable accelerometer mounted
accelerometer mounted on four body locations

1, 2]. Two datasets
gait/activity based user recognition: (dataset #1) is obtained
is obtained from the wearable
waist, left thigh, right arm and right ankle [2]. (Dataset #

accelerometer mounted on the chest [1] and (dataset #2) is obtained from the

body locations – waist, left thigh, right arm and right ankle

We used the publicly available datasets from the UCI repository [1,

(b)

signature
signature

algorithms

1): The original dataset from [1] is collected from 15 participants (15 files, each belonging to a
participant), performing seven activities (Working at Computer, Standing Up, Walking and Going up
down stairs, Standing, Walking, Going up down Stairs, Walking and Talking with Someone, Talking while
Standing). Due to intensive computing requirements, we used the data belonging to 10 participants (files).
Each participant file consists of the following information: sequential number, x acceleration, y
acceleration, and z acceleration and activity labels. The total number of samples per file (Row) differs and
ranges from 120K to 160K and the number of dimensions (Columns) is 3 (excluding gait labels). The
sampling frequency of the accelerometer is 52Hz. (Dataset # 2): The dataset consists of 12-feature vector
with time and frequency domain variables corresponding to tri-axial accelerations from four parts of the
body. The real size of the dataset is 160K and each file consists of the following information: user,
gender, age, height, weight, BMI, 12-feature vector. There are total of 5 activities (sitting, walking, sitting
down, standing and standing up). The sampling frequency of the accelerometer was assumed to be 50Hz.
Feature extraction: The dataset consists of raw tri-axial accelerometer data and hence one may need to
extract the useful features from this raw data to help identify the gait and the user performing the gait. The
raw acceleration signals were first pre-processed by applying noise filters and are then separated into
parts of several seconds using a fixed-width sliding window approach with 0-10% overlapping
rectangular windows (using 5 seconds sliding window and sampling frequency of 50-52 Hz, we have
is divided into segments of length t,
250-260 readings/window). Alternatively, original signal of length l
and we used a length of 5 seconds for t (based on literature review, observed that we need to capture at
least 5 second signal to extract the gait and corresponding user signature accurately). The segments at
this stage are still represented as time series and hence, features are required to be extracted for each 5-
second window. For dataset #1 and dataset #1, we extracted 24 and 36 statistical features, respectively,
using the following metrics: RMS (root mean square of the x, y and z signal), signal correlation
coefficient (correlation between xy, yz and xz signals), cross correlation (similarity between two
waveforms), FFT (maximum and minimum of Fast Fourier transforms), vector magnitude (signal and
differential vector magnitude), maximum, minimum, binned distribution (relative histogram distribution
in linear spaced bins between the minimum and the maximum acceleration in the segment), zero crossings
(number of sign changes in the window) and information entropy (a recommended metric to differentiate
between signals that correspond to different activity patterns but similar energy signals). The statistical
signature (feature) extraction module is implemented in MATLAB.
Machine learning models: As mentioned earlier, the proposed approach consists of two phases: (a) gait
recognition; (b) user recognition based on the gait. Therefore, we call this approach as a two-layer multi-
classification problem, where given the statistical features extracted from the 5 second test data sample,
the model shall be able to identify the gait of the person and then use that results to identify the person
performing the specific gait. Before training the model using the machine learning algorithms, the
preprocessed datasets (#1,#2) are partitioned into two sets: (a) activity training set: XTRAIN with feature
vectors and YTRAIN with activity labels; (b) user training set for each activity: XTRAIN with features
and YTRAIN with user label performing a particular activity. To avoid the problem of over-fitting, each
training set is further partitioned into testing and training data using the cross_validation package from
Python Scikit. We have evaluated three cases: holding out 20%, 30% and 40% of the data for testing
(evaluating) our classifiers. We used kNN, Adaboost, SVM, Random Forest Trees and Naïve Bayes
algorithms for the classification purpose. Our experiments showed that the Naïve Bayes performed worst
with 45% testing accuracy score and so, the results corresponding to Naïve Bayes are omitted from the
tables and the discussion below. All the models were implemented in Python using the scikit machine

What can we learn from the accelerometer data?
What can we learn from the accelerometer data?
What can we learn from the accelerometer data?

A close look into privacy
A close look into privacy

Team Member: Devu Manikantan Shila
Team Member: Devu Manikantan Shila

1, 2] were employed. The dataset mainly consists of the raw tri

noise; these characteristics may vary from one activity

second layer, we will identify the user with regard to the identified gait

This project leverages supervised learning techniques such as

? The objective of this project is to apply state-of-the-art
(aka gait) data collected from the wearable devices

Adaboost performed well with identifying activities (
99% for dataset 2) and users (accuracy of 99% for datasets 1 and 2).

also accelerometer mounted at multiple body locations) to recognize
The proposed approach is based on a multi-layer (2-layer)

Abstract: A handful of research efforts nowadays focus on gathering and
A handful of research efforts nowadays focus on gathering and analyzing the data from the
analyzing the data from the
end devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
their solutions based on the identified user patterns
their solutions based on the identified user patterns (e.g., health care industries monitors the walking
(e.g., health care industries monitors the walking
early disease diagnosis). A key question is: what else could we learn from the
what else could we learn from the
pattern of the patients for early disease
data besides the activity pattern? The objective of this project is to apply
art machine learning
devices (chest mounted
techniques on the raw activity (aka gait)
accelerometer and also accelerometer mounted at multiple
recognize the ``user''
layer) classification
performing the specific activity. The proposed approach
problem: (a) In the first layer, we will
layer, we will identify the gait (irrespective of the user) and map into the most
user) and map into the most
probable gait label; (b) In the second
with regard to the identified gait with
a certain level of confidence. This project
supervised learning techniques such as Adaboost,
NB for the multi-layer classification problem. For the experiments, the
SVM, kNN, Random Forest trees, NB
For the experiments, the
datasets from UCI repository [1, 2
employed. The dataset mainly consists of the raw tri-axial
measured in three spatial dimensions x, y and z). The three dimensional data
acceleration (acceleration measured
The three dimensional data
mainly captures the acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
accelerometer device and sensor noise; these
may vary from one activity (or user) to
and serve as a useful measure for distinguishing users and activities. The experime
another and serve as a useful measure for distinguishing users and activities. The experime
and serve as a useful measure for distinguishing users and activities. The experiment results
with identifying activities (accuracy of 82%
showed that Random Forest and Adaboost performed
for dataset 1 and 99% for dataset 2) and users (
tasets 1 and 2). We envision that
this research project will have two key advantages:
this research project will have two key advantages: First, design a machine learning based technique
a machine learning based technique for
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
researchers to think in a new direction: should we randomize or
passwords/PINs. Second, enables
a new direction: should we randomize or
anonymize data in such a manner only the
only the gait pattern can be learned without violating
violating (leaking) the user
privacy?
Approach: The proposed effort mainly encompasses
proposed effort mainly encompasses
three components: (a) data gathering
ring - identifying the
right dataset to use for gait and user classification
and user classification
(`feature’) extraction
(`feature’) extraction-
experiments;
deriving the right set of features
deriving the right set of features for the machine
raw
learning
from the
from the
raw tri-axial
accelerometer data; (c) learning and
earning and cross-validation
of machine learning models: identifying the right set of
: identifying the right set of
and training the data on the “training set” and
models and training the data on the “
validating using “test set”. The figure
. The figure to the right
shows our approach graphically.
Data gathering: We used the publicly
were used to confirm our findings related to
were used to confirm our findings related to gait/activity based user recognition: (dataset #1)
from the wearable accelerometer mounted
accelerometer mounted on four body locations

1, 2]. Two datasets
gait/activity based user recognition: (dataset #1) is obtained
is obtained from the wearable
waist, left thigh, right arm and right ankle [2]. (Dataset #

accelerometer mounted on the chest [1] and (dataset #2) is obtained from the

body locations – waist, left thigh, right arm and right ankle

We used the publicly available datasets from the UCI repository [1,

(b)

signature
signature

algorithms

1): The original dataset from [1] is collected from 15 participants (15 files, each belonging to a
participant), performing seven activities (Working at Computer, Standing Up, Walking and Going up
down stairs, Standing, Walking, Going up down Stairs, Walking and Talking with Someone, Talking while
Standing). Due to intensive computing requirements, we used the data belonging to 10 participants (files).
Each participant file consists of the following information: sequential number, x acceleration, y
acceleration, and z acceleration and activity labels. The total number of samples per file (Row) differs and
ranges from 120K to 160K and the number of dimensions (Columns) is 3 (excluding gait labels). The
sampling frequency of the accelerometer is 52Hz. (Dataset # 2): The dataset consists of 12-feature vector
with time and frequency domain variables corresponding to tri-axial accelerations from four parts of the
body. The real size of the dataset is 160K and each file consists of the following information: user,
gender, age, height, weight, BMI, 12-feature vector. There are total of 5 activities (sitting, walking, sitting
down, standing and standing up). The sampling frequency of the accelerometer was assumed to be 50Hz.
Feature extraction: The dataset consists of raw tri-axial accelerometer data and hence one may need to
extract the useful features from this raw data to help identify the gait and the user performing the gait. The
raw acceleration signals were first pre-processed by applying noise filters and are then separated into
parts of several seconds using a fixed-width sliding window approach with 0-10% overlapping
rectangular windows (using 5 seconds sliding window and sampling frequency of 50-52 Hz, we have
is divided into segments of length t,
250-260 readings/window). Alternatively, original signal of length l
and we used a length of 5 seconds for t (based on literature review, observed that we need to capture at
least 5 second signal to extract the gait and corresponding user signature accurately). The segments at
this stage are still represented as time series and hence, features are required to be extracted for each 5-
second window. For dataset #1 and dataset #1, we extracted 24 and 36 statistical features, respectively,
using the following metrics: RMS (root mean square of the x, y and z signal), signal correlation
coefficient (correlation between xy, yz and xz signals), cross correlation (similarity between two
waveforms), FFT (maximum and minimum of Fast Fourier transforms), vector magnitude (signal and
differential vector magnitude), maximum, minimum, binned distribution (relative histogram distribution
in linear spaced bins between the minimum and the maximum acceleration in the segment), zero crossings
(number of sign changes in the window) and information entropy (a recommended metric to differentiate
between signals that correspond to different activity patterns but similar energy signals). The statistical
signature (feature) extraction module is implemented in MATLAB.
Machine learning models: As mentioned earlier, the proposed approach consists of two phases: (a) gait
recognition; (b) user recognition based on the gait. Therefore, we call this approach as a two-layer multi-
classification problem, where given the statistical features extracted from the 5 second test data sample,
the model shall be able to identify the gait of the person and then use that results to identify the person
performing the specific gait. Before training the model using the machine learning algorithms, the
preprocessed datasets (#1,#2) are partitioned into two sets: (a) activity training set: XTRAIN with feature
vectors and YTRAIN with activity labels; (b) user training set for each activity: XTRAIN with features
and YTRAIN with user label performing a particular activity. To avoid the problem of over-fitting, each
training set is further partitioned into testing and training data using the cross_validation package from
Python Scikit. We have evaluated three cases: holding out 20%, 30% and 40% of the data for testing
(evaluating) our classifiers. We used kNN, Adaboost, SVM, Random Forest Trees and Naïve Bayes
algorithms for the classification purpose. Our experiments showed that the Naïve Bayes performed worst
with 45% testing accuracy score and so, the results corresponding to Naïve Bayes are omitted from the
tables and the discussion below. All the models were implemented in Python using the scikit machine

Table 1: Optimal classifier parameters used for the experiments

for SVMs

Table [1] shows the parameters used for the classification

learning library. The performance of algorithms on recognizing gait and users was independently
measured using confusion matrices (enabled us to extract the features that will distinguish two classes),
testing accuracy, F1-score. The observations (accuracy and F1 scores) are given below for each dataset.
Optimal parameters for classifiers:
algorithms. For instance, we used a Radial Basis
Function (RBF) kernel
and a
parameter selection using grid search from the
Python’s GridSearchCV package giving the
combination of C=1 and Gamma = 0.001.
Similarly, for Random Forest, Adaboost and kNN,
using sckit-learn, we found the optimal values for
the parameters n_estimators, n_neighbors by looping through a range of values and calculating the
accuracy based on the holdout data. Furthermore, for kNN, we used a uniform weighing function that
gives equal importance for all the neighboring k points. Besides parameter estimators, Tree based feature
selection algorithm from sklearn.ensemble package was used to disregard irrelevant features by
computing feature importances and to improve our running time. Though the tree-based selection
algorithm produced low dimensional features (25% dimension reduction) for both dataset # 1 and #2, we
found that using the reduced set of features corresponded to lower classification performance (4% drop in
accuracy scores) for Random Forest classifier. Throughout our experiments, no feature selection
algorithms were employed.
Experiment Results:
1. (Dataset # 1): The sample and feature size for activity
training set is (7k X 24). Once the activity is determined,
only the file corresponding to activity class is trained and
tested for person identification. The sample size of the
from (1k-2k X 24). The
user
classification algorithms generally performed well with
training accuracy (gait and user identification) ranging from
0.99 to 1.0. However, we observed activity testing accuracy
of an average 0.82 (see Figure [1]) for various classifiers
(almost all classifiers produced the same behavior). For further reasoning of the results, we used the F1
score to understand the gaits/activities that were hard to recognize or contributed to the low scores. It

0.81717
0.831995
0.81238
0.8214947
Figure 1: Testing accuracy of activity

training set

ranges

0.82669
0.819277
0.821
0.819277

classification for CV splits

kNN

Adaboost

SVM

Random Forest

Cross Validation

ML Models

20%

30%

40%

0.80908
0.824837
0.81327
0.8276181

Figure 2: F1 scores of each activity (based on Adaboost) for various CV splits

What can we learn from the accelerometer data?
What can we learn from the accelerometer data?
What can we learn from the accelerometer data?

A close look into privacy
A close look into privacy

Team Member: Devu Manikantan Shila
Team Member: Devu Manikantan Shila

1, 2] were employed. The dataset mainly consists of the raw tri

noise; these characteristics may vary from one activity

second layer, we will identify the user with regard to the identified gait

This project leverages supervised learning techniques such as

? The objective of this project is to apply state-of-the-art
(aka gait) data collected from the wearable devices

Adaboost performed well with identifying activities (
99% for dataset 2) and users (accuracy of 99% for datasets 1 and 2).

also accelerometer mounted at multiple body locations) to recognize
The proposed approach is based on a multi-layer (2-layer)

Abstract: A handful of research efforts nowadays focus on gathering and
A handful of research efforts nowadays focus on gathering and analyzing the data from the
analyzing the data from the
end devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
their solutions based on the identified user patterns
their solutions based on the identified user patterns (e.g., health care industries monitors the walking
(e.g., health care industries monitors the walking
early disease diagnosis). A key question is: what else could we learn from the
what else could we learn from the
pattern of the patients for early disease
data besides the activity pattern? The objective of this project is to apply
art machine learning
devices (chest mounted
techniques on the raw activity (aka gait)
accelerometer and also accelerometer mounted at multiple
recognize the ``user''
layer) classification
performing the specific activity. The proposed approach
problem: (a) In the first layer, we will
layer, we will identify the gait (irrespective of the user) and map into the most
user) and map into the most
probable gait label; (b) In the second
with regard to the identified gait with
a certain level of confidence. This project
supervised learning techniques such as Adaboost,
NB for the multi-layer classification problem. For the experiments, the
SVM, kNN, Random Forest trees, NB
For the experiments, the
datasets from UCI repository [1, 2
employed. The dataset mainly consists of the raw tri-axial
measured in three spatial dimensions x, y and z). The three dimensional data
acceleration (acceleration measured
The three dimensional data
mainly captures the acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
accelerometer device and sensor noise; these
may vary from one activity (or user) to
and serve as a useful measure for distinguishing users and activities. The experime
another and serve as a useful measure for distinguishing users and activities. The experime
and serve as a useful measure for distinguishing users and activities. The experiment results
with identifying activities (accuracy of 82%
showed that Random Forest and Adaboost performed
for dataset 1 and 99% for dataset 2) and users (
tasets 1 and 2). We envision that
this research project will have two key advantages:
this research project will have two key advantages: First, design a machine learning based technique
a machine learning based technique for
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
researchers to think in a new direction: should we randomize or
passwords/PINs. Second, enables
a new direction: should we randomize or
anonymize data in such a manner only the
only the gait pattern can be learned without violating
violating (leaking) the user
privacy?
Approach: The proposed effort mainly encompasses
proposed effort mainly encompasses
three components: (a) data gathering
ring - identifying the
right dataset to use for gait and user classification
and user classification
(`feature’) extraction
(`feature’) extraction-
experiments;
deriving the right set of features
deriving the right set of features for the machine
raw
learning
from the
from the
raw tri-axial
accelerometer data; (c) learning and
earning and cross-validation
of machine learning models: identifying the right set of
: identifying the right set of
and training the data on the “training set” and
models and training the data on the “
validating using “test set”. The figure
. The figure to the right
shows our approach graphically.
Data gathering: We used the publicly
were used to confirm our findings related to
were used to confirm our findings related to gait/activity based user recognition: (dataset #1)
from the wearable accelerometer mounted
accelerometer mounted on four body locations

1, 2]. Two datasets
gait/activity based user recognition: (dataset #1) is obtained
is obtained from the wearable
waist, left thigh, right arm and right ankle [2]. (Dataset #

accelerometer mounted on the chest [1] and (dataset #2) is obtained from the

body locations – waist, left thigh, right arm and right ankle

We used the publicly available datasets from the UCI repository [1,

(b)

signature
signature

algorithms

1): The original dataset from [1] is collected from 15 participants (15 files, each belonging to a
participant), performing seven activities (Working at Computer, Standing Up, Walking and Going up
down stairs, Standing, Walking, Going up down Stairs, Walking and Talking with Someone, Talking while
Standing). Due to intensive computing requirements, we used the data belonging to 10 participants (files).
Each participant file consists of the following information: sequential number, x acceleration, y
acceleration, and z acceleration and activity labels. The total number of samples per file (Row) differs and
ranges from 120K to 160K and the number of dimensions (Columns) is 3 (excluding gait labels). The
sampling frequency of the accelerometer is 52Hz. (Dataset # 2): The dataset consists of 12-feature vector
with time and frequency domain variables corresponding to tri-axial accelerations from four parts of the
body. The real size of the dataset is 160K and each file consists of the following information: user,
gender, age, height, weight, BMI, 12-feature vector. There are total of 5 activities (sitting, walking, sitting
down, standing and standing up). The sampling frequency of the accelerometer was assumed to be 50Hz.
Feature extraction: The dataset consists of raw tri-axial accelerometer data and hence one may need to
extract the useful features from this raw data to help identify the gait and the user performing the gait. The
raw acceleration signals were first pre-processed by applying noise filters and are then separated into
parts of several seconds using a fixed-width sliding window approach with 0-10% overlapping
rectangular windows (using 5 seconds sliding window and sampling frequency of 50-52 Hz, we have
is divided into segments of length t,
250-260 readings/window). Alternatively, original signal of length l
and we used a length of 5 seconds for t (based on literature review, observed that we need to capture at
least 5 second signal to extract the gait and corresponding user signature accurately). The segments at
this stage are still represented as time series and hence, features are required to be extracted for each 5-
second window. For dataset #1 and dataset #1, we extracted 24 and 36 statistical features, respectively,
using the following metrics: RMS (root mean square of the x, y and z signal), signal correlation
coefficient (correlation between xy, yz and xz signals), cross correlation (similarity between two
waveforms), FFT (maximum and minimum of Fast Fourier transforms), vector magnitude (signal and
differential vector magnitude), maximum, minimum, binned distribution (relative histogram distribution
in linear spaced bins between the minimum and the maximum acceleration in the segment), zero crossings
(number of sign changes in the window) and information entropy (a recommended metric to differentiate
between signals that correspond to different activity patterns but similar energy signals). The statistical
signature (feature) extraction module is implemented in MATLAB.
Machine learning models: As mentioned earlier, the proposed approach consists of two phases: (a) gait
recognition; (b) user recognition based on the gait. Therefore, we call this approach as a two-layer multi-
classification problem, where given the statistical features extracted from the 5 second test data sample,
the model shall be able to identify the gait of the person and then use that results to identify the person
performing the specific gait. Before training the model using the machine learning algorithms, the
preprocessed datasets (#1,#2) are partitioned into two sets: (a) activity training set: XTRAIN with feature
vectors and YTRAIN with activity labels; (b) user training set for each activity: XTRAIN with features
and YTRAIN with user label performing a particular activity. To avoid the problem of over-fitting, each
training set is further partitioned into testing and training data using the cross_validation package from
Python Scikit. We have evaluated three cases: holding out 20%, 30% and 40% of the data for testing
(evaluating) our classifiers. We used kNN, Adaboost, SVM, Random Forest Trees and Naïve Bayes
algorithms for the classification purpose. Our experiments showed that the Naïve Bayes performed worst
with 45% testing accuracy score and so, the results corresponding to Naïve Bayes are omitted from the
tables and the discussion below. All the models were implemented in Python using the scikit machine

Table 1: Optimal classifier parameters used for the experiments

for SVMs

Table [1] shows the parameters used for the classification

learning library. The performance of algorithms on recognizing gait and users was independently
measured using confusion matrices (enabled us to extract the features that will distinguish two classes),
testing accuracy, F1-score. The observations (accuracy and F1 scores) are given below for each dataset.
Optimal parameters for classifiers:
algorithms. For instance, we used a Radial Basis
Function (RBF) kernel
and a
parameter selection using grid search from the
Python’s GridSearchCV package giving the
combination of C=1 and Gamma = 0.001.
Similarly, for Random Forest, Adaboost and kNN,
using sckit-learn, we found the optimal values for
the parameters n_estimators, n_neighbors by looping through a range of values and calculating the
accuracy based on the holdout data. Furthermore, for kNN, we used a uniform weighing function that
gives equal importance for all the neighboring k points. Besides parameter estimators, Tree based feature
selection algorithm from sklearn.ensemble package was used to disregard irrelevant features by
computing feature importances and to improve our running time. Though the tree-based selection
algorithm produced low dimensional features (25% dimension reduction) for both dataset # 1 and #2, we
found that using the reduced set of features corresponded to lower classification performance (4% drop in
accuracy scores) for Random Forest classifier. Throughout our experiments, no feature selection
algorithms were employed.
Experiment Results:
1. (Dataset # 1): The sample and feature size for activity
training set is (7k X 24). Once the activity is determined,
only the file corresponding to activity class is trained and
tested for person identification. The sample size of the
from (1k-2k X 24). The
user
classification algorithms generally performed well with
training accuracy (gait and user identification) ranging from
0.99 to 1.0. However, we observed activity testing accuracy
of an average 0.82 (see Figure [1]) for various classifiers
(almost all classifiers produced the same behavior). For further reasoning of the results, we used the F1
score to understand the gaits/activities that were hard to recognize or contributed to the low scores. It

0.81717
0.831995
0.81238
0.8214947
Figure 1: Testing accuracy of activity

training set

ranges

0.82669
0.819277
0.821
0.819277

classification for CV splits

kNN

Adaboost

SVM

Random Forest

Cross Validation

ML Models

20%

30%

40%

0.80908
0.824837
0.81327
0.8276181

Figure 2: F1 scores of each activity (based on Adaboost) for various CV splits

stems from Figure [2] that classes 2, 5 and 6 performed the worst (scores of 0.35 – 0.45). Figures [3]-[4]
show the classifier performance in classifying the user based on each activity for 20% and 30% cross
validation. Generally, omitting activity 2, the algorithms performed very well in identifying the user (e.g.,
Random Forest gave user identification accuracy of 0.96 to 1). A close observation of activity 2 shows
that it is a combination of several activities such as standing up, walking, going up-down stairs etc and
that may be one of the reason the classifiers were unable to identify it properly.

Figure 3: Testing accuracy of user classification for 20% CV

Figure 4: F1 scores of identifying user/activity (based on Adaboost) for 30% CV

In short, the user classification performed very well compared to the activity classification and regarding
the classifiers, Random Forest and Adaboost
performed the best. One reason for the worst
performance of activity classifier (classes 2,
5 and 6) will be the inaccuracy of the activity
data itself (as said earlier, some activities are
combinations of 2 or more activities). Other
reasoning behind this observation may be the
in-sufficient
information provided by the
single chest mounted accelerometer. This
also implies that we might be able to obtain
more accurate results, if multiple mounted
wearable accelerometers are used.
2. (Dataset #2): The observations from
dataset # 1 motivated us to use data from
multiple mounted accelerometers [2]. The
sample and feature size for activity training
(10k X 36). The classification
set
algorithms generally performed well with training (gait and user identification) accuracy ranging from

is

Figure 5: Testing accuracy of activity classification for CV splits (10%-40%)

Figure 6: F1 scores of each activity (based on Adaboost) for various CV splits

What can we learn from the accelerometer data?
What can we learn from the accelerometer data?
What can we learn from the accelerometer data?

A close look into privacy
A close look into privacy

Team Member: Devu Manikantan Shila
Team Member: Devu Manikantan Shila

1, 2] were employed. The dataset mainly consists of the raw tri

noise; these characteristics may vary from one activity

second layer, we will identify the user with regard to the identified gait

This project leverages supervised learning techniques such as

? The objective of this project is to apply state-of-the-art
(aka gait) data collected from the wearable devices

Adaboost performed well with identifying activities (
99% for dataset 2) and users (accuracy of 99% for datasets 1 and 2).

also accelerometer mounted at multiple body locations) to recognize
The proposed approach is based on a multi-layer (2-layer)

Abstract: A handful of research efforts nowadays focus on gathering and
A handful of research efforts nowadays focus on gathering and analyzing the data from the
analyzing the data from the
end devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
devices such as wearable’s, smart phones to understand various user patterns and then customize
their solutions based on the identified user patterns
their solutions based on the identified user patterns (e.g., health care industries monitors the walking
(e.g., health care industries monitors the walking
early disease diagnosis). A key question is: what else could we learn from the
what else could we learn from the
pattern of the patients for early disease
data besides the activity pattern? The objective of this project is to apply
art machine learning
devices (chest mounted
techniques on the raw activity (aka gait)
accelerometer and also accelerometer mounted at multiple
recognize the ``user''
layer) classification
performing the specific activity. The proposed approach
problem: (a) In the first layer, we will
layer, we will identify the gait (irrespective of the user) and map into the most
user) and map into the most
probable gait label; (b) In the second
with regard to the identified gait with
a certain level of confidence. This project
supervised learning techniques such as Adaboost,
NB for the multi-layer classification problem. For the experiments, the
SVM, kNN, Random Forest trees, NB
For the experiments, the
datasets from UCI repository [1, 2
employed. The dataset mainly consists of the raw tri-axial
measured in three spatial dimensions x, y and z). The three dimensional data
acceleration (acceleration measured
The three dimensional data
mainly captures the acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
acceleration of the person’s body, gravity, external forces like vibration of the
accelerometer device and sensor noise; these
may vary from one activity (or user) to
and serve as a useful measure for distinguishing users and activities. The experime
another and serve as a useful measure for distinguishing users and activities. The experime
and serve as a useful measure for distinguishing users and activities. The experiment results
with identifying activities (accuracy of 82%
showed that Random Forest and Adaboost performed
for dataset 1 and 99% for dataset 2) and users (
tasets 1 and 2). We envision that
this research project will have two key advantages:
this research project will have two key advantages: First, design a machine learning based technique
a machine learning based technique for
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
recognizing users based on the gait rather than relying on biometrics (fingerprints, facial, voice) or
researchers to think in a new direction: should we randomize or
passwords/PINs. Second, enables
a new direction: should we randomize or
anonymize data in such a manner only the
only the gait pattern can be learned without violating
violating (leaking) the user
privacy?
Approach: The proposed effort mainly encompasses
proposed effort mainly encompasses
three components: (a) data gathering
ring - identifying the
right dataset to use for gait and user classification
and user classification
(`feature’) extraction
(`feature’) extraction-
experiments;
deriving the right set of features
deriving the right set of features for the machine
raw
learning
from the
from the
raw tri-axial
accelerometer data; (c) learning and
earning and cross-validation
of machine learning models: identifying the right set of
: identifying the right set of
and training the data on the “training set” and
models and training the data on the “
validating using “test set”. The figure
. The figure to the right
shows our approach graphically.
Data gathering: We used the publicly
were used to confirm our findings related to
were used to confirm our findings related to gait/activity based user recognition: (dataset #1)
from the wearable accelerometer mounted
accelerometer mounted on four body locations

1, 2]. Two datasets
gait/activity based user recognition: (dataset #1) is obtained
is obtained from the wearable
waist, left thigh, right arm and right ankle [2]. (Dataset #

accelerometer mounted on the chest [1] and (dataset #2) is obtained from the

body locations – waist, left thigh, right arm and right ankle

We used the publicly available datasets from the UCI repository [1,

(b)

signature
signature

algorithms

1): The original dataset from [1] is collected from 15 participants (15 files, each belonging to a
participant), performing seven activities (Working at Computer, Standing Up, Walking and Going up
down stairs, Standing, Walking, Going up down Stairs, Walking and Talking with Someone, Talking while
Standing). Due to intensive computing requirements, we used the data belonging to 10 participants (files).
Each participant file consists of the following information: sequential number, x acceleration, y
acceleration, and z acceleration and activity labels. The total number of samples per file (Row) differs and
ranges from 120K to 160K and the number of dimensions (Columns) is 3 (excluding gait labels). The
sampling frequency of the accelerometer is 52Hz. (Dataset # 2): The dataset consists of 12-feature vector
with time and frequency domain variables corresponding to tri-axial accelerations from four parts of the
body. The real size of the dataset is 160K and each file consists of the following information: user,
gender, age, height, weight, BMI, 12-feature vector. There are total of 5 activities (sitting, walking, sitting
down, standing and standing up). The sampling frequency of the accelerometer was assumed to be 50Hz.
Feature extraction: The dataset consists of raw tri-axial accelerometer data and hence one may need to
extract the useful features from this raw data to help identify the gait and the user performing the gait. The
raw acceleration signals were first pre-processed by applying noise filters and are then separated into
parts of several seconds using a fixed-width sliding window approach with 0-10% overlapping
rectangular windows (using 5 seconds sliding window and sampling frequency of 50-52 Hz, we have
is divided into segments of length t,
250-260 readings/window). Alternatively, original signal of length l
and we used a length of 5 seconds for t (based on literature review, observed that we need to capture at
least 5 second signal to extract the gait and corresponding user signature accurately). The segments at
this stage are still represented as time series and hence, features are required to be extracted for each 5-
second window. For dataset #1 and dataset #1, we extracted 24 and 36 statistical features, respectively,
using the following metrics: RMS (root mean square of the x, y and z signal), signal correlation
coefficient (correlation between xy, yz and xz signals), cross correlation (similarity between two
waveforms), FFT (maximum and minimum of Fast Fourier transforms), vector magnitude (signal and
differential vector magnitude), maximum, minimum, binned distribution (relative histogram distribution
in linear spaced bins between the minimum and the maximum acceleration in the segment), zero crossings
(number of sign changes in the window) and information entropy (a recommended metric to differentiate
between signals that correspond to different activity patterns but similar energy signals). The statistical
signature (feature) extraction module is implemented in MATLAB.
Machine learning models: As mentioned earlier, the proposed approach consists of two phases: (a) gait
recognition; (b) user recognition based on the gait. Therefore, we call this approach as a two-layer multi-
classification problem, where given the statistical features extracted from the 5 second test data sample,
the model shall be able to identify the gait of the person and then use that results to identify the person
performing the specific gait. Before training the model using the machine learning algorithms, the
preprocessed datasets (#1,#2) are partitioned into two sets: (a) activity training set: XTRAIN with feature
vectors and YTRAIN with activity labels; (b) user training set for each activity: XTRAIN with features
and YTRAIN with user label performing a particular activity. To avoid the problem of over-fitting, each
training set is further partitioned into testing and training data using the cross_validation package from
Python Scikit. We have evaluated three cases: holding out 20%, 30% and 40% of the data for testing
(evaluating) our classifiers. We used kNN, Adaboost, SVM, Random Forest Trees and Naïve Bayes
algorithms for the classification purpose. Our experiments showed that the Naïve Bayes performed worst
with 45% testing accuracy score and so, the results corresponding to Naïve Bayes are omitted from the
tables and the discussion below. All the models were implemented in Python using the scikit machine

Table 1: Optimal classifier parameters used for the experiments

for SVMs

Table [1] shows the parameters used for the classification

learning library. The performance of algorithms on recognizing gait and users was independently
measured using confusion matrices (enabled us to extract the features that will distinguish two classes),
testing accuracy, F1-score. The observations (accuracy and F1 scores) are given below for each dataset.
Optimal parameters for classifiers:
algorithms. For instance, we used a Radial Basis
Function (RBF) kernel
and a
parameter selection using grid search from the
Python’s GridSearchCV package giving the
combination of C=1 and Gamma = 0.001.
Similarly, for Random Forest, Adaboost and kNN,
using sckit-learn, we found the optimal values for
the parameters n_estimators, n_neighbors by looping through a range of values and calculating the
accuracy based on the holdout data. Furthermore, for kNN, we used a uniform weighing function that
gives equal importance for all the neighboring k points. Besides parameter estimators, Tree based feature
selection algorithm from sklearn.ensemble package was used to disregard irrelevant features by
computing feature importances and to improve our running time. Though the tree-based selection
algorithm produced low dimensional features (25% dimension reduction) for both dataset # 1 and #2, we
found that using the reduced set of features corresponded to lower classification performance (4% drop in
accuracy scores) for Random Forest classifier. Throughout our experiments, no feature selection
algorithms were employed.
Experiment Results:
1. (Dataset # 1): The sample and feature size for activity
training set is (7k X 24). Once the activity is determined,
only the file corresponding to activity class is trained and
tested for person identification. The sample size of the
from (1k-2k X 24). The
user
classification algorithms generally performed well with
training accuracy (gait and user identification) ranging from
0.99 to 1.0. However, we observed activity testing accuracy
of an average 0.82 (see Figure [1]) for various classifiers
(almost all classifiers produced the same behavior). For further reasoning of the results, we used the F1
score to understand the gaits/activities that were hard to recognize or contributed to the low scores. It

0.81717
0.831995
0.81238
0.8214947
Figure 1: Testing accuracy of activity

training set

ranges

0.82669
0.819277
0.821
0.819277

classification for CV splits

kNN

Adaboost

SVM

Random Forest

Cross Validation

ML Models

20%

30%

40%

0.80908
0.824837
0.81327
0.8276181

Figure 2: F1 scores of each activity (based on Adaboost) for various CV splits

stems from Figure [2] that classes 2, 5 and 6 performed the worst (scores of 0.35 – 0.45). Figures [3]-[4]
show the classifier performance in classifying the user based on each activity for 20% and 30% cross
validation. Generally, omitting activity 2, the algorithms performed very well in identifying the user (e.g.,
Random Forest gave user identification accuracy of 0.96 to 1). A close observation of activity 2 shows
that it is a combination of several activities such as standing up, walking, going up-down stairs etc and
that may be one of the reason the classifiers were unable to identify it properly.

Figure 3: Testing accuracy of user classification for 20% CV

Figure 4: F1 scores of identifying user/activity (based on Adaboost) for 30% CV

In short, the user classification performed very well compared to the activity classification and regarding
the classifiers, Random Forest and Adaboost
performed the best. One reason for the worst
performance of activity classifier (classes 2,
5 and 6) will be the inaccuracy of the activity
data itself (as said earlier, some activities are
combinations of 2 or more activities). Other
reasoning behind this observation may be the
in-sufficient
information provided by the
single chest mounted accelerometer. This
also implies that we might be able to obtain
more accurate results, if multiple mounted
wearable accelerometers are used.
2. (Dataset #2): The observations from
dataset # 1 motivated us to use data from
multiple mounted accelerometers [2]. The
sample and feature size for activity training
(10k X 36). The classification
set
algorithms generally performed well with training (gait and user identification) accuracy ranging from

is

Figure 5: Testing accuracy of activity classification for CV splits (10%-40%)

Figure 6: F1 scores of each activity (based on Adaboost) for various CV splits

0.995 to 1.0. The testing accuracy (gait and user identification) also performed very well with an average
0.995 to 1.0. The testing accuracy (gait and user identification
) also performed very well with an average
which corroborated our findings that multiple accelerometers placed at various parts of the body
that multiple accelerometers placed at various parts of the body
of 99%, which corroborated our findings
and fewer (no) combinations of activities
rove the classification accuracy. Among the
algorithms, Random Forest and Adaboost
Figure 5]. For detailed
understanding of the results, the F1 scores for various activities
understanding of the results, the F1 scores for various activities are given in Figure [6].
in Figure [6]. Figure [7] shows
in classifying the user based on each activity for 20% - 40% cross validation
the classifier performance in classifying the user based on each activity
40% cross validation
splits. Generally, the algorithms performed very well in identifying the user (e.g.,
Random Forest gave
that users based on activity 2 (walking) were hard
accuracy score of 0.97 to 1). A close observation shows
to recognize, compared to other activities
to recognize, compared to other activities.

. Generally, the algorithms performed very well in identifying the user (e.g., Random Forest
0.97 to 1). A close observation shows that users based on activity 2 (walking) were

of activities may help to improve the classification accuracy
and Adaboost gave the best performance [Figure 5

Figure 7: Testing accuracy of user classification for various activities given 20%
Testing accuracy of user classification for various activities given 20%-

40% CV splits

The F1 Scores of the user identification for
The F1 Scores of the user identification for
various activities is given in Figure [8].
various activities is given in Figure [8].
Compared to the various activities, user
Compared to the various activities, user
recognition based on walking provided an
recognition based on walking provided an
average of 98% accuracy.
3. Confusion Matrices: Figures 9 (a) and
Figures 9 (a) and
(b) corresponds to dataset #1 and the
(b) corresponds to dataset #1 and the
remaining graphs 9(c) and (d) corresponds to dataset #2. The confusion matrices (Figure [9]) clearly show
(c) and (d) corresponds to dataset #2. The confusion matrices (Figure [9]) clearly show
(c) and (d) corresponds to dataset #2. The confusion matrices (Figure [9]) clearly show
that the performance of dataset # 2 activity classification outweighs dataset #1. Specifically, from 9(a), we
that the performance of dataset # 2 activity
Specifically, from 9(a), we
observe that classes 2, 5 and 6 performed worst (maps to F1 scores in Figure [2]). Surprisingly, for
performed worst (maps to F1 scores in Figure [2]). Surprisingly, for
performed worst (maps to F1 scores in Figure [2]). Surprisingly, for both
datasets, user identification performed very well
datasets, user identification performed very well, which indeed proves our concern related to privacy.
related to privacy.

Figure 8: F1 scores of identifying user/activity (based

F1 scores of identifying user/activity (based on Adaboost) for 30% CV

(a)

(b)

(c)

(d)

Figure 9: Confusion Matrices: (a) Dataset #1:

Dataset #1: activity classification (seven classes); (b) Dataset #1: user classification based on activity 1
user classification based on activity 1;

(c) Dataset #2: activity classification
(five classes); (d) Dataset #2: User classification based on activity 1
y classification (five classes); (d) Dataset #2: User classification based on activity 1
Future Work: In future, we would like to
apply unsupervised learning techniques such as mixture of
In future, we would like to apply unsupervised learning techniques such as mixture of
signal signs to improve
Gaussians and also, extract more useful features
the classification rates in a less user
the performance of our
classifiers exposed to varying user behaviors (

varying user behaviors (e.g., variable walking speeds depending on shoes
walking speeds depending on shoes).

extract more useful features such as the speed, acceleration signal signs

user-interrupting manner. We will investigate the performance of

https://archive.ics.uci.edu/ml/datasets/Activity+Recognition+from+Single+Chest-Mounted+Accelerometer
Mounted+Accelerometer
Ugulino, W.; Cardador, D.; Vega, K.; Velloso, E.; Milidiu, R.; Fuks, H. Wearable Computing: Accelerometers'
Wearable Computing: Accelerometers'

References:
[1] https://archive.ics.uci.edu/ml/datasets/Activity+Recognition+from+Single+Chest
[2] Ugulino, W.; Cardador, D.; Vega, K.; Velloso, E.; Milidiu, R.; Fuks, H.
Data Classification of Body Postures and Mo
Data Classification of Body Postures and Movements, in the proceedings of 21st SBIA, 2012.
[3] Python Scikit, http://scikit-learn.org/stable/index.html
learn.org/stable/index.html

