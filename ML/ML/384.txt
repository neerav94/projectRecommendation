Classification of Human Posture and Movement

Using Accelerometer Data

Huafei Wang

huafei@stanford.edu

Dept. of Electrical Engineering

Stanford University

Jennifer Wu

jwu46@stanford.edu
Dept. of Aero/Astro
Stanford University

1

Introduction

Human activity classiﬁcation has wide reaching applications, such as in providing medical assistance to disabled
or elderly persons. This project implements several machine learning algorithms to classify human posture and
movements. The diﬀerent activities being classiﬁed are:

Sitting, Sitting down, Standing, Standing up and Walking

The diﬀerence between “Sitting” and “Sitting down” is that the former is the static posture, whereas the latter
is the transitional movement from standing to sitting.

Past work

Bodor et al. developed a novel method for employing image-based rendering to extend the capability of the
human movement classiﬁcation [1]. Sminchisescu et al. have developed algorithms for recognizing human
motion in monocular video sequences, based on discriminative conditional random ﬁelds (CRFs) and maximum
entropy Markov models (MEMMs) [2].

However, vision-based systems have issues in camera installation, lighting, picture quality, privacy and
etc., which may render the system impractical in certain applications. As a branch of movement classiﬁcation
techniques, wearable sensor-based system could solve the above problems thanks to the development of nano-
manufacturing technologies and ultralow-power embedded systems, which makes the wearable sensors cheap,
small and compact. Ugulino et al. collected human movement data from 4 ADXL335 accelerometers, utilized
C4.5 tree, Iterative Dichotomiser 3 (ID3) and AdaBoost to classify the human movements and have obtained
high recall and precision [3]. This project utilizes the same set of data but a diﬀerent set of models to compare
classiﬁcation performance.

2 Data

The data is made publicly available on UCI’s Machine Learning Repository.
//groupware.les.inf.puc-rio.br/har#dataset.

It can be accessed at: http:

The dataset contains the following features

Age, Weight, Body Mass Index, Height

x,y,z axis readings from 4 diﬀerent accelerometers

Table 1: Frequency of each class

Class
Sitting
Sitting down
Standing
Standing up
Walking

Frequency

50631
11827
47370
12415
43390

1

Classification of Human Posture and Movement

Using Accelerometer Data

Huafei Wang

huafei@stanford.edu

Dept. of Electrical Engineering

Stanford University

Jennifer Wu

jwu46@stanford.edu
Dept. of Aero/Astro
Stanford University

1

Introduction

Human activity classiﬁcation has wide reaching applications, such as in providing medical assistance to disabled
or elderly persons. This project implements several machine learning algorithms to classify human posture and
movements. The diﬀerent activities being classiﬁed are:

Sitting, Sitting down, Standing, Standing up and Walking

The diﬀerence between “Sitting” and “Sitting down” is that the former is the static posture, whereas the latter
is the transitional movement from standing to sitting.

Past work

Bodor et al. developed a novel method for employing image-based rendering to extend the capability of the
human movement classiﬁcation [1]. Sminchisescu et al. have developed algorithms for recognizing human
motion in monocular video sequences, based on discriminative conditional random ﬁelds (CRFs) and maximum
entropy Markov models (MEMMs) [2].

However, vision-based systems have issues in camera installation, lighting, picture quality, privacy and
etc., which may render the system impractical in certain applications. As a branch of movement classiﬁcation
techniques, wearable sensor-based system could solve the above problems thanks to the development of nano-
manufacturing technologies and ultralow-power embedded systems, which makes the wearable sensors cheap,
small and compact. Ugulino et al. collected human movement data from 4 ADXL335 accelerometers, utilized
C4.5 tree, Iterative Dichotomiser 3 (ID3) and AdaBoost to classify the human movements and have obtained
high recall and precision [3]. This project utilizes the same set of data but a diﬀerent set of models to compare
classiﬁcation performance.

2 Data

The data is made publicly available on UCI’s Machine Learning Repository.
//groupware.les.inf.puc-rio.br/har#dataset.

It can be accessed at: http:

The dataset contains the following features

Age, Weight, Body Mass Index, Height

x,y,z axis readings from 4 diﬀerent accelerometers

Table 1: Frequency of each class

Class
Sitting
Sitting down
Standing
Standing up
Walking

Frequency

50631
11827
47370
12415
43390

1

3 Features

3.1 Description

The features used in our models are the 12 accelerometer readings. Although the original data also contains
age, weight, body mass index and height, they are neglected in this preliminary analysis and classiﬁcation
because they are less relevant in determining human movement compared with the 12 accelerometer readings.

3.2 Preprocessing

In the initial implementation without any preprocessing of the data, precision and recall were very low. To
improve performance, diﬀerent ways to scale the data was investigated. More speciﬁcally, we tried Z-score
scaling and 0 − 1 scaling and tested the resulting eﬀects on performance.

Table 2: Eﬀect of scaling data on performance

GDA

SVM

Precision(%) Recall(%) Precision(%) Recall(%)

Unscaled
Z-score scaling
0 − 1 scaling

78.94
75.49
99.90

69.56
70.42
99.90

85.83
98.76
99.90

51.40
98.76
99.90

Randomizing the data Since the raw data is presented as a series of sampled outputs from the accelerom-
eters, it was important to randomize the order of the data sets, especially when we were performing smaller
tests where only a small constant number of training example were chosen. Due to the physical nature of the
data, consecutive training examples are largely dependent, thus reducing the rank of the training matrix. It
was found that randomizing the order of the training sets improved precision and recall.

3.3 Principal Component Analysis

Since the feature data is of dimension 12, which makes it impossible to directly visualize the data, Principal
Component Analysis (PCA) is used to reduce the dimension for the feature dataset from 12 to 3. Three principal
eigenvalues and the associated eigenvectors are used. The data is represented in ﬁgure 1. The horizontal data
distribution corresponds to human lateral movements (moving forward, backward, left, right) while the vertical
data distribution corresponds to human longitudinal movements (standing up, sitting down).

4 Gaussian Discriminant Analysis

4.1 Binary classiﬁcation

GDA models the input features as a multivariate normal distribution, with the class label as a Bernouilli
variable. For each class, the class’s data is used as positive training examples, while data from each of the other
classes are concatenated to be used as negative training examples. After constructing the training set, model
parameters are calculated with the following formulas:
1{y(i) = 1}

φ =

m(cid:80)
m(cid:80)
(cid:17)(cid:16)
x(i) − µy(i)

; µ1 =

i=1

i=1

1{y(i) = 1}x(i)

1{y(i) = 1}

(cid:17)T

1
m

i=1

m(cid:88)
m(cid:80)
m(cid:80)
m(cid:88)

i=1

i=1

(cid:16)

1{y(i) = 0}x(i)

1{y(i) = 0}

1
m

i=1

x(i) − µy(i)

µ0 =

Σ =

4.2 Multi-class classiﬁcation

For a testing example, in order to make a prediction into 1 of the 5 classes, the posterior distribution is calculated
for each class, and the predicted label is chosen depending on the largest posterior.
hθ(x) = arg maxy p(x|y)p(y); where y ∈ {1, 2, 3, 4, 5}

That is

2

Classification of Human Posture and Movement

Using Accelerometer Data

Huafei Wang

huafei@stanford.edu

Dept. of Electrical Engineering

Stanford University

Jennifer Wu

jwu46@stanford.edu
Dept. of Aero/Astro
Stanford University

1

Introduction

Human activity classiﬁcation has wide reaching applications, such as in providing medical assistance to disabled
or elderly persons. This project implements several machine learning algorithms to classify human posture and
movements. The diﬀerent activities being classiﬁed are:

Sitting, Sitting down, Standing, Standing up and Walking

The diﬀerence between “Sitting” and “Sitting down” is that the former is the static posture, whereas the latter
is the transitional movement from standing to sitting.

Past work

Bodor et al. developed a novel method for employing image-based rendering to extend the capability of the
human movement classiﬁcation [1]. Sminchisescu et al. have developed algorithms for recognizing human
motion in monocular video sequences, based on discriminative conditional random ﬁelds (CRFs) and maximum
entropy Markov models (MEMMs) [2].

However, vision-based systems have issues in camera installation, lighting, picture quality, privacy and
etc., which may render the system impractical in certain applications. As a branch of movement classiﬁcation
techniques, wearable sensor-based system could solve the above problems thanks to the development of nano-
manufacturing technologies and ultralow-power embedded systems, which makes the wearable sensors cheap,
small and compact. Ugulino et al. collected human movement data from 4 ADXL335 accelerometers, utilized
C4.5 tree, Iterative Dichotomiser 3 (ID3) and AdaBoost to classify the human movements and have obtained
high recall and precision [3]. This project utilizes the same set of data but a diﬀerent set of models to compare
classiﬁcation performance.

2 Data

The data is made publicly available on UCI’s Machine Learning Repository.
//groupware.les.inf.puc-rio.br/har#dataset.

It can be accessed at: http:

The dataset contains the following features

Age, Weight, Body Mass Index, Height

x,y,z axis readings from 4 diﬀerent accelerometers

Table 1: Frequency of each class

Class
Sitting
Sitting down
Standing
Standing up
Walking

Frequency

50631
11827
47370
12415
43390

1

3 Features

3.1 Description

The features used in our models are the 12 accelerometer readings. Although the original data also contains
age, weight, body mass index and height, they are neglected in this preliminary analysis and classiﬁcation
because they are less relevant in determining human movement compared with the 12 accelerometer readings.

3.2 Preprocessing

In the initial implementation without any preprocessing of the data, precision and recall were very low. To
improve performance, diﬀerent ways to scale the data was investigated. More speciﬁcally, we tried Z-score
scaling and 0 − 1 scaling and tested the resulting eﬀects on performance.

Table 2: Eﬀect of scaling data on performance

GDA

SVM

Precision(%) Recall(%) Precision(%) Recall(%)

Unscaled
Z-score scaling
0 − 1 scaling

78.94
75.49
99.90

69.56
70.42
99.90

85.83
98.76
99.90

51.40
98.76
99.90

Randomizing the data Since the raw data is presented as a series of sampled outputs from the accelerom-
eters, it was important to randomize the order of the data sets, especially when we were performing smaller
tests where only a small constant number of training example were chosen. Due to the physical nature of the
data, consecutive training examples are largely dependent, thus reducing the rank of the training matrix. It
was found that randomizing the order of the training sets improved precision and recall.

3.3 Principal Component Analysis

Since the feature data is of dimension 12, which makes it impossible to directly visualize the data, Principal
Component Analysis (PCA) is used to reduce the dimension for the feature dataset from 12 to 3. Three principal
eigenvalues and the associated eigenvectors are used. The data is represented in ﬁgure 1. The horizontal data
distribution corresponds to human lateral movements (moving forward, backward, left, right) while the vertical
data distribution corresponds to human longitudinal movements (standing up, sitting down).

4 Gaussian Discriminant Analysis

4.1 Binary classiﬁcation

GDA models the input features as a multivariate normal distribution, with the class label as a Bernouilli
variable. For each class, the class’s data is used as positive training examples, while data from each of the other
classes are concatenated to be used as negative training examples. After constructing the training set, model
parameters are calculated with the following formulas:
1{y(i) = 1}

φ =

m(cid:80)
m(cid:80)
(cid:17)(cid:16)
x(i) − µy(i)

; µ1 =

i=1

i=1

1{y(i) = 1}x(i)

1{y(i) = 1}

(cid:17)T

1
m

i=1

m(cid:88)
m(cid:80)
m(cid:80)
m(cid:88)

i=1

i=1

(cid:16)

1{y(i) = 0}x(i)

1{y(i) = 0}

1
m

i=1

x(i) − µy(i)

µ0 =

Σ =

4.2 Multi-class classiﬁcation

For a testing example, in order to make a prediction into 1 of the 5 classes, the posterior distribution is calculated
for each class, and the predicted label is chosen depending on the largest posterior.
hθ(x) = arg maxy p(x|y)p(y); where y ∈ {1, 2, 3, 4, 5}

That is

2

Figure 1: Data projected onto ﬁrst 3 principal eigenvectors

Learning Curve

Figure 2: GDA learning curve

The learning curve shows signiﬁcant improvement in performance only up to the ﬁrst 2000 training examples.

Thus SVM is eﬃcient in terms of training set size.

5 Support Vector Machine

A support vector machine builds a model that seeks to maximize the margin between the separating hyperplane
and data points. More speciﬁcally, the model parameters are found by solving the following optimization

3

Classification of Human Posture and Movement

Using Accelerometer Data

Huafei Wang

huafei@stanford.edu

Dept. of Electrical Engineering

Stanford University

Jennifer Wu

jwu46@stanford.edu
Dept. of Aero/Astro
Stanford University

1

Introduction

Human activity classiﬁcation has wide reaching applications, such as in providing medical assistance to disabled
or elderly persons. This project implements several machine learning algorithms to classify human posture and
movements. The diﬀerent activities being classiﬁed are:

Sitting, Sitting down, Standing, Standing up and Walking

The diﬀerence between “Sitting” and “Sitting down” is that the former is the static posture, whereas the latter
is the transitional movement from standing to sitting.

Past work

Bodor et al. developed a novel method for employing image-based rendering to extend the capability of the
human movement classiﬁcation [1]. Sminchisescu et al. have developed algorithms for recognizing human
motion in monocular video sequences, based on discriminative conditional random ﬁelds (CRFs) and maximum
entropy Markov models (MEMMs) [2].

However, vision-based systems have issues in camera installation, lighting, picture quality, privacy and
etc., which may render the system impractical in certain applications. As a branch of movement classiﬁcation
techniques, wearable sensor-based system could solve the above problems thanks to the development of nano-
manufacturing technologies and ultralow-power embedded systems, which makes the wearable sensors cheap,
small and compact. Ugulino et al. collected human movement data from 4 ADXL335 accelerometers, utilized
C4.5 tree, Iterative Dichotomiser 3 (ID3) and AdaBoost to classify the human movements and have obtained
high recall and precision [3]. This project utilizes the same set of data but a diﬀerent set of models to compare
classiﬁcation performance.

2 Data

The data is made publicly available on UCI’s Machine Learning Repository.
//groupware.les.inf.puc-rio.br/har#dataset.

It can be accessed at: http:

The dataset contains the following features

Age, Weight, Body Mass Index, Height

x,y,z axis readings from 4 diﬀerent accelerometers

Table 1: Frequency of each class

Class
Sitting
Sitting down
Standing
Standing up
Walking

Frequency

50631
11827
47370
12415
43390

1

3 Features

3.1 Description

The features used in our models are the 12 accelerometer readings. Although the original data also contains
age, weight, body mass index and height, they are neglected in this preliminary analysis and classiﬁcation
because they are less relevant in determining human movement compared with the 12 accelerometer readings.

3.2 Preprocessing

In the initial implementation without any preprocessing of the data, precision and recall were very low. To
improve performance, diﬀerent ways to scale the data was investigated. More speciﬁcally, we tried Z-score
scaling and 0 − 1 scaling and tested the resulting eﬀects on performance.

Table 2: Eﬀect of scaling data on performance

GDA

SVM

Precision(%) Recall(%) Precision(%) Recall(%)

Unscaled
Z-score scaling
0 − 1 scaling

78.94
75.49
99.90

69.56
70.42
99.90

85.83
98.76
99.90

51.40
98.76
99.90

Randomizing the data Since the raw data is presented as a series of sampled outputs from the accelerom-
eters, it was important to randomize the order of the data sets, especially when we were performing smaller
tests where only a small constant number of training example were chosen. Due to the physical nature of the
data, consecutive training examples are largely dependent, thus reducing the rank of the training matrix. It
was found that randomizing the order of the training sets improved precision and recall.

3.3 Principal Component Analysis

Since the feature data is of dimension 12, which makes it impossible to directly visualize the data, Principal
Component Analysis (PCA) is used to reduce the dimension for the feature dataset from 12 to 3. Three principal
eigenvalues and the associated eigenvectors are used. The data is represented in ﬁgure 1. The horizontal data
distribution corresponds to human lateral movements (moving forward, backward, left, right) while the vertical
data distribution corresponds to human longitudinal movements (standing up, sitting down).

4 Gaussian Discriminant Analysis

4.1 Binary classiﬁcation

GDA models the input features as a multivariate normal distribution, with the class label as a Bernouilli
variable. For each class, the class’s data is used as positive training examples, while data from each of the other
classes are concatenated to be used as negative training examples. After constructing the training set, model
parameters are calculated with the following formulas:
1{y(i) = 1}

φ =

m(cid:80)
m(cid:80)
(cid:17)(cid:16)
x(i) − µy(i)

; µ1 =

i=1

i=1

1{y(i) = 1}x(i)

1{y(i) = 1}

(cid:17)T

1
m

i=1

m(cid:88)
m(cid:80)
m(cid:80)
m(cid:88)

i=1

i=1

(cid:16)

1{y(i) = 0}x(i)

1{y(i) = 0}

1
m

i=1

x(i) − µy(i)

µ0 =

Σ =

4.2 Multi-class classiﬁcation

For a testing example, in order to make a prediction into 1 of the 5 classes, the posterior distribution is calculated
for each class, and the predicted label is chosen depending on the largest posterior.
hθ(x) = arg maxy p(x|y)p(y); where y ∈ {1, 2, 3, 4, 5}

That is

2

Figure 1: Data projected onto ﬁrst 3 principal eigenvectors

Learning Curve

Figure 2: GDA learning curve

The learning curve shows signiﬁcant improvement in performance only up to the ﬁrst 2000 training examples.

Thus SVM is eﬃcient in terms of training set size.

5 Support Vector Machine

A support vector machine builds a model that seeks to maximize the margin between the separating hyperplane
and data points. More speciﬁcally, the model parameters are found by solving the following optimization

3

problem[4]:

min
γ,w,b

s.t.

m(cid:88)

i=1

ξi

(cid:107) w (cid:107)2 +C

1
2
y(i)(wT x(i) + b) ≥ 1 − ξi, i = 1, .., m
ξi ≥ 0, i = 1, . . . , m

To implement SVM, we used LIBSVM [5].

Learning Curve

Figure 3: SVM learning curve

6 K-means

Since a particular human movement usually requires a harmonious coordination among diﬀerent parts of the
body, accelerometer readings would exhibit clustering properties. Therefore, K-Means has been attempted to
classify the human postures and movements.

Learning Curve

The K-means learning curve is shown in ﬁgure 4. K-Means has a poor overall classiﬁcation performance and
the learning curve for the K-Means does not exhibit a typical decreasing pattern as most of the supervised
learning algorithms do. One reason is that K-Means is not a supervised learning method and the clustering
algorithm does not necessarily correspond to how human accelerations of a movement are coordinated and
clustered. Therefore, K-Means could only roughly classify non-movements from the accelerometer readings
while detailed movements classiﬁcations need to be done by using supervised learning methods like GDA and
SVM. Therefore, it is concluded that unsupervised learning algorithms like K-Means may not be suitable in a
supervised learning context.

7 Results

For the ﬁnal results, training was done on taking 90% of the data from each class and testing was done on the
remaining 10% of the data. The following table shows the precision and recall for each model.

4

Classification of Human Posture and Movement

Using Accelerometer Data

Huafei Wang

huafei@stanford.edu

Dept. of Electrical Engineering

Stanford University

Jennifer Wu

jwu46@stanford.edu
Dept. of Aero/Astro
Stanford University

1

Introduction

Human activity classiﬁcation has wide reaching applications, such as in providing medical assistance to disabled
or elderly persons. This project implements several machine learning algorithms to classify human posture and
movements. The diﬀerent activities being classiﬁed are:

Sitting, Sitting down, Standing, Standing up and Walking

The diﬀerence between “Sitting” and “Sitting down” is that the former is the static posture, whereas the latter
is the transitional movement from standing to sitting.

Past work

Bodor et al. developed a novel method for employing image-based rendering to extend the capability of the
human movement classiﬁcation [1]. Sminchisescu et al. have developed algorithms for recognizing human
motion in monocular video sequences, based on discriminative conditional random ﬁelds (CRFs) and maximum
entropy Markov models (MEMMs) [2].

However, vision-based systems have issues in camera installation, lighting, picture quality, privacy and
etc., which may render the system impractical in certain applications. As a branch of movement classiﬁcation
techniques, wearable sensor-based system could solve the above problems thanks to the development of nano-
manufacturing technologies and ultralow-power embedded systems, which makes the wearable sensors cheap,
small and compact. Ugulino et al. collected human movement data from 4 ADXL335 accelerometers, utilized
C4.5 tree, Iterative Dichotomiser 3 (ID3) and AdaBoost to classify the human movements and have obtained
high recall and precision [3]. This project utilizes the same set of data but a diﬀerent set of models to compare
classiﬁcation performance.

2 Data

The data is made publicly available on UCI’s Machine Learning Repository.
//groupware.les.inf.puc-rio.br/har#dataset.

It can be accessed at: http:

The dataset contains the following features

Age, Weight, Body Mass Index, Height

x,y,z axis readings from 4 diﬀerent accelerometers

Table 1: Frequency of each class

Class
Sitting
Sitting down
Standing
Standing up
Walking

Frequency

50631
11827
47370
12415
43390

1

3 Features

3.1 Description

The features used in our models are the 12 accelerometer readings. Although the original data also contains
age, weight, body mass index and height, they are neglected in this preliminary analysis and classiﬁcation
because they are less relevant in determining human movement compared with the 12 accelerometer readings.

3.2 Preprocessing

In the initial implementation without any preprocessing of the data, precision and recall were very low. To
improve performance, diﬀerent ways to scale the data was investigated. More speciﬁcally, we tried Z-score
scaling and 0 − 1 scaling and tested the resulting eﬀects on performance.

Table 2: Eﬀect of scaling data on performance

GDA

SVM

Precision(%) Recall(%) Precision(%) Recall(%)

Unscaled
Z-score scaling
0 − 1 scaling

78.94
75.49
99.90

69.56
70.42
99.90

85.83
98.76
99.90

51.40
98.76
99.90

Randomizing the data Since the raw data is presented as a series of sampled outputs from the accelerom-
eters, it was important to randomize the order of the data sets, especially when we were performing smaller
tests where only a small constant number of training example were chosen. Due to the physical nature of the
data, consecutive training examples are largely dependent, thus reducing the rank of the training matrix. It
was found that randomizing the order of the training sets improved precision and recall.

3.3 Principal Component Analysis

Since the feature data is of dimension 12, which makes it impossible to directly visualize the data, Principal
Component Analysis (PCA) is used to reduce the dimension for the feature dataset from 12 to 3. Three principal
eigenvalues and the associated eigenvectors are used. The data is represented in ﬁgure 1. The horizontal data
distribution corresponds to human lateral movements (moving forward, backward, left, right) while the vertical
data distribution corresponds to human longitudinal movements (standing up, sitting down).

4 Gaussian Discriminant Analysis

4.1 Binary classiﬁcation

GDA models the input features as a multivariate normal distribution, with the class label as a Bernouilli
variable. For each class, the class’s data is used as positive training examples, while data from each of the other
classes are concatenated to be used as negative training examples. After constructing the training set, model
parameters are calculated with the following formulas:
1{y(i) = 1}

φ =

m(cid:80)
m(cid:80)
(cid:17)(cid:16)
x(i) − µy(i)

; µ1 =

i=1

i=1

1{y(i) = 1}x(i)

1{y(i) = 1}

(cid:17)T

1
m

i=1

m(cid:88)
m(cid:80)
m(cid:80)
m(cid:88)

i=1

i=1

(cid:16)

1{y(i) = 0}x(i)

1{y(i) = 0}

1
m

i=1

x(i) − µy(i)

µ0 =

Σ =

4.2 Multi-class classiﬁcation

For a testing example, in order to make a prediction into 1 of the 5 classes, the posterior distribution is calculated
for each class, and the predicted label is chosen depending on the largest posterior.
hθ(x) = arg maxy p(x|y)p(y); where y ∈ {1, 2, 3, 4, 5}

That is

2

Figure 1: Data projected onto ﬁrst 3 principal eigenvectors

Learning Curve

Figure 2: GDA learning curve

The learning curve shows signiﬁcant improvement in performance only up to the ﬁrst 2000 training examples.

Thus SVM is eﬃcient in terms of training set size.

5 Support Vector Machine

A support vector machine builds a model that seeks to maximize the margin between the separating hyperplane
and data points. More speciﬁcally, the model parameters are found by solving the following optimization

3

problem[4]:

min
γ,w,b

s.t.

m(cid:88)

i=1

ξi

(cid:107) w (cid:107)2 +C

1
2
y(i)(wT x(i) + b) ≥ 1 − ξi, i = 1, .., m
ξi ≥ 0, i = 1, . . . , m

To implement SVM, we used LIBSVM [5].

Learning Curve

Figure 3: SVM learning curve

6 K-means

Since a particular human movement usually requires a harmonious coordination among diﬀerent parts of the
body, accelerometer readings would exhibit clustering properties. Therefore, K-Means has been attempted to
classify the human postures and movements.

Learning Curve

The K-means learning curve is shown in ﬁgure 4. K-Means has a poor overall classiﬁcation performance and
the learning curve for the K-Means does not exhibit a typical decreasing pattern as most of the supervised
learning algorithms do. One reason is that K-Means is not a supervised learning method and the clustering
algorithm does not necessarily correspond to how human accelerations of a movement are coordinated and
clustered. Therefore, K-Means could only roughly classify non-movements from the accelerometer readings
while detailed movements classiﬁcations need to be done by using supervised learning methods like GDA and
SVM. Therefore, it is concluded that unsupervised learning algorithms like K-Means may not be suitable in a
supervised learning context.

7 Results

For the ﬁnal results, training was done on taking 90% of the data from each class and testing was done on the
remaining 10% of the data. The following table shows the precision and recall for each model.

4

Figure 4: K-means learning curve

Table 3: Testing results for all three models

GDA

SVM

K-means

Precision(%) Recall (%) Precision(%) Recall (%) Precision(%) Recall (%)

Sitting
Sitting down
Standing
Standing up
Walking

99.94
99.83
99.81
100.00
99.95

99.96
99.75
100.00
99.12
100.00

99.98
99.83
99.96
99.92
99.98

99.96
99.75
100.00
99.84
100.00

82.0
0.0
44.7
39.7
2.9

100.0
0.0
100.0
37.3
1.4

8 Future Work

The algorithms exhibited have shown high precision and recall. The next step would be to integrate the
algorithm into a portable embedded system that has limited computation capability, memory space and/or
battery life to classify the movements to make the system practical. With the development of the cloud
technology, the wearable devices could also just collect the accelerometer data and send it wirelessly to a data
processing server to carry out the processing and classiﬁcation work. This would enable the devices to work
longer and more reliably given the limited resources available.

References

[1] R. Bodor, A. Drenner, D. Fehr, O. Masoud, and N. Papanikolopoulos, “View-independent human motion
classiﬁcation using image-based reconstruction,” Image and Vision Computing, vol. 27, no. 8, pp. 1194–1206,
2009.

[2] C. Sminchisescu, A. Kanaujia, and D. Metaxas, “Conditional models for contextual human motion recog-

nition,” Computer Vision and Image Understanding, vol. 104, no. 2, pp. 210–220, 2006.

[3] W. Ugulino, D. Cardador, K. Vega, E. Velloso, R. Milidi´u, and H. Fuks, “Wearable computing: Accelerome-
ters’ data classiﬁcation of body postures and movements,” in Lecture Notes in Computer Science, pp. 52–61,
Springer Science Business Media, 2012.

[4] A. Ng, “CS229 class notes,” 2014.

[5] C.-C. Chang and C.-J. Lin, “LIBSVM: A library for support vector machines,” ACM Transactions on
Intelligent Systems and Technology, vol. 2, pp. 27:1–27:27, 2011. Software available at http://www.csie.
ntu.edu.tw/~cjlin/libsvm.

[6] L. Wang, W. Hu, and T. Tan, “Recent developments in human motion analysis,” Pattern recognition, vol. 36,

no. 3, pp. 585–601, 2003.

5

