Predicting Cell Type­Specific Chromatin States from Genetic Regulatory Networks 

Christopher Probert, Anthony Ho 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 
 

 
 

 

 
 

 
 

 

 
 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 
Introduction 
 
The human body consists of hundreds of unique cell types with unique characteristics, but yet all
contain the same DNA sequence. This disparity is created by cell type­specific gene regulation,
 
 
which drives complex patterns of expressing certain gene sets in specific cell types, and different
gene sets in others. An important variable in this regulatory program is the physical state of
 
chromatin, a complex of DNA and proteins inside the nucleus of cells. 
The packaging of a human genome into chromatin allows different regions of the genome (in
 
 
 
particular, enhancer elements) to be made accessible or protected from different gene regulators,
which are proteins that bind DNA and activate or repress expression of genes. Understanding the
 
factors affecting enhancer chromatin state may reveal processes that govern cell differentiation. 
 
Here, we seek to predict chromatin states in diverse cell types from regulator gene expression
 
profiles and prior information about regulatory gene physical characteristics. We built a model
based on a boosted alternating decision tree (ADT) to predict the chromatin state of genomic
 
 
enhancer regions, using motif composition and cellular gene expression as input features. 
 
Dataset 
Our data is derived from recent large­scale genomics projects by the two sequencing consortia
 
(Epigenomics Roadmap4 and ENCODE3). The primary results are data from various types of
 
sequencing experiments across 270 different cell lines. 
Chromatin states: Chromatin states are the labels we wish to predict. DNase­seq experiments
 
quantify chromatin state by degrading DNA at sites not protected by chromatin structure.
(DNase­seq data from ENCODE, DNase­seq data from Epigenomics Roadmap) 
 
Regulator expression: We use regulator gene expression as a feature to capture variation across
different cell types. ENCODE RNA­seq data measures gene expression for 200 cell types. For
 
the remaining 70 cell types, we used regularized logistic regression models developed by the
 
Kundaje lab at Stanford6 to impute expression values from other epigenomic state information.
 
 
(ENCODE RNA­seq data) 
Motif presence: We use motif presence as a feature to capture variation between enhancer
 
 
regions. The input data are a set of systematically discovered human regulator binding motifs5. 
Enhancer regions: We used the human genome for enhancer annotations and sequences. (genome
 
hg19) 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 
 

1 

Predicting Cell Type­Specific Chromatin States from Genetic Regulatory Networks 

Christopher Probert, Anthony Ho 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 
 

 
 

 

 
 

 
 

 

 
 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 
Introduction 
 
The human body consists of hundreds of unique cell types with unique characteristics, but yet all
contain the same DNA sequence. This disparity is created by cell type­specific gene regulation,
 
 
which drives complex patterns of expressing certain gene sets in specific cell types, and different
gene sets in others. An important variable in this regulatory program is the physical state of
 
chromatin, a complex of DNA and proteins inside the nucleus of cells. 
The packaging of a human genome into chromatin allows different regions of the genome (in
 
 
 
particular, enhancer elements) to be made accessible or protected from different gene regulators,
which are proteins that bind DNA and activate or repress expression of genes. Understanding the
 
factors affecting enhancer chromatin state may reveal processes that govern cell differentiation. 
 
Here, we seek to predict chromatin states in diverse cell types from regulator gene expression
 
profiles and prior information about regulatory gene physical characteristics. We built a model
based on a boosted alternating decision tree (ADT) to predict the chromatin state of genomic
 
 
enhancer regions, using motif composition and cellular gene expression as input features. 
 
Dataset 
Our data is derived from recent large­scale genomics projects by the two sequencing consortia
 
(Epigenomics Roadmap4 and ENCODE3). The primary results are data from various types of
 
sequencing experiments across 270 different cell lines. 
Chromatin states: Chromatin states are the labels we wish to predict. DNase­seq experiments
 
quantify chromatin state by degrading DNA at sites not protected by chromatin structure.
(DNase­seq data from ENCODE, DNase­seq data from Epigenomics Roadmap) 
 
Regulator expression: We use regulator gene expression as a feature to capture variation across
different cell types. ENCODE RNA­seq data measures gene expression for 200 cell types. For
 
the remaining 70 cell types, we used regularized logistic regression models developed by the
 
Kundaje lab at Stanford6 to impute expression values from other epigenomic state information.
 
 
(ENCODE RNA­seq data) 
Motif presence: We use motif presence as a feature to capture variation between enhancer
 
 
regions. The input data are a set of systematically discovered human regulator binding motifs5. 
Enhancer regions: We used the human genome for enhancer annotations and sequences. (genome
 
hg19) 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 
 

1 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 
 
 

 
 
 

 

 
 
 

F  
.

 

 
T
T ∙ X2
Y 1 ~ F 1
(X

 
, where the goal is to learn the function 
)

Features and Preprocessing 
Feature Space 
Our enhancer­cell type training examples have both intragenomic and intergenomic variation:
 
 
they are from both different positions in the genome, and from different cell types. To capture
both sources of variation, we use two feature spaces: motif occurrence per enhancer (to capture
 
 
variance by genome position), and regulator expression per cell type (to capture variance by cell
type). Thus, for each enhancer­cell type training example, our model has a chromatin state label
 
and two feature vectors (200 gene expression values and 500 motif presence values). 
 
We believe these features are appropriate because they capture variation on both the genomic
 
 
enhancer region and cell type axes. For performance, we represent the feature space as three
 
matrixes (Figure 1), where the goal is to predict the enhancer state matrix from the inner product
space of the motif occurrence and regulator expression matrices. The model can be represented
 
as 
 
Figure 1: Feature Space Overview. Each
 
 
 Y 1
example is an enhancer­cell type pair (
). This
 
 
 
corresponds to an enhancer motif presence
 
 
 
 X1
), and a cell type gene expression
vector (
 
 
 
). X2
vector  (
 
 
Preprocessing 
Regulator Expression: We normalized
 
 
RNA­seq data for each cell type using
 
standard techniques (FPKM). We used
a list of 200 ENCODE transcription
 
 
factors3 as our list of regulator genes,
 
and extracted expression values for
 
 
 
type as a
these genes in each cell
 
matrix. We used a 0.5 FPKM threshold
 
 
to binarize expression values in the regulator expression matrix (
Motif occurrence: We searched genomic enhancer regions using an HMM model for each motif
from the set of human regulatory motifs5. We binarized motif presence in each genomic enhancer
 
region to obtain the motif occurrence matrix (
Enhancer state: We used pre­processed DNase­seq binarized peak calls to obtain genomic
 
chromatin state. We intersected this binarized chromatin state data with genomic enhancer
 
 
annotations to obtain binarized chromatin state for each enhancer (
 

 
).Y 1
 

).X2
 
 

).X1
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 
 

 
 

 
 

 

 
 

 

 

 
 

 

 

 

 

 

2 

Predicting Cell Type­Specific Chromatin States from Genetic Regulatory Networks 

Christopher Probert, Anthony Ho 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 
 

 
 

 

 
 

 
 

 

 
 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 
Introduction 
 
The human body consists of hundreds of unique cell types with unique characteristics, but yet all
contain the same DNA sequence. This disparity is created by cell type­specific gene regulation,
 
 
which drives complex patterns of expressing certain gene sets in specific cell types, and different
gene sets in others. An important variable in this regulatory program is the physical state of
 
chromatin, a complex of DNA and proteins inside the nucleus of cells. 
The packaging of a human genome into chromatin allows different regions of the genome (in
 
 
 
particular, enhancer elements) to be made accessible or protected from different gene regulators,
which are proteins that bind DNA and activate or repress expression of genes. Understanding the
 
factors affecting enhancer chromatin state may reveal processes that govern cell differentiation. 
 
Here, we seek to predict chromatin states in diverse cell types from regulator gene expression
 
profiles and prior information about regulatory gene physical characteristics. We built a model
based on a boosted alternating decision tree (ADT) to predict the chromatin state of genomic
 
 
enhancer regions, using motif composition and cellular gene expression as input features. 
 
Dataset 
Our data is derived from recent large­scale genomics projects by the two sequencing consortia
 
(Epigenomics Roadmap4 and ENCODE3). The primary results are data from various types of
 
sequencing experiments across 270 different cell lines. 
Chromatin states: Chromatin states are the labels we wish to predict. DNase­seq experiments
 
quantify chromatin state by degrading DNA at sites not protected by chromatin structure.
(DNase­seq data from ENCODE, DNase­seq data from Epigenomics Roadmap) 
 
Regulator expression: We use regulator gene expression as a feature to capture variation across
different cell types. ENCODE RNA­seq data measures gene expression for 200 cell types. For
 
the remaining 70 cell types, we used regularized logistic regression models developed by the
 
Kundaje lab at Stanford6 to impute expression values from other epigenomic state information.
 
 
(ENCODE RNA­seq data) 
Motif presence: We use motif presence as a feature to capture variation between enhancer
 
 
regions. The input data are a set of systematically discovered human regulator binding motifs5. 
Enhancer regions: We used the human genome for enhancer annotations and sequences. (genome
 
hg19) 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 
 

1 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 
 
 

 
 
 

 

 
 
 

F  
.

 

 
T
T ∙ X2
Y 1 ~ F 1
(X

 
, where the goal is to learn the function 
)

Features and Preprocessing 
Feature Space 
Our enhancer­cell type training examples have both intragenomic and intergenomic variation:
 
 
they are from both different positions in the genome, and from different cell types. To capture
both sources of variation, we use two feature spaces: motif occurrence per enhancer (to capture
 
 
variance by genome position), and regulator expression per cell type (to capture variance by cell
type). Thus, for each enhancer­cell type training example, our model has a chromatin state label
 
and two feature vectors (200 gene expression values and 500 motif presence values). 
 
We believe these features are appropriate because they capture variation on both the genomic
 
 
enhancer region and cell type axes. For performance, we represent the feature space as three
 
matrixes (Figure 1), where the goal is to predict the enhancer state matrix from the inner product
space of the motif occurrence and regulator expression matrices. The model can be represented
 
as 
 
Figure 1: Feature Space Overview. Each
 
 
 Y 1
example is an enhancer­cell type pair (
). This
 
 
 
corresponds to an enhancer motif presence
 
 
 
 X1
), and a cell type gene expression
vector (
 
 
 
). X2
vector  (
 
 
Preprocessing 
Regulator Expression: We normalized
 
 
RNA­seq data for each cell type using
 
standard techniques (FPKM). We used
a list of 200 ENCODE transcription
 
 
factors3 as our list of regulator genes,
 
and extracted expression values for
 
 
 
type as a
these genes in each cell
 
matrix. We used a 0.5 FPKM threshold
 
 
to binarize expression values in the regulator expression matrix (
Motif occurrence: We searched genomic enhancer regions using an HMM model for each motif
from the set of human regulatory motifs5. We binarized motif presence in each genomic enhancer
 
region to obtain the motif occurrence matrix (
Enhancer state: We used pre­processed DNase­seq binarized peak calls to obtain genomic
 
chromatin state. We intersected this binarized chromatin state data with genomic enhancer
 
 
annotations to obtain binarized chromatin state for each enhancer (
 

 
).Y 1
 

).X2
 
 

).X1
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 
 

 
 

 
 

 

 
 

 

 

 
 

 

 

 

 

 

2 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 
 

 
 

 
 

 
 

   

Model Overview 
We wish to predict the chromatin state of a given enhancer­cell type pair from information about
 
the motif structure and cell type regulator expression. The input for the model is a regulator
 
expression vector and a motif composition vector for a previously unseen enhancer­cell type
 
pair. The output of the model is an enhancer chromatin state, which is a binarized value. The
 
model is trained on labeled chromatin state­cell type examples. 
Response Variable Function 
  Y
Let
the motif occurrence vector (where
 
 
Y ~ F
 
is
 
 
T ∙ X2
T
X1
using the the inner product space 
 

  M  
be
  M,
( C  
 
pair, our model
)
. Extending this to the feature space described in Figure 1, this can be written
 
 
 
 

be the chromatin state response variable,
 

 as:
(X
Y 1 ~ F 1

be the cell type expression vector, and
 

are binarized). Then, for one

 
 
(M,

T ∙ X2
T  
)

Y C R  

  C  

C  
)

 
 
 

 
 

 
 

 

 

 

 

 

 

 

 

,

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

,

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

Boosted Alternating Decision Tree 
Alternating decision trees are an extension
 
 
  Ri  
of decision trees, where condition nodes
 
have true/false outputs, and prediction
 
 
nodes carry real­valued weights
. The
 
hypothesis
is generated by summing
 
 
over all condition/prediction node pairs in
 
 
an ADT 

 
(x)h

  ai  

:A  

 
 

 

 

 

 

 

 

 

 

 

h

(x)

A
= ∑
i

Ri

(x)

∙ ai  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 
 

   

 
 

 ai  

only

using

 
1)
 
 

Figure 2: ADT Architecture Overview ADTs have
 
 
 
prediction nodes
(yellow) as their roots and leaves,
 
which carry real­valued weights. The condition nodes
 
 Ri 
(blue) use a rule based on one M feature and one C
 
 
feature. 
Model Modifications 
We made two modifications to the base
 
 
positive
algorithm1,2:
 
 
conditional logic in condition nodes, and 2) using a different Z objective function that is faster to
 
 
 
calculate and only includes weights for examples passing the condition node. 
1) Positive conditional logic makes the model more representative of a biological system,
 
 
because we are trying to model the effects of (motif, regulator) pairs on cell type decisions.
 
 
The absence of a motif or regulator does likely not confer as strong of an effect as presence.
 
 
Reproducibility and sensitivity issues with sequencing data also introduce noise that may
 
create false negatives, and a model without weights on negative conditions is likely more
 
robust to these errors. A regular ADT1,2 has prediction nodes for both true and false outcomes
of a condition node, whereas our model has only prediction nodes for true outcomes (e.g.
 
 
 
∀i : Ri

 
 
).
= 0  

(false)

 
 
 

   

 
 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

3 

Predicting Cell Type­Specific Chromatin States from Genetic Regulatory Networks 

Christopher Probert, Anthony Ho 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 
 

 
 

 

 
 

 
 

 

 
 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 
Introduction 
 
The human body consists of hundreds of unique cell types with unique characteristics, but yet all
contain the same DNA sequence. This disparity is created by cell type­specific gene regulation,
 
 
which drives complex patterns of expressing certain gene sets in specific cell types, and different
gene sets in others. An important variable in this regulatory program is the physical state of
 
chromatin, a complex of DNA and proteins inside the nucleus of cells. 
The packaging of a human genome into chromatin allows different regions of the genome (in
 
 
 
particular, enhancer elements) to be made accessible or protected from different gene regulators,
which are proteins that bind DNA and activate or repress expression of genes. Understanding the
 
factors affecting enhancer chromatin state may reveal processes that govern cell differentiation. 
 
Here, we seek to predict chromatin states in diverse cell types from regulator gene expression
 
profiles and prior information about regulatory gene physical characteristics. We built a model
based on a boosted alternating decision tree (ADT) to predict the chromatin state of genomic
 
 
enhancer regions, using motif composition and cellular gene expression as input features. 
 
Dataset 
Our data is derived from recent large­scale genomics projects by the two sequencing consortia
 
(Epigenomics Roadmap4 and ENCODE3). The primary results are data from various types of
 
sequencing experiments across 270 different cell lines. 
Chromatin states: Chromatin states are the labels we wish to predict. DNase­seq experiments
 
quantify chromatin state by degrading DNA at sites not protected by chromatin structure.
(DNase­seq data from ENCODE, DNase­seq data from Epigenomics Roadmap) 
 
Regulator expression: We use regulator gene expression as a feature to capture variation across
different cell types. ENCODE RNA­seq data measures gene expression for 200 cell types. For
 
the remaining 70 cell types, we used regularized logistic regression models developed by the
 
Kundaje lab at Stanford6 to impute expression values from other epigenomic state information.
 
 
(ENCODE RNA­seq data) 
Motif presence: We use motif presence as a feature to capture variation between enhancer
 
 
regions. The input data are a set of systematically discovered human regulator binding motifs5. 
Enhancer regions: We used the human genome for enhancer annotations and sequences. (genome
 
hg19) 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 
 

1 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 
 
 

 
 
 

 

 
 
 

F  
.

 

 
T
T ∙ X2
Y 1 ~ F 1
(X

 
, where the goal is to learn the function 
)

Features and Preprocessing 
Feature Space 
Our enhancer­cell type training examples have both intragenomic and intergenomic variation:
 
 
they are from both different positions in the genome, and from different cell types. To capture
both sources of variation, we use two feature spaces: motif occurrence per enhancer (to capture
 
 
variance by genome position), and regulator expression per cell type (to capture variance by cell
type). Thus, for each enhancer­cell type training example, our model has a chromatin state label
 
and two feature vectors (200 gene expression values and 500 motif presence values). 
 
We believe these features are appropriate because they capture variation on both the genomic
 
 
enhancer region and cell type axes. For performance, we represent the feature space as three
 
matrixes (Figure 1), where the goal is to predict the enhancer state matrix from the inner product
space of the motif occurrence and regulator expression matrices. The model can be represented
 
as 
 
Figure 1: Feature Space Overview. Each
 
 
 Y 1
example is an enhancer­cell type pair (
). This
 
 
 
corresponds to an enhancer motif presence
 
 
 
 X1
), and a cell type gene expression
vector (
 
 
 
). X2
vector  (
 
 
Preprocessing 
Regulator Expression: We normalized
 
 
RNA­seq data for each cell type using
 
standard techniques (FPKM). We used
a list of 200 ENCODE transcription
 
 
factors3 as our list of regulator genes,
 
and extracted expression values for
 
 
 
type as a
these genes in each cell
 
matrix. We used a 0.5 FPKM threshold
 
 
to binarize expression values in the regulator expression matrix (
Motif occurrence: We searched genomic enhancer regions using an HMM model for each motif
from the set of human regulatory motifs5. We binarized motif presence in each genomic enhancer
 
region to obtain the motif occurrence matrix (
Enhancer state: We used pre­processed DNase­seq binarized peak calls to obtain genomic
 
chromatin state. We intersected this binarized chromatin state data with genomic enhancer
 
 
annotations to obtain binarized chromatin state for each enhancer (
 

 
).Y 1
 

).X2
 
 

).X1
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 
 

 
 

 
 

 

 
 

 

 

 
 

 

 

 

 

 

2 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 
 

 
 

 
 

 
 

   

Model Overview 
We wish to predict the chromatin state of a given enhancer­cell type pair from information about
 
the motif structure and cell type regulator expression. The input for the model is a regulator
 
expression vector and a motif composition vector for a previously unseen enhancer­cell type
 
pair. The output of the model is an enhancer chromatin state, which is a binarized value. The
 
model is trained on labeled chromatin state­cell type examples. 
Response Variable Function 
  Y
Let
the motif occurrence vector (where
 
 
Y ~ F
 
is
 
 
T ∙ X2
T
X1
using the the inner product space 
 

  M  
be
  M,
( C  
 
pair, our model
)
. Extending this to the feature space described in Figure 1, this can be written
 
 
 
 

be the chromatin state response variable,
 

 as:
(X
Y 1 ~ F 1

be the cell type expression vector, and
 

are binarized). Then, for one

 
 
(M,

T ∙ X2
T  
)

Y C R  

  C  

C  
)

 
 
 

 
 

 
 

 

 

 

 

 

 

 

 

,

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

,

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

Boosted Alternating Decision Tree 
Alternating decision trees are an extension
 
 
  Ri  
of decision trees, where condition nodes
 
have true/false outputs, and prediction
 
 
nodes carry real­valued weights
. The
 
hypothesis
is generated by summing
 
 
over all condition/prediction node pairs in
 
 
an ADT 

 
(x)h

  ai  

:A  

 
 

 

 

 

 

 

 

 

 

 

h

(x)

A
= ∑
i

Ri

(x)

∙ ai  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 
 

   

 
 

 ai  

only

using

 
1)
 
 

Figure 2: ADT Architecture Overview ADTs have
 
 
 
prediction nodes
(yellow) as their roots and leaves,
 
which carry real­valued weights. The condition nodes
 
 Ri 
(blue) use a rule based on one M feature and one C
 
 
feature. 
Model Modifications 
We made two modifications to the base
 
 
positive
algorithm1,2:
 
 
conditional logic in condition nodes, and 2) using a different Z objective function that is faster to
 
 
 
calculate and only includes weights for examples passing the condition node. 
1) Positive conditional logic makes the model more representative of a biological system,
 
 
because we are trying to model the effects of (motif, regulator) pairs on cell type decisions.
 
 
The absence of a motif or regulator does likely not confer as strong of an effect as presence.
 
 
Reproducibility and sensitivity issues with sequencing data also introduce noise that may
 
create false negatives, and a model without weights on negative conditions is likely more
 
robust to these errors. A regular ADT1,2 has prediction nodes for both true and false outcomes
of a condition node, whereas our model has only prediction nodes for true outcomes (e.g.
 
 
 
∀i : Ri

 
 
).
= 0  

(false)

 
 
 

   

 
 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

3 

 

 

 
)

 
)W (p
 

 
z = 2 ∙(√W (p

 
+ ⋀ c

 
2) The algorithm seeks to minimize the Z (loss) objective function. The regular loss function1,2
 
⋁ ¬
c)W (p
(x)W
(¬p
is:
 
 
is
 
are sums for positive or
the sum of weights for examples meeting condition
 
 
 
− ⋀ c + W
⋁ ¬  
c) 
)W (p
negative examples only. We used the function
 
instead, as we are only interested in positive examples, and this requires fewer searches of a
 
 
   
large matrix (2.3M X 270). 

 
− ⋀ ¬ ) + W
  W +/−  
  x  
+ ⋀ c
 

− ⋀ c + √W (p
 

 
, where
 
 
 
)

z = 2 ∙ √W (p

 
 
+ ⋀ ¬

c)
, and

(¬p

c) 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Implementation 
We implemented the boosted ADT model in Python, using Numpy sparse matrixes to reduce
memory footprint, and the Gnumpy7 GPU matrix algebra library to speed up implicit inner
product steps on the large feature matrixes. 
 
Results 
 
We used two different methods to train/test our model: 1) random holdout of training examples,
and 2) Leave One Out Cross­Validation (LOOCV) by cell type. These methods present two
 
 
possible different use cases for the model, and have different results. As our dataset
 
is
 
unbalanced, we used Balanced Error Rate (BER) for error analysis. 

 
 

 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

Figure 3: Error Rate Analysis of Two Scenarios. The learning curve (left) shows Balanced Error Rate (BER) for 5%
 
random holdout of training examples. Our criteria for convergence was met at ~300 iterations, however we continued
 
training to observe overfitting. The BER distribution (right) shows BERs for cell type LOOCV at convergence. The
 
 
middle and right distributions are split by measured (middle) and imputed (right) gene expression. 
 

 
 

 
 

 
 

 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

4 

Predicting Cell Type­Specific Chromatin States from Genetic Regulatory Networks 

Christopher Probert, Anthony Ho 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 
 

 
 

 

 
 

 
 

 

 
 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 
Introduction 
 
The human body consists of hundreds of unique cell types with unique characteristics, but yet all
contain the same DNA sequence. This disparity is created by cell type­specific gene regulation,
 
 
which drives complex patterns of expressing certain gene sets in specific cell types, and different
gene sets in others. An important variable in this regulatory program is the physical state of
 
chromatin, a complex of DNA and proteins inside the nucleus of cells. 
The packaging of a human genome into chromatin allows different regions of the genome (in
 
 
 
particular, enhancer elements) to be made accessible or protected from different gene regulators,
which are proteins that bind DNA and activate or repress expression of genes. Understanding the
 
factors affecting enhancer chromatin state may reveal processes that govern cell differentiation. 
 
Here, we seek to predict chromatin states in diverse cell types from regulator gene expression
 
profiles and prior information about regulatory gene physical characteristics. We built a model
based on a boosted alternating decision tree (ADT) to predict the chromatin state of genomic
 
 
enhancer regions, using motif composition and cellular gene expression as input features. 
 
Dataset 
Our data is derived from recent large­scale genomics projects by the two sequencing consortia
 
(Epigenomics Roadmap4 and ENCODE3). The primary results are data from various types of
 
sequencing experiments across 270 different cell lines. 
Chromatin states: Chromatin states are the labels we wish to predict. DNase­seq experiments
 
quantify chromatin state by degrading DNA at sites not protected by chromatin structure.
(DNase­seq data from ENCODE, DNase­seq data from Epigenomics Roadmap) 
 
Regulator expression: We use regulator gene expression as a feature to capture variation across
different cell types. ENCODE RNA­seq data measures gene expression for 200 cell types. For
 
the remaining 70 cell types, we used regularized logistic regression models developed by the
 
Kundaje lab at Stanford6 to impute expression values from other epigenomic state information.
 
 
(ENCODE RNA­seq data) 
Motif presence: We use motif presence as a feature to capture variation between enhancer
 
 
regions. The input data are a set of systematically discovered human regulator binding motifs5. 
Enhancer regions: We used the human genome for enhancer annotations and sequences. (genome
 
hg19) 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 
 

1 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 
 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 
 
 

 
 
 

 

 
 
 

F  
.

 

 
T
T ∙ X2
Y 1 ~ F 1
(X

 
, where the goal is to learn the function 
)

Features and Preprocessing 
Feature Space 
Our enhancer­cell type training examples have both intragenomic and intergenomic variation:
 
 
they are from both different positions in the genome, and from different cell types. To capture
both sources of variation, we use two feature spaces: motif occurrence per enhancer (to capture
 
 
variance by genome position), and regulator expression per cell type (to capture variance by cell
type). Thus, for each enhancer­cell type training example, our model has a chromatin state label
 
and two feature vectors (200 gene expression values and 500 motif presence values). 
 
We believe these features are appropriate because they capture variation on both the genomic
 
 
enhancer region and cell type axes. For performance, we represent the feature space as three
 
matrixes (Figure 1), where the goal is to predict the enhancer state matrix from the inner product
space of the motif occurrence and regulator expression matrices. The model can be represented
 
as 
 
Figure 1: Feature Space Overview. Each
 
 
 Y 1
example is an enhancer­cell type pair (
). This
 
 
 
corresponds to an enhancer motif presence
 
 
 
 X1
), and a cell type gene expression
vector (
 
 
 
). X2
vector  (
 
 
Preprocessing 
Regulator Expression: We normalized
 
 
RNA­seq data for each cell type using
 
standard techniques (FPKM). We used
a list of 200 ENCODE transcription
 
 
factors3 as our list of regulator genes,
 
and extracted expression values for
 
 
 
type as a
these genes in each cell
 
matrix. We used a 0.5 FPKM threshold
 
 
to binarize expression values in the regulator expression matrix (
Motif occurrence: We searched genomic enhancer regions using an HMM model for each motif
from the set of human regulatory motifs5. We binarized motif presence in each genomic enhancer
 
region to obtain the motif occurrence matrix (
Enhancer state: We used pre­processed DNase­seq binarized peak calls to obtain genomic
 
chromatin state. We intersected this binarized chromatin state data with genomic enhancer
 
 
annotations to obtain binarized chromatin state for each enhancer (
 

 
).Y 1
 

).X2
 
 

).X1
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 
 

 
 

 
 

 

 
 

 

 

 
 

 

 

 

 

 

2 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 
 

 
 

 
 

 
 

   

Model Overview 
We wish to predict the chromatin state of a given enhancer­cell type pair from information about
 
the motif structure and cell type regulator expression. The input for the model is a regulator
 
expression vector and a motif composition vector for a previously unseen enhancer­cell type
 
pair. The output of the model is an enhancer chromatin state, which is a binarized value. The
 
model is trained on labeled chromatin state­cell type examples. 
Response Variable Function 
  Y
Let
the motif occurrence vector (where
 
 
Y ~ F
 
is
 
 
T ∙ X2
T
X1
using the the inner product space 
 

  M  
be
  M,
( C  
 
pair, our model
)
. Extending this to the feature space described in Figure 1, this can be written
 
 
 
 

be the chromatin state response variable,
 

 as:
(X
Y 1 ~ F 1

be the cell type expression vector, and
 

are binarized). Then, for one

 
 
(M,

T ∙ X2
T  
)

Y C R  

  C  

C  
)

 
 
 

 
 

 
 

 

 

 

 

 

 

 

 

,

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

,

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

Boosted Alternating Decision Tree 
Alternating decision trees are an extension
 
 
  Ri  
of decision trees, where condition nodes
 
have true/false outputs, and prediction
 
 
nodes carry real­valued weights
. The
 
hypothesis
is generated by summing
 
 
over all condition/prediction node pairs in
 
 
an ADT 

 
(x)h

  ai  

:A  

 
 

 

 

 

 

 

 

 

 

 

h

(x)

A
= ∑
i

Ri

(x)

∙ ai  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 
 

   

 
 

 ai  

only

using

 
1)
 
 

Figure 2: ADT Architecture Overview ADTs have
 
 
 
prediction nodes
(yellow) as their roots and leaves,
 
which carry real­valued weights. The condition nodes
 
 Ri 
(blue) use a rule based on one M feature and one C
 
 
feature. 
Model Modifications 
We made two modifications to the base
 
 
positive
algorithm1,2:
 
 
conditional logic in condition nodes, and 2) using a different Z objective function that is faster to
 
 
 
calculate and only includes weights for examples passing the condition node. 
1) Positive conditional logic makes the model more representative of a biological system,
 
 
because we are trying to model the effects of (motif, regulator) pairs on cell type decisions.
 
 
The absence of a motif or regulator does likely not confer as strong of an effect as presence.
 
 
Reproducibility and sensitivity issues with sequencing data also introduce noise that may
 
create false negatives, and a model without weights on negative conditions is likely more
 
robust to these errors. A regular ADT1,2 has prediction nodes for both true and false outcomes
of a condition node, whereas our model has only prediction nodes for true outcomes (e.g.
 
 
 
∀i : Ri

 
 
).
= 0  

(false)

 
 
 

   

 
 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

3 

 

 

 
)

 
)W (p
 

 
z = 2 ∙(√W (p

 
+ ⋀ c

 
2) The algorithm seeks to minimize the Z (loss) objective function. The regular loss function1,2
 
⋁ ¬
c)W (p
(x)W
(¬p
is:
 
 
is
 
are sums for positive or
the sum of weights for examples meeting condition
 
 
 
− ⋀ c + W
⋁ ¬  
c) 
)W (p
negative examples only. We used the function
 
instead, as we are only interested in positive examples, and this requires fewer searches of a
 
 
   
large matrix (2.3M X 270). 

 
− ⋀ ¬ ) + W
  W +/−  
  x  
+ ⋀ c
 

− ⋀ c + √W (p
 

 
, where
 
 
 
)

z = 2 ∙ √W (p

 
 
+ ⋀ ¬

c)
, and

(¬p

c) 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Implementation 
We implemented the boosted ADT model in Python, using Numpy sparse matrixes to reduce
memory footprint, and the Gnumpy7 GPU matrix algebra library to speed up implicit inner
product steps on the large feature matrixes. 
 
Results 
 
We used two different methods to train/test our model: 1) random holdout of training examples,
and 2) Leave One Out Cross­Validation (LOOCV) by cell type. These methods present two
 
 
possible different use cases for the model, and have different results. As our dataset
 
is
 
unbalanced, we used Balanced Error Rate (BER) for error analysis. 

 
 

 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

Figure 3: Error Rate Analysis of Two Scenarios. The learning curve (left) shows Balanced Error Rate (BER) for 5%
 
random holdout of training examples. Our criteria for convergence was met at ~300 iterations, however we continued
 
training to observe overfitting. The BER distribution (right) shows BERs for cell type LOOCV at convergence. The
 
 
middle and right distributions are split by measured (middle) and imputed (right) gene expression. 
 

 
 

 
 

 
 

 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

4 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 

 

 
 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 
 

 
 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 

 
 
 

 
 
 

 
 
 
 

Discussion 
 
In the random holdout case (Figure 3, left), the model achieves a 0.05­0.08 BER on the test set,
with minimal overfitting (0.035 training BER). Since the ADT algorithm adds one condition
 
 
node and one prediction node at each iteration, iteration number is a direct measure of model
complexity. As expected, overfitting (the separation of training and test error) increases with
 
model complexity: at 250 condition nodes training and test BER are within 0.02, but at 500
 
condition nodes training balanced error is 0.06 less than test balanced error. 
In previously unseen cell types, the model achieves a 0.15 average LOOCV test BER. In this
setting,
the model exhibits much stronger overfitting (0.034 average training BER at
convergence, .116 higher than training error). The balanced error rate is higher in cell types with
imputed (0.185) expression than with measured expression (0.149) (Figure 3, right), suggesting
that using imputed expression features decreases accuracy of chromatin state predictions. 
Conclusion 
We have shown that boosted ADTs can predict chromatin states using two methods: 
Random holdout: Our model performs well (5­8% test BER at convergence) for chromatin state
 
 
prediction when data points are randomly held out of training. This method is useful for several
applications, such as denoising chromatin state data, identifying irregular chromatin state points,
 
and learning about how specific motif/regulator pairs confer chromatin state and cell type
 
specificity. 
 
Previously unseen cell types: Intuitively, predicting chromatin states of unseen cell types is a
 
 
significantly harder problem than random data holdout, because the new cell types may have
 
 
 
types trained on. The model assumes that the
different regulatory dynamics than the cell
 
response variable
in the training set as in
 
the test set, and this may not be true if the unseen cell type has different regulatory dynamics. 
Future 
Given more time, we would like to improve performance on the LOOCV case by identifying
 
 
 
patterns in errors and noising/ bootstrapping the training set. We would also like to try expanding
the feature space to include some notion of local genomic context, such as nearby transcriptional
 
activity. Moreover, regulators such as transcription factors are known to function in conjugates
 
(called dimers or complexes), and by comparing accuracy of instantiations of our model with
 
different factorizations of regulators or groups of regulators, we could elucidate combinatorial
 
effects of regulatory gene activity. 
Acknowledgements 
We thank Prof. Anshul Kundaje and Kundaje Lab members for advice on this project. 
References 
[1] Y. Freund and L. Mason. The Alternating Decision Tree Algorithm. ICML, 1999. 
[2] B. Pfahringer, G. Holmes and R. Kirkby. Optimizing the Induction of Alternating Decision Trees. KDD, 2009. 
[3] ENCODE Consortium. An integrated encyclopedia of DNA elements in the human genome. Nature, 2012. 
[4] Roadmap Consortium. The NIH Roadmap Epigenomics Mapping Consortium. Nature Biotechnology, 2010. 
[5] Xie et al. Systematic discovery of regulatory motifs in human promoters. Nature, 2005. 
[6] S. Kyriazopoulou­Panagiotopoulou, A. Kundaje. Unpublished work, 2014. 
[7] T. Tieleman. Gnumpy: An Easy Way to use GPU Boards in Python. TNML 2010. 

 
is from the same distribution

 
 
Y ~ F

C  

 

 

 
 
 
 
  Y ,
( M C

,

(M,

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 
 

 

 

 
 

 
 

 

 

 

 

 
 

 

 
 

 
 

 
 

 

 
)

)

5 

