A Pairs Trading Strategy for GOOG/GOOGL Using Machine Learning

Jiayu Wu

December 9, 2015

Abstract

We apply the spread model, the O-U model and SVM to build a pairs trading strategy for GOOG/GOOGL.
There are two parts of the project that we think are novel after reviewing past related work: ﬁrst, we model
not only price spread but also several selected technical indicators’ “spread”; second, we use two new metrics for
measuring our trading strategy instead of the traditional back-testing method because we want to focus more on
future prediction rather than return prediction, and to achieve that, we also propose two algorithms to reconstruct
the data set. We outline the process of how our strategy is executed and, at the end, show that our strategy
delievers a good win-rate.

1 Introduction

Pairs trading is a popular trading strategy in the last
three decades after it was ﬁrst used by Morgan Stanley
in 1980s. Pairs trading means to utilize a pair or a bag of
related ﬁnancial instruments to make proﬁts by exploiting
their relations. One important feature of pairs trading is
that it is market-neutral, which is particularly appealing
in the current volatile and unpredictable macro-economic
environments.

In this project, we will use the spread model, the O-
U mean-reverting model, and SVM to build a trading
strategy and apply the strategy to GOOG/GOOGL. We
will ﬁrst illustrate the spread model and the O-U mean-
reverting in detail. Unlike most previous work that only
takes price spread into consideration, we will also use
the spread model and the O-U mean-reverting model to
model the two securities’ technical indicators.
In other
words, we extend the concept of “spread” by also inves-
tigating technical indicators’ spread. We will construct
trading signals by processing diﬀerent kinds of “spreads”
and then use these trading signals as input features for
SVM classiﬁcation. Instead of using the traditional back-
testing method to test our trading strategy, we will use
SVM binary classiﬁcation to measure our trading strat-
egy. To achieve that, we will reconstruct the original pric-
ing feeds to labeled examples, and there are two methods
we use to reconstruct the labeled examples, one for mea-
suring the strategy’s ability to seize proﬁt opportunities,
and the other for measuring the strategy’s ability to make
directional predictions.

One important thing for a pairs trading strategy is to
select a proper pair of ﬁnancial instrucments. For exam-
ple, if the price of security A always rises when the price
of security B rises, it seems that A and B may be used
for pairs trading. However, the explicit relation between
prices may not be good enough for a good pair. The good
pairs should share as many the same intrinsic character-
istics as possible. GOOG/GOOGL are both shares of
Google Inc. (now Alphabet Inc.) but with diﬀerent vote
rights. GOOGL represents Class A shares while GOOG
represents Class C shares. Only Class A shares have vot-
ing rights. Therefore, generally, the price of GOOGL is
slightly higher than that of GOOG. Other than voting
rights, they are essentially the same since their prices are
based upon the same fundamentals.

2 Related Work

In Statistical Arbitrage using Pairs Trading with Support
Vector Machine Learning, Gopal Rao Madhavaram com-
pares O-U model (mean reverting process) and SVM’s
performance on pairs trading, more speciﬁcally,
index
arbitrage, using constituents stocks to predict the cor-
responding index. His results show that SVM achieves
a slightly better performance than the mean-reverting
model.

There are also some CS229 projects from previous
years that have interesting methods and results related
to pairs trading. In Machine Learning in Pairs Trading
Strategies, the authors ﬁrst use linear regression to com-

1

A Pairs Trading Strategy for GOOG/GOOGL Using Machine Learning

Jiayu Wu

December 9, 2015

Abstract

We apply the spread model, the O-U model and SVM to build a pairs trading strategy for GOOG/GOOGL.
There are two parts of the project that we think are novel after reviewing past related work: ﬁrst, we model
not only price spread but also several selected technical indicators’ “spread”; second, we use two new metrics for
measuring our trading strategy instead of the traditional back-testing method because we want to focus more on
future prediction rather than return prediction, and to achieve that, we also propose two algorithms to reconstruct
the data set. We outline the process of how our strategy is executed and, at the end, show that our strategy
delievers a good win-rate.

1 Introduction

Pairs trading is a popular trading strategy in the last
three decades after it was ﬁrst used by Morgan Stanley
in 1980s. Pairs trading means to utilize a pair or a bag of
related ﬁnancial instruments to make proﬁts by exploiting
their relations. One important feature of pairs trading is
that it is market-neutral, which is particularly appealing
in the current volatile and unpredictable macro-economic
environments.

In this project, we will use the spread model, the O-
U mean-reverting model, and SVM to build a trading
strategy and apply the strategy to GOOG/GOOGL. We
will ﬁrst illustrate the spread model and the O-U mean-
reverting in detail. Unlike most previous work that only
takes price spread into consideration, we will also use
the spread model and the O-U mean-reverting model to
model the two securities’ technical indicators.
In other
words, we extend the concept of “spread” by also inves-
tigating technical indicators’ spread. We will construct
trading signals by processing diﬀerent kinds of “spreads”
and then use these trading signals as input features for
SVM classiﬁcation. Instead of using the traditional back-
testing method to test our trading strategy, we will use
SVM binary classiﬁcation to measure our trading strat-
egy. To achieve that, we will reconstruct the original pric-
ing feeds to labeled examples, and there are two methods
we use to reconstruct the labeled examples, one for mea-
suring the strategy’s ability to seize proﬁt opportunities,
and the other for measuring the strategy’s ability to make
directional predictions.

One important thing for a pairs trading strategy is to
select a proper pair of ﬁnancial instrucments. For exam-
ple, if the price of security A always rises when the price
of security B rises, it seems that A and B may be used
for pairs trading. However, the explicit relation between
prices may not be good enough for a good pair. The good
pairs should share as many the same intrinsic character-
istics as possible. GOOG/GOOGL are both shares of
Google Inc. (now Alphabet Inc.) but with diﬀerent vote
rights. GOOGL represents Class A shares while GOOG
represents Class C shares. Only Class A shares have vot-
ing rights. Therefore, generally, the price of GOOGL is
slightly higher than that of GOOG. Other than voting
rights, they are essentially the same since their prices are
based upon the same fundamentals.

2 Related Work

In Statistical Arbitrage using Pairs Trading with Support
Vector Machine Learning, Gopal Rao Madhavaram com-
pares O-U model (mean reverting process) and SVM’s
performance on pairs trading, more speciﬁcally,
index
arbitrage, using constituents stocks to predict the cor-
responding index. His results show that SVM achieves
a slightly better performance than the mean-reverting
model.

There are also some CS229 projects from previous
years that have interesting methods and results related
to pairs trading. In Machine Learning in Pairs Trading
Strategies, the authors ﬁrst use linear regression to com-

1

pute and generate trading signals and obtain a sharpe-
ratio of 1.14 from back testing and they also propose a
trading strategy using EM algorithm and Kalman ﬁlter.
Moreover,
in Machine Learnig in Statistical Arbitrage,
the authors investigate index arbitrage, and they ﬁrst use
PCA to select ﬁrst 12 components out of 100 candidates
(constituents of FTSE 100 Index), and then use O-U
model to produce a mean-reverting process, which helps
to create the trading signal. Their back-testing shows
that their trading strategy can make reasonable proﬁts.

3 Dataset

We obtain the data set from Quantquote.com. The time-
frame for our data set is 1 min, ranging from 10/01/2014
to 10/30/2015.

First we need to do some data preprocessing because
pairs trading require the data of the two securities must
be consistent. By consistent we mean that the date and
time of every feed of both securities should be a exact
match. However, in our data set, both securities have
some missing bars, most of which are time intervals with
no trading volume, explained by Quantquote.com. There-
fore we wrote some python script to ﬁll up the missing
bars using last close price and volume = 0. These missing
bars are about 0.3% of the entire data set.

The original data set has 106141 feeds for GOOG,
106136 feeds for GOOGL; after preprocessing, the data
set we use has 105690 feeds for both securities.

two stock prices may not ﬂuctuate in the same range. Fur-
thermore, β may change over time because of change of
some intrinsic characteristics of either company or change
of overall stock market regime, however, in this project,
we assume β is a constant term over the duration of the
dataset.

In this project, we will use ‘close’ - ‘open’ as dAt (or

dBt), ‘open’ as At (or Bt) for linear regression.

4.2 O-U Model

Now we investigate the residual term from the above
spread model. We will use OrnsteinUhlenbeck process
to model the residual term because the O-U process is a
stochastic process such that the object modeled by the
process always drifts towards its long-term mean. The
residual term, namely the spread, has very similar prop-
erty according the assumption of pairs trading. The resid-
ual term Xt from the above spread model satisﬁes the
following stochastic diﬀerential equation:
dXt = θ(µ − Xt)dt + σdWt

(2)

Where θ, µ and σ are the paramters we want to es-
timate later using linear regression. Wt denotes Wiener
process, which suggests that the probability distribution
of Wt is a normal distribution with mean = 0 and variance
= t.

By integrating (2), we have

Xt+1 = a + bXt + t+1

(3)

Data example:

{‘date’:

‘open’: 711.98,
710.78, ‘volume’: 41773}

‘high’: 712.58,

20151030,

‘time’:
‘low’: 710.72,

1559,
‘close’:

Where

4 Pairs Trading Model

4.1 Spread Model

The canonical pairs trading spread model is as follows:

dAt
At

= αdt + β

dBt
Bt

+ dXt

(1)

where At is the price of security A at time t, Bt is the
price of security B at time t, Xt is the residual term, which
has the mean-reverting property because mean-reverting
spread is the basic assumption of pairs trading and the
drift term αdt (cid:28) β dMt
, which is neglectable compared to
the return of either security. The above model shows that
the stock price of the two securities is linear related. The
β here helps solve the normalization problem since the

Mt

2

a = (1 − e−θ∆t)µ

b = e−θ∆t

V ar() = σ2 1 − e−2θ∆t

2θ

We can obtain the above parameters from running a
linear regression on Xt+1 against Xt, and then we can
have obtain estimates for the parameters in the original
O-U process equation:

θ = −log(b) × 1
∆t

µ =

a
1 − b

(cid:114) V ar()2θ

σ =

σeq =(cid:112)V ar(Xt) =

1 − b2
σ√
2θ

=

(cid:114) V ar()

1 − b2

A Pairs Trading Strategy for GOOG/GOOGL Using Machine Learning

Jiayu Wu

December 9, 2015

Abstract

We apply the spread model, the O-U model and SVM to build a pairs trading strategy for GOOG/GOOGL.
There are two parts of the project that we think are novel after reviewing past related work: ﬁrst, we model
not only price spread but also several selected technical indicators’ “spread”; second, we use two new metrics for
measuring our trading strategy instead of the traditional back-testing method because we want to focus more on
future prediction rather than return prediction, and to achieve that, we also propose two algorithms to reconstruct
the data set. We outline the process of how our strategy is executed and, at the end, show that our strategy
delievers a good win-rate.

1 Introduction

Pairs trading is a popular trading strategy in the last
three decades after it was ﬁrst used by Morgan Stanley
in 1980s. Pairs trading means to utilize a pair or a bag of
related ﬁnancial instruments to make proﬁts by exploiting
their relations. One important feature of pairs trading is
that it is market-neutral, which is particularly appealing
in the current volatile and unpredictable macro-economic
environments.

In this project, we will use the spread model, the O-
U mean-reverting model, and SVM to build a trading
strategy and apply the strategy to GOOG/GOOGL. We
will ﬁrst illustrate the spread model and the O-U mean-
reverting in detail. Unlike most previous work that only
takes price spread into consideration, we will also use
the spread model and the O-U mean-reverting model to
model the two securities’ technical indicators.
In other
words, we extend the concept of “spread” by also inves-
tigating technical indicators’ spread. We will construct
trading signals by processing diﬀerent kinds of “spreads”
and then use these trading signals as input features for
SVM classiﬁcation. Instead of using the traditional back-
testing method to test our trading strategy, we will use
SVM binary classiﬁcation to measure our trading strat-
egy. To achieve that, we will reconstruct the original pric-
ing feeds to labeled examples, and there are two methods
we use to reconstruct the labeled examples, one for mea-
suring the strategy’s ability to seize proﬁt opportunities,
and the other for measuring the strategy’s ability to make
directional predictions.

One important thing for a pairs trading strategy is to
select a proper pair of ﬁnancial instrucments. For exam-
ple, if the price of security A always rises when the price
of security B rises, it seems that A and B may be used
for pairs trading. However, the explicit relation between
prices may not be good enough for a good pair. The good
pairs should share as many the same intrinsic character-
istics as possible. GOOG/GOOGL are both shares of
Google Inc. (now Alphabet Inc.) but with diﬀerent vote
rights. GOOGL represents Class A shares while GOOG
represents Class C shares. Only Class A shares have vot-
ing rights. Therefore, generally, the price of GOOGL is
slightly higher than that of GOOG. Other than voting
rights, they are essentially the same since their prices are
based upon the same fundamentals.

2 Related Work

In Statistical Arbitrage using Pairs Trading with Support
Vector Machine Learning, Gopal Rao Madhavaram com-
pares O-U model (mean reverting process) and SVM’s
performance on pairs trading, more speciﬁcally,
index
arbitrage, using constituents stocks to predict the cor-
responding index. His results show that SVM achieves
a slightly better performance than the mean-reverting
model.

There are also some CS229 projects from previous
years that have interesting methods and results related
to pairs trading. In Machine Learning in Pairs Trading
Strategies, the authors ﬁrst use linear regression to com-

1

pute and generate trading signals and obtain a sharpe-
ratio of 1.14 from back testing and they also propose a
trading strategy using EM algorithm and Kalman ﬁlter.
Moreover,
in Machine Learnig in Statistical Arbitrage,
the authors investigate index arbitrage, and they ﬁrst use
PCA to select ﬁrst 12 components out of 100 candidates
(constituents of FTSE 100 Index), and then use O-U
model to produce a mean-reverting process, which helps
to create the trading signal. Their back-testing shows
that their trading strategy can make reasonable proﬁts.

3 Dataset

We obtain the data set from Quantquote.com. The time-
frame for our data set is 1 min, ranging from 10/01/2014
to 10/30/2015.

First we need to do some data preprocessing because
pairs trading require the data of the two securities must
be consistent. By consistent we mean that the date and
time of every feed of both securities should be a exact
match. However, in our data set, both securities have
some missing bars, most of which are time intervals with
no trading volume, explained by Quantquote.com. There-
fore we wrote some python script to ﬁll up the missing
bars using last close price and volume = 0. These missing
bars are about 0.3% of the entire data set.

The original data set has 106141 feeds for GOOG,
106136 feeds for GOOGL; after preprocessing, the data
set we use has 105690 feeds for both securities.

two stock prices may not ﬂuctuate in the same range. Fur-
thermore, β may change over time because of change of
some intrinsic characteristics of either company or change
of overall stock market regime, however, in this project,
we assume β is a constant term over the duration of the
dataset.

In this project, we will use ‘close’ - ‘open’ as dAt (or

dBt), ‘open’ as At (or Bt) for linear regression.

4.2 O-U Model

Now we investigate the residual term from the above
spread model. We will use OrnsteinUhlenbeck process
to model the residual term because the O-U process is a
stochastic process such that the object modeled by the
process always drifts towards its long-term mean. The
residual term, namely the spread, has very similar prop-
erty according the assumption of pairs trading. The resid-
ual term Xt from the above spread model satisﬁes the
following stochastic diﬀerential equation:
dXt = θ(µ − Xt)dt + σdWt

(2)

Where θ, µ and σ are the paramters we want to es-
timate later using linear regression. Wt denotes Wiener
process, which suggests that the probability distribution
of Wt is a normal distribution with mean = 0 and variance
= t.

By integrating (2), we have

Xt+1 = a + bXt + t+1

(3)

Data example:

{‘date’:

‘open’: 711.98,
710.78, ‘volume’: 41773}

‘high’: 712.58,

20151030,

‘time’:
‘low’: 710.72,

1559,
‘close’:

Where

4 Pairs Trading Model

4.1 Spread Model

The canonical pairs trading spread model is as follows:

dAt
At

= αdt + β

dBt
Bt

+ dXt

(1)

where At is the price of security A at time t, Bt is the
price of security B at time t, Xt is the residual term, which
has the mean-reverting property because mean-reverting
spread is the basic assumption of pairs trading and the
drift term αdt (cid:28) β dMt
, which is neglectable compared to
the return of either security. The above model shows that
the stock price of the two securities is linear related. The
β here helps solve the normalization problem since the

Mt

2

a = (1 − e−θ∆t)µ

b = e−θ∆t

V ar() = σ2 1 − e−2θ∆t

2θ

We can obtain the above parameters from running a
linear regression on Xt+1 against Xt, and then we can
have obtain estimates for the parameters in the original
O-U process equation:

θ = −log(b) × 1
∆t

µ =

a
1 − b

(cid:114) V ar()2θ

σ =

σeq =(cid:112)V ar(Xt) =

1 − b2
σ√
2θ

=

(cid:114) V ar()

1 − b2

5 Pairs Trading Model - A Modi-

ﬁed Version

same time in most cases.
4.RSI : relative strength index.

In this project, we extend the above pairs trading model
to also take technical indicators into consideration.

Most of the previous work only consider the spread of
price. It is possible that some indicators of the two securi-
ties may also provide as much useful information as their
prices. Moreover, two candidates for a good pair should
not only exhibit similar price movement but also similar
movements for some technical indicators. Therefore, we
want to investigate the diﬀerence of indicators like we do
for the price spread.

RSIt = 100 − (

100

1 + RSt

)

average of $length−period down closes .

where RS = average of $length−period up closes
RSI is good at indicating whether the stock is in over-
sought or overbought condition. We use RSI because we
believe the two securities, GOOG and GOOGL, tend to
be in the same condition.

The $length parameter will be discussed in “Evalua-

tion Metrics” section.

Now the challenge is to ﬁgure out what indicators to
use. A good indicator for this project must exhibit simi-
lar behaviours for both securities. Therefore, empirically,
we selected the following 4 indicators:
1.SMA : simple moving average.

6 SVM

t(cid:88)

t(cid:88)

Support Vector Machine (SVM) is a popular and eﬀective
machine learning algorithm for both classiﬁcation and re-
gression. The idea of SVM is to construct a hyperplane
to seperate the two classes of data with the gap being as
wide as possible.

The goal is do the following optimization:

minγ,w,b

s.t. y(i)(wT x(i) + b) ≥ 1 − ξi, i = 1, ..., m
ξi ≥ 0, i = 1, ..., m.
Alternatively, we can use the following dual form:

m(cid:80)

i=1

ξi

m(cid:80)

1

2(cid:107)w(cid:107)2 + C
m(cid:80)

maxα W (α) =

αi− 1
s.t. 0 ≤ αi ≤ C, i = 1, ..., m

i=1

2

i,j=1

m(cid:80)

αiy(i) = 0.

y(i)y(j)αiαj(cid:104)x(i), x(j)(cid:105)

SM At =

P close

i

i=t−$length+1

We choose SMA because it is simple to compute and also
helps incorporate information from previous $length time
periods.
2.WMA : weighted moving average.

W M At =

WiP close

i

i=t−$length+1

where Wi =

i−(t−$length)

t(cid:80)

j=t−$length+1

j−(t−$length)

i=1

WMA is also a technical indicator related to average
price but it diﬀers from SMA in that it assign weights to
prices: the further away from the current time, the less
weight that price has.
3.MFI : money ﬂow index.

M F It = 100 − (

100

1 + M oneyF lowRatiot

)

where
M oneyF lowRatiot = $length−period P ositive M oneyF lowt
$length−period N egative M oneyF lowt
volume × P high
t +P close
M oneyF lowt
3

+P low

=

t

t

,

.

is positive

if

P high

t

+P low

t +P close
3

t

>

M oneyF lowt
P high
t−1 +P low

t−1 +P close
3

t−1

.

MFI takes volume into consideration so that we can also
see volumes’ impact on the ﬁnal results. Since GOOG
and GOOGL are inﬂuenced essentially by the same fac-
tors, money should ﬂow in or ﬂow out both stocks at the

7 Trading Strategy Framework

The trading strategy is executed as follows:

t(cid:80)

1. run linear regression to get spread model residuals;
2. construct Xts using residuals from the previous step

according to Xt =

dXt ;

i=t0

run lag 1 auto-regression on Xts to get parameters

3.
according to O-U model ;
4. use parameters obtained from the previous steps to
compute T-scores for price and selected indicators;
5.
train SVM with the modiﬁed data set (we will talk
about data set reconstruction in “Evaluation Metrics”
section);
6. apply the trained model to test data set, namely to
make trading decisions, which is either “make a bet” or
“stay calm and do nothing”.

3

A Pairs Trading Strategy for GOOG/GOOGL Using Machine Learning

Jiayu Wu

December 9, 2015

Abstract

We apply the spread model, the O-U model and SVM to build a pairs trading strategy for GOOG/GOOGL.
There are two parts of the project that we think are novel after reviewing past related work: ﬁrst, we model
not only price spread but also several selected technical indicators’ “spread”; second, we use two new metrics for
measuring our trading strategy instead of the traditional back-testing method because we want to focus more on
future prediction rather than return prediction, and to achieve that, we also propose two algorithms to reconstruct
the data set. We outline the process of how our strategy is executed and, at the end, show that our strategy
delievers a good win-rate.

1 Introduction

Pairs trading is a popular trading strategy in the last
three decades after it was ﬁrst used by Morgan Stanley
in 1980s. Pairs trading means to utilize a pair or a bag of
related ﬁnancial instruments to make proﬁts by exploiting
their relations. One important feature of pairs trading is
that it is market-neutral, which is particularly appealing
in the current volatile and unpredictable macro-economic
environments.

In this project, we will use the spread model, the O-
U mean-reverting model, and SVM to build a trading
strategy and apply the strategy to GOOG/GOOGL. We
will ﬁrst illustrate the spread model and the O-U mean-
reverting in detail. Unlike most previous work that only
takes price spread into consideration, we will also use
the spread model and the O-U mean-reverting model to
model the two securities’ technical indicators.
In other
words, we extend the concept of “spread” by also inves-
tigating technical indicators’ spread. We will construct
trading signals by processing diﬀerent kinds of “spreads”
and then use these trading signals as input features for
SVM classiﬁcation. Instead of using the traditional back-
testing method to test our trading strategy, we will use
SVM binary classiﬁcation to measure our trading strat-
egy. To achieve that, we will reconstruct the original pric-
ing feeds to labeled examples, and there are two methods
we use to reconstruct the labeled examples, one for mea-
suring the strategy’s ability to seize proﬁt opportunities,
and the other for measuring the strategy’s ability to make
directional predictions.

One important thing for a pairs trading strategy is to
select a proper pair of ﬁnancial instrucments. For exam-
ple, if the price of security A always rises when the price
of security B rises, it seems that A and B may be used
for pairs trading. However, the explicit relation between
prices may not be good enough for a good pair. The good
pairs should share as many the same intrinsic character-
istics as possible. GOOG/GOOGL are both shares of
Google Inc. (now Alphabet Inc.) but with diﬀerent vote
rights. GOOGL represents Class A shares while GOOG
represents Class C shares. Only Class A shares have vot-
ing rights. Therefore, generally, the price of GOOGL is
slightly higher than that of GOOG. Other than voting
rights, they are essentially the same since their prices are
based upon the same fundamentals.

2 Related Work

In Statistical Arbitrage using Pairs Trading with Support
Vector Machine Learning, Gopal Rao Madhavaram com-
pares O-U model (mean reverting process) and SVM’s
performance on pairs trading, more speciﬁcally,
index
arbitrage, using constituents stocks to predict the cor-
responding index. His results show that SVM achieves
a slightly better performance than the mean-reverting
model.

There are also some CS229 projects from previous
years that have interesting methods and results related
to pairs trading. In Machine Learning in Pairs Trading
Strategies, the authors ﬁrst use linear regression to com-

1

pute and generate trading signals and obtain a sharpe-
ratio of 1.14 from back testing and they also propose a
trading strategy using EM algorithm and Kalman ﬁlter.
Moreover,
in Machine Learnig in Statistical Arbitrage,
the authors investigate index arbitrage, and they ﬁrst use
PCA to select ﬁrst 12 components out of 100 candidates
(constituents of FTSE 100 Index), and then use O-U
model to produce a mean-reverting process, which helps
to create the trading signal. Their back-testing shows
that their trading strategy can make reasonable proﬁts.

3 Dataset

We obtain the data set from Quantquote.com. The time-
frame for our data set is 1 min, ranging from 10/01/2014
to 10/30/2015.

First we need to do some data preprocessing because
pairs trading require the data of the two securities must
be consistent. By consistent we mean that the date and
time of every feed of both securities should be a exact
match. However, in our data set, both securities have
some missing bars, most of which are time intervals with
no trading volume, explained by Quantquote.com. There-
fore we wrote some python script to ﬁll up the missing
bars using last close price and volume = 0. These missing
bars are about 0.3% of the entire data set.

The original data set has 106141 feeds for GOOG,
106136 feeds for GOOGL; after preprocessing, the data
set we use has 105690 feeds for both securities.

two stock prices may not ﬂuctuate in the same range. Fur-
thermore, β may change over time because of change of
some intrinsic characteristics of either company or change
of overall stock market regime, however, in this project,
we assume β is a constant term over the duration of the
dataset.

In this project, we will use ‘close’ - ‘open’ as dAt (or

dBt), ‘open’ as At (or Bt) for linear regression.

4.2 O-U Model

Now we investigate the residual term from the above
spread model. We will use OrnsteinUhlenbeck process
to model the residual term because the O-U process is a
stochastic process such that the object modeled by the
process always drifts towards its long-term mean. The
residual term, namely the spread, has very similar prop-
erty according the assumption of pairs trading. The resid-
ual term Xt from the above spread model satisﬁes the
following stochastic diﬀerential equation:
dXt = θ(µ − Xt)dt + σdWt

(2)

Where θ, µ and σ are the paramters we want to es-
timate later using linear regression. Wt denotes Wiener
process, which suggests that the probability distribution
of Wt is a normal distribution with mean = 0 and variance
= t.

By integrating (2), we have

Xt+1 = a + bXt + t+1

(3)

Data example:

{‘date’:

‘open’: 711.98,
710.78, ‘volume’: 41773}

‘high’: 712.58,

20151030,

‘time’:
‘low’: 710.72,

1559,
‘close’:

Where

4 Pairs Trading Model

4.1 Spread Model

The canonical pairs trading spread model is as follows:

dAt
At

= αdt + β

dBt
Bt

+ dXt

(1)

where At is the price of security A at time t, Bt is the
price of security B at time t, Xt is the residual term, which
has the mean-reverting property because mean-reverting
spread is the basic assumption of pairs trading and the
drift term αdt (cid:28) β dMt
, which is neglectable compared to
the return of either security. The above model shows that
the stock price of the two securities is linear related. The
β here helps solve the normalization problem since the

Mt

2

a = (1 − e−θ∆t)µ

b = e−θ∆t

V ar() = σ2 1 − e−2θ∆t

2θ

We can obtain the above parameters from running a
linear regression on Xt+1 against Xt, and then we can
have obtain estimates for the parameters in the original
O-U process equation:

θ = −log(b) × 1
∆t

µ =

a
1 − b

(cid:114) V ar()2θ

σ =

σeq =(cid:112)V ar(Xt) =

1 − b2
σ√
2θ

=

(cid:114) V ar()

1 − b2

5 Pairs Trading Model - A Modi-

ﬁed Version

same time in most cases.
4.RSI : relative strength index.

In this project, we extend the above pairs trading model
to also take technical indicators into consideration.

Most of the previous work only consider the spread of
price. It is possible that some indicators of the two securi-
ties may also provide as much useful information as their
prices. Moreover, two candidates for a good pair should
not only exhibit similar price movement but also similar
movements for some technical indicators. Therefore, we
want to investigate the diﬀerence of indicators like we do
for the price spread.

RSIt = 100 − (

100

1 + RSt

)

average of $length−period down closes .

where RS = average of $length−period up closes
RSI is good at indicating whether the stock is in over-
sought or overbought condition. We use RSI because we
believe the two securities, GOOG and GOOGL, tend to
be in the same condition.

The $length parameter will be discussed in “Evalua-

tion Metrics” section.

Now the challenge is to ﬁgure out what indicators to
use. A good indicator for this project must exhibit simi-
lar behaviours for both securities. Therefore, empirically,
we selected the following 4 indicators:
1.SMA : simple moving average.

6 SVM

t(cid:88)

t(cid:88)

Support Vector Machine (SVM) is a popular and eﬀective
machine learning algorithm for both classiﬁcation and re-
gression. The idea of SVM is to construct a hyperplane
to seperate the two classes of data with the gap being as
wide as possible.

The goal is do the following optimization:

minγ,w,b

s.t. y(i)(wT x(i) + b) ≥ 1 − ξi, i = 1, ..., m
ξi ≥ 0, i = 1, ..., m.
Alternatively, we can use the following dual form:

m(cid:80)

i=1

ξi

m(cid:80)

1

2(cid:107)w(cid:107)2 + C
m(cid:80)

maxα W (α) =

αi− 1
s.t. 0 ≤ αi ≤ C, i = 1, ..., m

i=1

2

i,j=1

m(cid:80)

αiy(i) = 0.

y(i)y(j)αiαj(cid:104)x(i), x(j)(cid:105)

SM At =

P close

i

i=t−$length+1

We choose SMA because it is simple to compute and also
helps incorporate information from previous $length time
periods.
2.WMA : weighted moving average.

W M At =

WiP close

i

i=t−$length+1

where Wi =

i−(t−$length)

t(cid:80)

j=t−$length+1

j−(t−$length)

i=1

WMA is also a technical indicator related to average
price but it diﬀers from SMA in that it assign weights to
prices: the further away from the current time, the less
weight that price has.
3.MFI : money ﬂow index.

M F It = 100 − (

100

1 + M oneyF lowRatiot

)

where
M oneyF lowRatiot = $length−period P ositive M oneyF lowt
$length−period N egative M oneyF lowt
volume × P high
t +P close
M oneyF lowt
3

+P low

=

t

t

,

.

is positive

if

P high

t

+P low

t +P close
3

t

>

M oneyF lowt
P high
t−1 +P low

t−1 +P close
3

t−1

.

MFI takes volume into consideration so that we can also
see volumes’ impact on the ﬁnal results. Since GOOG
and GOOGL are inﬂuenced essentially by the same fac-
tors, money should ﬂow in or ﬂow out both stocks at the

7 Trading Strategy Framework

The trading strategy is executed as follows:

t(cid:80)

1. run linear regression to get spread model residuals;
2. construct Xts using residuals from the previous step

according to Xt =

dXt ;

i=t0

run lag 1 auto-regression on Xts to get parameters

3.
according to O-U model ;
4. use parameters obtained from the previous steps to
compute T-scores for price and selected indicators;
5.
train SVM with the modiﬁed data set (we will talk
about data set reconstruction in “Evaluation Metrics”
section);
6. apply the trained model to test data set, namely to
make trading decisions, which is either “make a bet” or
“stay calm and do nothing”.

3

8 Trading Signal

We give the following deﬁnitions for constructing the fea-
ture space for SVM classiﬁcation.

Here we deﬁne T-score for each feature:

Tprice = | X price

t

− µprice

|

σprice
eq

By the deﬁnition, we can see that T-score is stan-
dardized version of Xt. We use the absolute value here
because in this project we focus on the absolute value of
the spread not its sign.

indicators: Tsma = | X sma

Likewise, we deﬁne the following T-scores for other
|, Twma =
t −µrsi
σrsi
eq

|, Tmf i = | Xmf i

t −µsma
|, Trsi = | X rsi

σsma

t −µmf i
σmf i

−µwma

technical
| X wma

σwma

|.

eq

t

eq

eq

T-scores will be used as feature input for SVM binary

classiﬁcation (next section).

9 Evaluation Metrics

We use a diﬀerent evaluation metrics rather than tradi-
tional back-testing in this project. Instead, we use binary
classiﬁcation to evaluate the trading strategy. For clas-
siﬁcation purpose, we need to reconstruct the data set
according to the following algorithm. The trading logic
behind this algorithm is that pairs trading is statistical
arbitrage, and that means the value investing rule should
not be applied here. Therefore, the goal of this trading
strategy is to proﬁt in a short period of chosen trading
time frame. And only if the spread can narrow to an ex-
tent deﬁned by $threshold in a short period, is the trading
strategy willing to take the risk and make a bet. Notice
here we use the absolute value of Xt because we only
care about betting on that the spread will narrow in the
future. The sign of spread only becomes relevant if we
want to decide which security to long and which security
to short, but for this project, we want to focus on building
a trading strategy that bets on the direction of spread’s
change.

for each time t do

proﬁt = False
for each of the following $length time intervals,
dXt+i do

if |dXt+i| <= $threshold × |dXt| then

proﬁt = True
break

end if

end for
if proﬁt then
labelt = +1
labelt = −1

else

end if
end for

$length is set to 5 because we want to proﬁt in the near
future before our patience goes out. $threshold should
be set according to transaction cost in real-world trading
system. For this project, we set $threshold to be 0.25
because the resulting labels are balanced, which means
around half of the data has a label (+1) and another half
has a label of (−1), in order for SVM classiﬁcation to
work well.

Another metrics we use is to examine whether the
trained model can predict the correct moving direction of
T-scores in the next time interval. The data reconstruc-
tion algorithm is as follows:
if |dXt| > |dXt+1| then

for each time t do

else

labelt = +1
labelt = −1

end if
end for
For metrics 1 reconstruction, we have 53021 examples
with label (+1), 52658 examples with label (−1); for met-
rics 2 reconstruction, we have 52780 examples with label
(+1), 52899 examples with label(−1).
Now the problem is transformed to a binary classiﬁca-
tion problem, where (+1) means “make a bet” and (−1)
means “stay calm and do nothing”. Furthermore, now
the input features for each time t is a vector of T-scores
deﬁned in last section, e.g.

{‘T (cid:48)

price

0.6684, ‘T (cid:48)

:

0.0745,
rsi : 0.3421, ‘T (cid:48)

‘T (cid:48)
:
mf i : 1.837}

sma

0.3250,

‘T (cid:48)

wma

:

Notice that this is an example before feature rescaling
since we will later rescale each feature for SVM to work
well.

10 Results

We ﬁrst split each reconstructed data set into training
data set (80%) and test data set (20%), then use scikit-
learn package to train a binary classiﬁcation SVM model
with a linear kernel. Finally, we apply the trained model
to test data set, and obtain the following results for each

4

A Pairs Trading Strategy for GOOG/GOOGL Using Machine Learning

Jiayu Wu

December 9, 2015

Abstract

We apply the spread model, the O-U model and SVM to build a pairs trading strategy for GOOG/GOOGL.
There are two parts of the project that we think are novel after reviewing past related work: ﬁrst, we model
not only price spread but also several selected technical indicators’ “spread”; second, we use two new metrics for
measuring our trading strategy instead of the traditional back-testing method because we want to focus more on
future prediction rather than return prediction, and to achieve that, we also propose two algorithms to reconstruct
the data set. We outline the process of how our strategy is executed and, at the end, show that our strategy
delievers a good win-rate.

1 Introduction

Pairs trading is a popular trading strategy in the last
three decades after it was ﬁrst used by Morgan Stanley
in 1980s. Pairs trading means to utilize a pair or a bag of
related ﬁnancial instruments to make proﬁts by exploiting
their relations. One important feature of pairs trading is
that it is market-neutral, which is particularly appealing
in the current volatile and unpredictable macro-economic
environments.

In this project, we will use the spread model, the O-
U mean-reverting model, and SVM to build a trading
strategy and apply the strategy to GOOG/GOOGL. We
will ﬁrst illustrate the spread model and the O-U mean-
reverting in detail. Unlike most previous work that only
takes price spread into consideration, we will also use
the spread model and the O-U mean-reverting model to
model the two securities’ technical indicators.
In other
words, we extend the concept of “spread” by also inves-
tigating technical indicators’ spread. We will construct
trading signals by processing diﬀerent kinds of “spreads”
and then use these trading signals as input features for
SVM classiﬁcation. Instead of using the traditional back-
testing method to test our trading strategy, we will use
SVM binary classiﬁcation to measure our trading strat-
egy. To achieve that, we will reconstruct the original pric-
ing feeds to labeled examples, and there are two methods
we use to reconstruct the labeled examples, one for mea-
suring the strategy’s ability to seize proﬁt opportunities,
and the other for measuring the strategy’s ability to make
directional predictions.

One important thing for a pairs trading strategy is to
select a proper pair of ﬁnancial instrucments. For exam-
ple, if the price of security A always rises when the price
of security B rises, it seems that A and B may be used
for pairs trading. However, the explicit relation between
prices may not be good enough for a good pair. The good
pairs should share as many the same intrinsic character-
istics as possible. GOOG/GOOGL are both shares of
Google Inc. (now Alphabet Inc.) but with diﬀerent vote
rights. GOOGL represents Class A shares while GOOG
represents Class C shares. Only Class A shares have vot-
ing rights. Therefore, generally, the price of GOOGL is
slightly higher than that of GOOG. Other than voting
rights, they are essentially the same since their prices are
based upon the same fundamentals.

2 Related Work

In Statistical Arbitrage using Pairs Trading with Support
Vector Machine Learning, Gopal Rao Madhavaram com-
pares O-U model (mean reverting process) and SVM’s
performance on pairs trading, more speciﬁcally,
index
arbitrage, using constituents stocks to predict the cor-
responding index. His results show that SVM achieves
a slightly better performance than the mean-reverting
model.

There are also some CS229 projects from previous
years that have interesting methods and results related
to pairs trading. In Machine Learning in Pairs Trading
Strategies, the authors ﬁrst use linear regression to com-

1

pute and generate trading signals and obtain a sharpe-
ratio of 1.14 from back testing and they also propose a
trading strategy using EM algorithm and Kalman ﬁlter.
Moreover,
in Machine Learnig in Statistical Arbitrage,
the authors investigate index arbitrage, and they ﬁrst use
PCA to select ﬁrst 12 components out of 100 candidates
(constituents of FTSE 100 Index), and then use O-U
model to produce a mean-reverting process, which helps
to create the trading signal. Their back-testing shows
that their trading strategy can make reasonable proﬁts.

3 Dataset

We obtain the data set from Quantquote.com. The time-
frame for our data set is 1 min, ranging from 10/01/2014
to 10/30/2015.

First we need to do some data preprocessing because
pairs trading require the data of the two securities must
be consistent. By consistent we mean that the date and
time of every feed of both securities should be a exact
match. However, in our data set, both securities have
some missing bars, most of which are time intervals with
no trading volume, explained by Quantquote.com. There-
fore we wrote some python script to ﬁll up the missing
bars using last close price and volume = 0. These missing
bars are about 0.3% of the entire data set.

The original data set has 106141 feeds for GOOG,
106136 feeds for GOOGL; after preprocessing, the data
set we use has 105690 feeds for both securities.

two stock prices may not ﬂuctuate in the same range. Fur-
thermore, β may change over time because of change of
some intrinsic characteristics of either company or change
of overall stock market regime, however, in this project,
we assume β is a constant term over the duration of the
dataset.

In this project, we will use ‘close’ - ‘open’ as dAt (or

dBt), ‘open’ as At (or Bt) for linear regression.

4.2 O-U Model

Now we investigate the residual term from the above
spread model. We will use OrnsteinUhlenbeck process
to model the residual term because the O-U process is a
stochastic process such that the object modeled by the
process always drifts towards its long-term mean. The
residual term, namely the spread, has very similar prop-
erty according the assumption of pairs trading. The resid-
ual term Xt from the above spread model satisﬁes the
following stochastic diﬀerential equation:
dXt = θ(µ − Xt)dt + σdWt

(2)

Where θ, µ and σ are the paramters we want to es-
timate later using linear regression. Wt denotes Wiener
process, which suggests that the probability distribution
of Wt is a normal distribution with mean = 0 and variance
= t.

By integrating (2), we have

Xt+1 = a + bXt + t+1

(3)

Data example:

{‘date’:

‘open’: 711.98,
710.78, ‘volume’: 41773}

‘high’: 712.58,

20151030,

‘time’:
‘low’: 710.72,

1559,
‘close’:

Where

4 Pairs Trading Model

4.1 Spread Model

The canonical pairs trading spread model is as follows:

dAt
At

= αdt + β

dBt
Bt

+ dXt

(1)

where At is the price of security A at time t, Bt is the
price of security B at time t, Xt is the residual term, which
has the mean-reverting property because mean-reverting
spread is the basic assumption of pairs trading and the
drift term αdt (cid:28) β dMt
, which is neglectable compared to
the return of either security. The above model shows that
the stock price of the two securities is linear related. The
β here helps solve the normalization problem since the

Mt

2

a = (1 − e−θ∆t)µ

b = e−θ∆t

V ar() = σ2 1 − e−2θ∆t

2θ

We can obtain the above parameters from running a
linear regression on Xt+1 against Xt, and then we can
have obtain estimates for the parameters in the original
O-U process equation:

θ = −log(b) × 1
∆t

µ =

a
1 − b

(cid:114) V ar()2θ

σ =

σeq =(cid:112)V ar(Xt) =

1 − b2
σ√
2θ

=

(cid:114) V ar()

1 − b2

5 Pairs Trading Model - A Modi-

ﬁed Version

same time in most cases.
4.RSI : relative strength index.

In this project, we extend the above pairs trading model
to also take technical indicators into consideration.

Most of the previous work only consider the spread of
price. It is possible that some indicators of the two securi-
ties may also provide as much useful information as their
prices. Moreover, two candidates for a good pair should
not only exhibit similar price movement but also similar
movements for some technical indicators. Therefore, we
want to investigate the diﬀerence of indicators like we do
for the price spread.

RSIt = 100 − (

100

1 + RSt

)

average of $length−period down closes .

where RS = average of $length−period up closes
RSI is good at indicating whether the stock is in over-
sought or overbought condition. We use RSI because we
believe the two securities, GOOG and GOOGL, tend to
be in the same condition.

The $length parameter will be discussed in “Evalua-

tion Metrics” section.

Now the challenge is to ﬁgure out what indicators to
use. A good indicator for this project must exhibit simi-
lar behaviours for both securities. Therefore, empirically,
we selected the following 4 indicators:
1.SMA : simple moving average.

6 SVM

t(cid:88)

t(cid:88)

Support Vector Machine (SVM) is a popular and eﬀective
machine learning algorithm for both classiﬁcation and re-
gression. The idea of SVM is to construct a hyperplane
to seperate the two classes of data with the gap being as
wide as possible.

The goal is do the following optimization:

minγ,w,b

s.t. y(i)(wT x(i) + b) ≥ 1 − ξi, i = 1, ..., m
ξi ≥ 0, i = 1, ..., m.
Alternatively, we can use the following dual form:

m(cid:80)

i=1

ξi

m(cid:80)

1

2(cid:107)w(cid:107)2 + C
m(cid:80)

maxα W (α) =

αi− 1
s.t. 0 ≤ αi ≤ C, i = 1, ..., m

i=1

2

i,j=1

m(cid:80)

αiy(i) = 0.

y(i)y(j)αiαj(cid:104)x(i), x(j)(cid:105)

SM At =

P close

i

i=t−$length+1

We choose SMA because it is simple to compute and also
helps incorporate information from previous $length time
periods.
2.WMA : weighted moving average.

W M At =

WiP close

i

i=t−$length+1

where Wi =

i−(t−$length)

t(cid:80)

j=t−$length+1

j−(t−$length)

i=1

WMA is also a technical indicator related to average
price but it diﬀers from SMA in that it assign weights to
prices: the further away from the current time, the less
weight that price has.
3.MFI : money ﬂow index.

M F It = 100 − (

100

1 + M oneyF lowRatiot

)

where
M oneyF lowRatiot = $length−period P ositive M oneyF lowt
$length−period N egative M oneyF lowt
volume × P high
t +P close
M oneyF lowt
3

+P low

=

t

t

,

.

is positive

if

P high

t

+P low

t +P close
3

t

>

M oneyF lowt
P high
t−1 +P low

t−1 +P close
3

t−1

.

MFI takes volume into consideration so that we can also
see volumes’ impact on the ﬁnal results. Since GOOG
and GOOGL are inﬂuenced essentially by the same fac-
tors, money should ﬂow in or ﬂow out both stocks at the

7 Trading Strategy Framework

The trading strategy is executed as follows:

t(cid:80)

1. run linear regression to get spread model residuals;
2. construct Xts using residuals from the previous step

according to Xt =

dXt ;

i=t0

run lag 1 auto-regression on Xts to get parameters

3.
according to O-U model ;
4. use parameters obtained from the previous steps to
compute T-scores for price and selected indicators;
5.
train SVM with the modiﬁed data set (we will talk
about data set reconstruction in “Evaluation Metrics”
section);
6. apply the trained model to test data set, namely to
make trading decisions, which is either “make a bet” or
“stay calm and do nothing”.

3

8 Trading Signal

We give the following deﬁnitions for constructing the fea-
ture space for SVM classiﬁcation.

Here we deﬁne T-score for each feature:

Tprice = | X price

t

− µprice

|

σprice
eq

By the deﬁnition, we can see that T-score is stan-
dardized version of Xt. We use the absolute value here
because in this project we focus on the absolute value of
the spread not its sign.

indicators: Tsma = | X sma

Likewise, we deﬁne the following T-scores for other
|, Twma =
t −µrsi
σrsi
eq

|, Tmf i = | Xmf i

t −µsma
|, Trsi = | X rsi

σsma

t −µmf i
σmf i

−µwma

technical
| X wma

σwma

|.

eq

t

eq

eq

T-scores will be used as feature input for SVM binary

classiﬁcation (next section).

9 Evaluation Metrics

We use a diﬀerent evaluation metrics rather than tradi-
tional back-testing in this project. Instead, we use binary
classiﬁcation to evaluate the trading strategy. For clas-
siﬁcation purpose, we need to reconstruct the data set
according to the following algorithm. The trading logic
behind this algorithm is that pairs trading is statistical
arbitrage, and that means the value investing rule should
not be applied here. Therefore, the goal of this trading
strategy is to proﬁt in a short period of chosen trading
time frame. And only if the spread can narrow to an ex-
tent deﬁned by $threshold in a short period, is the trading
strategy willing to take the risk and make a bet. Notice
here we use the absolute value of Xt because we only
care about betting on that the spread will narrow in the
future. The sign of spread only becomes relevant if we
want to decide which security to long and which security
to short, but for this project, we want to focus on building
a trading strategy that bets on the direction of spread’s
change.

for each time t do

proﬁt = False
for each of the following $length time intervals,
dXt+i do

if |dXt+i| <= $threshold × |dXt| then

proﬁt = True
break

end if

end for
if proﬁt then
labelt = +1
labelt = −1

else

end if
end for

$length is set to 5 because we want to proﬁt in the near
future before our patience goes out. $threshold should
be set according to transaction cost in real-world trading
system. For this project, we set $threshold to be 0.25
because the resulting labels are balanced, which means
around half of the data has a label (+1) and another half
has a label of (−1), in order for SVM classiﬁcation to
work well.

Another metrics we use is to examine whether the
trained model can predict the correct moving direction of
T-scores in the next time interval. The data reconstruc-
tion algorithm is as follows:
if |dXt| > |dXt+1| then

for each time t do

else

labelt = +1
labelt = −1

end if
end for
For metrics 1 reconstruction, we have 53021 examples
with label (+1), 52658 examples with label (−1); for met-
rics 2 reconstruction, we have 52780 examples with label
(+1), 52899 examples with label(−1).
Now the problem is transformed to a binary classiﬁca-
tion problem, where (+1) means “make a bet” and (−1)
means “stay calm and do nothing”. Furthermore, now
the input features for each time t is a vector of T-scores
deﬁned in last section, e.g.

{‘T (cid:48)

price

0.6684, ‘T (cid:48)

:

0.0745,
rsi : 0.3421, ‘T (cid:48)

‘T (cid:48)
:
mf i : 1.837}

sma

0.3250,

‘T (cid:48)

wma

:

Notice that this is an example before feature rescaling
since we will later rescale each feature for SVM to work
well.

10 Results

We ﬁrst split each reconstructed data set into training
data set (80%) and test data set (20%), then use scikit-
learn package to train a binary classiﬁcation SVM model
with a linear kernel. Finally, we apply the trained model
to test data set, and obtain the following results for each

4

metrics:

Metrics 1:

Positive

Negative

Positive
Negative F P = 2291

T P = 6745 F N = 3878
T N = 8222

9036

12100

Total
10623
10513

N

precision
0.7465

recall
0.6349

F-measure AUC
1.0670

0.7085

Positive

Negative

Positive
Negative F P = 2238

T P = 6993 F N = 3552
T N = 8353

9231

11905

Total
10545
10591

N

By investigating the model’s predictions in more
detail, we have an interesting ﬁnding, which we call
Opportunity W indow. For example, if |Xt| is 0 or very
close to 0, then for a trade made in any of the previous
$length time periods, the trade is a succesful bet given
the algorithm in “Evaluation Metrics” section. Then the
$length time periods preceding the time t when |Xt|,
which is equal to 0 or very close to 0, occurs form a
Opportunity W indow. Therefore, if we can have a pow-
erful prediction on when |Xt| is 0 or very close to 0, we
can freely enter trades during the preceding $length time
periods. This also explains that in the Metrics 1 recon-
struction data set, consecutive examples’ label tend to be
the same because these examples share the same small
|Xt| in their following time periods.

Total
accuracy
0.7081

Metrics 2:

Total
accuracy
0.7261

precision
0.7576

recall
0.6632

F-measure AUC
1.0574

0.7259

11 Conclusion

Results from Metrics 1 show that our trading strat-
egy is able to moderately beat the market with a win-
rate of 0.7465 (win-rate is deﬁned as (proﬁt trades / total
trades made), which is (true positive / positive predic-
tions)). Moreover, the results for Metrics 1 also exhibit
risk-averse property of the trained SVM model. While
the test data set is well balanced (half positive labels
and half negative labels), the model made 9036 positive
predictions and 12100 negative predictions. In addition,
the model missed 3878 proﬁtable trades and had 2291
loss trades. From the above two sets of statistics, we
can see that the model would rather miss a proﬁtable
trader to avoid a possible loss trade. From the confu-
sion matrix, we can also know that the model successfully
seized 63.49% (TP/(TP+FN)) of available proﬁt oppor-
tunities and avoided 78.21% (TN/(TN+FP)) of possible
loss trades. Therefore, our strategy may be a better can-
didate for conservative investors than for risk-seeking in-
vestors.

Results from Metrics 2 show that the ability of our
strategy to predict future direction of spread change is
slightly better than the ability of our strategy to make
proﬁtable trades, because all statistics except F-measure
are better than those of Metrics 1.
It is also expected
because even for human traders, making directional pre-
dictions is generally easier than making proﬁtable trades.
The results also suggest that our trading strategy can also
be used as a technical indicator for pairs trading purpose
because it can give a prediction on whether the spread
will narrow in the next time period.

In this project, we utilize both price and technical indica-
tors for our pairs trading strategy while most of previous
work only uses price to build pairs trading strategy. We
also devise two new metrics to measure our strategy be-
cause the traditional back-testing for return prediction
is not our focus and can be not very useful since it in-
volves much more practical problems, such as slippage
and transaction cost. Instead, we want to focus more on
directional prediction. The results show that our strategy
is moderately predictive, and has slightly better perfor-
mance on predicting spread change direction than pre-
dicting proﬁtable trades. For future work, we can include
more features in our model, and may do PCA to select
most useful technical indicators for pair trading purpose.
Moreover, the β in the spread model may change over
time, but in this project, we treat it as a constant over
the time duration of our data set. The performance may
be improved if we design a update rule to update β for
every n-period of time.

12 References

[1] Gopal Rao Madhavaram. Statistical Arbitrage Using
Pairs Trading With Support Vector Machine Learning
[2] Yuxing Chen, Weiluo Ren, Xiaoxiong Lu. Machine
Learning in Pairs Trading Strategies.
[3] Xing Fu, Avinash Patra. Machine Learning in Statis-
tical Arbitrage.

5

