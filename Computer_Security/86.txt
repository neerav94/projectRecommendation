On the Security of Wireless Network Access with

Enhancements

Lein Harn and Wen-Jung Hsin

University of Missouri - Kansas City

Kansas City, MO 64110

ABSTRACT
The security of the current 3G wireless protocols addresses
the problems faced by the 2G systems, in addition to ful-
ﬁlling the higher 3G security requirements mandated from
operating in IP networks as well as voice networks. However,
the approach adopted by the two most popular 3G mobile
system forerunners, UMTS and cdma2000, leaves many ar-
eas for improvement. In this paper, we improve the security
of the 3G protocols in network access by providing strong
periodically mutual authentication, strong key agreement,
and non-repudiation service in a simple and elegant way.

Categories & Subject Descriptors
K.6.5 [Security and Protection]: Authentication

General Terms
Security

Keywords
Security, 3G Mobile Network Security and Authentication

1. ACRONYMS
2G,3G,4G The Second, Third, Fourth Generation
3GPP
3GPP2
A3
A5
A8

3G Partnership Project
3G Partnership Project 2
An authentication algorithm used in GSM
An encryption algorithm used in GSM
a key generation algorithm used in GSM

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
WiSE’03, September 19, 2003, San Diego, California, USA.
Copyright 2003 ACM 1-58113-769-9/03/0009 ...$5.00.

AES
AK
AKA
AV
CK
CDMA
cdmaOne
cdma2000
COUNT
CS
ESA
ESP
FIPS
GSM
HLR
HMAC
IK
IMT-2000
Key K
MS
NIST
PS
RAND
SEQ
SSD
UMTS
VLR

Advanced Encryption System
Anonymity Key
Authentication and Key Agreement
Authentication Vector
Cipher Key
Code Division Multiple Access
IS-95 based CDMA
IS-2000 based CDMA
Call History Counter used in cdma2000
Circuit Switching
Enhanced Subscriber Authentication
Enhanced Subscriber Privacy
Federal Information Processing Standards
Global System for Mobile communications
Home Location Register
keyed-Hash Message Authentication Code
Integrity Key
International Mobile Telecommunications 2000
A common secret key between MS and HLR
Mobile Station
National Institute of Standards and Technology
Packet Switching
A random number
Sequence Number used in UMTS AKA
Shared Secret Data
Universal Mobile Telecommunications System
Visitor Location Register

2.

INTRODUCTION

In recent years, due to technology advances, we have seen
a phenomenal increase in the number of cellular users. As
the demand increases, so does the importance of security in
the cellular systems. This can be seen from many highly
publicized incidents, e.g., the plain text communication am-
ong allied pilots during Kosovo war as reported by Wash-
ington Post, and the interception of House Speaker Newt
Gingrich’s cellular conference conversation. To provide pro-
tection, many diﬀerent security areas are addressed, e.g.,
network access security provides users with secure access to
the mobile services, network domain security provides secure
exchanges of signaling data in the core network, application
domain security provides users and providers with secure ex-
changes of application data, etc.
[6]. Our emphasis in this
paper is in the area of network access security.

For network access security, 2G mobile systems such as
GSM and cdmaOne were designed to protect against exter-
nal attacks. However, these designs have led to numerous
interception attacks [5, 20, 24, 30]. The 3G wireless pro-
tocols must not only address the problems faced by the 2G
systems but also provide strong security functionality to ful-
ﬁll the 3G cellular requirements as deﬁned in IMT-2000 [7],
especially the required support over IP networks. Unfortu-

88On the Security of Wireless Network Access with

Enhancements

Lein Harn and Wen-Jung Hsin

University of Missouri - Kansas City

Kansas City, MO 64110

ABSTRACT
The security of the current 3G wireless protocols addresses
the problems faced by the 2G systems, in addition to ful-
ﬁlling the higher 3G security requirements mandated from
operating in IP networks as well as voice networks. However,
the approach adopted by the two most popular 3G mobile
system forerunners, UMTS and cdma2000, leaves many ar-
eas for improvement. In this paper, we improve the security
of the 3G protocols in network access by providing strong
periodically mutual authentication, strong key agreement,
and non-repudiation service in a simple and elegant way.

Categories & Subject Descriptors
K.6.5 [Security and Protection]: Authentication

General Terms
Security

Keywords
Security, 3G Mobile Network Security and Authentication

1. ACRONYMS
2G,3G,4G The Second, Third, Fourth Generation
3GPP
3GPP2
A3
A5
A8

3G Partnership Project
3G Partnership Project 2
An authentication algorithm used in GSM
An encryption algorithm used in GSM
a key generation algorithm used in GSM

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
WiSE’03, September 19, 2003, San Diego, California, USA.
Copyright 2003 ACM 1-58113-769-9/03/0009 ...$5.00.

AES
AK
AKA
AV
CK
CDMA
cdmaOne
cdma2000
COUNT
CS
ESA
ESP
FIPS
GSM
HLR
HMAC
IK
IMT-2000
Key K
MS
NIST
PS
RAND
SEQ
SSD
UMTS
VLR

Advanced Encryption System
Anonymity Key
Authentication and Key Agreement
Authentication Vector
Cipher Key
Code Division Multiple Access
IS-95 based CDMA
IS-2000 based CDMA
Call History Counter used in cdma2000
Circuit Switching
Enhanced Subscriber Authentication
Enhanced Subscriber Privacy
Federal Information Processing Standards
Global System for Mobile communications
Home Location Register
keyed-Hash Message Authentication Code
Integrity Key
International Mobile Telecommunications 2000
A common secret key between MS and HLR
Mobile Station
National Institute of Standards and Technology
Packet Switching
A random number
Sequence Number used in UMTS AKA
Shared Secret Data
Universal Mobile Telecommunications System
Visitor Location Register

2.

INTRODUCTION

In recent years, due to technology advances, we have seen
a phenomenal increase in the number of cellular users. As
the demand increases, so does the importance of security in
the cellular systems. This can be seen from many highly
publicized incidents, e.g., the plain text communication am-
ong allied pilots during Kosovo war as reported by Wash-
ington Post, and the interception of House Speaker Newt
Gingrich’s cellular conference conversation. To provide pro-
tection, many diﬀerent security areas are addressed, e.g.,
network access security provides users with secure access to
the mobile services, network domain security provides secure
exchanges of signaling data in the core network, application
domain security provides users and providers with secure ex-
changes of application data, etc.
[6]. Our emphasis in this
paper is in the area of network access security.

For network access security, 2G mobile systems such as
GSM and cdmaOne were designed to protect against exter-
nal attacks. However, these designs have led to numerous
interception attacks [5, 20, 24, 30]. The 3G wireless pro-
tocols must not only address the problems faced by the 2G
systems but also provide strong security functionality to ful-
ﬁll the 3G cellular requirements as deﬁned in IMT-2000 [7],
especially the required support over IP networks. Unfortu-

88nately, the proposed security protocols for network access
provided by the two most popular 3G cellular system fore-
runners, UMTS and cdma2000 (the descendants of GSM and
cdmaOne, respectively), still leave many areas for improve-
ment.
In this paper, we address some of these areas and
provide protocol enhancements on top of these two systems.
For clarity, here we specify the security standards to which
we will be referring in this paper. The security architecture
standard for UMTS is deﬁned in [6]. For cdma2000, the
latest published documentation on network access security
can be found in [8, 9, 10].

One of the areas for improvement is the way in which
a subscriber authenticates a network. 3G systems provide
mutual authentication between a subscriber and a network,
whereas 2G provides only subscriber authentication. To al-
low network authentication, UMTS uses a sequence number
approach with which a subscriber can verify the freshness of
an authentication request and thus prevent an attacker’s re-
play. Instead of sequence numbers, we propose to use Lam-
port’s one-time password/hash chaining technique [19] in
both directions, to and from an MS, to establish periodi-
cally mutual authentication. Hash chaining provides strong
periodical authentication and is used in many applications
[3, 16, 17, 21]. Thus, by using this technique, our enhance-
ment is eﬃcient, elegant, and simple, and our periodically
mutual authentication is strong.

Additionally, our enhancement can solve a billing dispute
problem between an MS and a VLR. Neither UMTS nor
cdma2000 address the issue of billing disputes, and thus
there is no recourse to settle disputes when they arise. Note
that a true non-repudiation service among HLR, MS, and
VLR can only be achieved via a public-key system using digi-
tal signatures. In this paper, following UMTS and cdma2000,
we adopt the symmetric key system with the assumption
that both MS and VLR must trust HLR. However, un-
like UMTS and cdma2000, our scheme can achieve non-
repudiation between an MS and a VLR. That is, any dis-
pute between an MS and a VLR can be resolved in our
scheme. Speciﬁcally, we use keyed-Hash Message Authenti-
cation Code (HMAC) recently drafted by FIPS [14] on top
of hash chaining to provide a non-repudiation service be-
tween an MS and a VLR to explicitly address the billing
issue without complicating the existing protocols.

Previous work in this area includes a comparative study
between UMTS and cdma2000 for the entire systems, but
with little emphasis in the area of security [2, 13]. Rose
[28] oﬀered a high level general overview of wireless secu-
rity between UMTS and cdma2000. Our detailed compar-
ative study here emphasizes the subscriber authentication
and key agreement procedures, as this becomes the basis for
building our protocol enhancements. Al-Muhtadi et al.
[1]
proposed a lightweight component in mobile devices and a
security server for authentication and call setup for 3G/4G
systems. Their work can beneﬁt from our enhanced pro-
tocol mentioned here to provide strong periodically mutual
authentication and to simplify the implementation.

The remainder of this paper is organized as follows. Sec-
tions 3 and 4 describe detailed AKA procedure in UMTS
and cdma2000, respectively. Section 5 describes our en-
hancements, and hash chaining and HMAC techniques that
we adopt to achieve the improvements. Finally, section 6
provides conclusion and summary.

3. UMTS AUTHENTICATION AND KEY

AGREEMENT

This section describes the registration and AKA proce-
dures in UMTS [6], shown in Figure 1. For ease of reference,
each line in the ﬁgure is provided with a line identiﬁcation
number. UMTS maintains the same challenge and response
method as its 2G predecessor, GSM, to facilitate genera-
tion migration. In particular, during registration, an HLR
prepares and sends a list of authentication vectors (AV) to
a VLR (see lines a2 to a12 in Figure 1.) During AKA, a
VLR uses an AV (lines a13 and a14) to authenticate an MS.
Each AV is used once for each AKA invocation. If a VLR
runs out of AVs, it can request more from the HLR. When
an MS roams out of a VLR, the old VLR should transfer
the leftover AVs to the new VLR. The standard [6] assumes
that the communication links between VLRs are adequately
secure.

The major diﬀerences in registration and AKA proce-
dures between UMTS and GSM are (1) GSM allows only
subscriber authentication, while UMTS provides both sub-
scriber (line a22) and network (line a19) mutual authentica-
tions, and (2) UMTS can protect the integrity of signaling
data (via IKi in line a24), while GSM can not. For the
network authentication, UMTS employs a complicated se-
quence number (SEQ) technique. Speciﬁcally, UMTS achie-
ves these two extra functionalities by adding two extra ﬁelds
in the AV, namely an authentication token (AUTN, line a9)
and an integrity key (IK, line a5) on top of the triplet pro-
vided in GSM. An authentication token allows an MS to au-
thenticate a VLR. The ﬁelds within the token include SEQ,
anonymity key (AK), authentication management ﬁeld (AMF),
and message authentication code (MAC). Each authentica-
tion token is assigned a unique SEQ. When an MS receives
an authentication token, it veriﬁes that the corresponding
SEQ has not been accepted before (line a19), thereby pre-
cluding replay by an attacker. To allow for out-of-order
SEQs due to simultaneous registration in both CS and PS
domains, MS maintains a list of SEQs that it has accepted.
To prevent exposition of MS’s identity and location, key AK
can be used to conceal the SEQ. AMF is an authentication
management ﬁeld which can be used for purposes such as
specifying a particular authentication algorithm used, etc.
MAC is used to ensure the authenticity and integrity of the
authentication token and the random challenge. The IK is
used to protect the integrity of the control data. Readers
are referred to the UMTS Security Architecture [6] for a
detailed description of the AKA procedure.

The generation, allocation, veriﬁcation, and management
of SEQ is a complicated matter, especially with regard to
the protection against an attack to force SEQ wrap around
and the compromise of user identity conﬁdentiality. Further-
more, with the consideration of re-synchronization failure re-
covery, SEQ complicates both protocol and implementation
tremendously.
(In re-synchronization failure recovery, an
HLR and an MS try to re-synchronize SEQ due to synchro-
nization failure in various scenarios such as simultaneous
registration in CS and PS domains, user movement between
VLRs which do not transfer leftover AVs, and super-charged
networks where the mobility of an MS among various VLRs
is very high.) In fact, in the UMTS Security Architecture [6],
a 6-page appendix is necessary to describe the generation,
allocation, veriﬁcation, and management of SEQ.

89On the Security of Wireless Network Access with

Enhancements

Lein Harn and Wen-Jung Hsin

University of Missouri - Kansas City

Kansas City, MO 64110

ABSTRACT
The security of the current 3G wireless protocols addresses
the problems faced by the 2G systems, in addition to ful-
ﬁlling the higher 3G security requirements mandated from
operating in IP networks as well as voice networks. However,
the approach adopted by the two most popular 3G mobile
system forerunners, UMTS and cdma2000, leaves many ar-
eas for improvement. In this paper, we improve the security
of the 3G protocols in network access by providing strong
periodically mutual authentication, strong key agreement,
and non-repudiation service in a simple and elegant way.

Categories & Subject Descriptors
K.6.5 [Security and Protection]: Authentication

General Terms
Security

Keywords
Security, 3G Mobile Network Security and Authentication

1. ACRONYMS
2G,3G,4G The Second, Third, Fourth Generation
3GPP
3GPP2
A3
A5
A8

3G Partnership Project
3G Partnership Project 2
An authentication algorithm used in GSM
An encryption algorithm used in GSM
a key generation algorithm used in GSM

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
WiSE’03, September 19, 2003, San Diego, California, USA.
Copyright 2003 ACM 1-58113-769-9/03/0009 ...$5.00.

AES
AK
AKA
AV
CK
CDMA
cdmaOne
cdma2000
COUNT
CS
ESA
ESP
FIPS
GSM
HLR
HMAC
IK
IMT-2000
Key K
MS
NIST
PS
RAND
SEQ
SSD
UMTS
VLR

Advanced Encryption System
Anonymity Key
Authentication and Key Agreement
Authentication Vector
Cipher Key
Code Division Multiple Access
IS-95 based CDMA
IS-2000 based CDMA
Call History Counter used in cdma2000
Circuit Switching
Enhanced Subscriber Authentication
Enhanced Subscriber Privacy
Federal Information Processing Standards
Global System for Mobile communications
Home Location Register
keyed-Hash Message Authentication Code
Integrity Key
International Mobile Telecommunications 2000
A common secret key between MS and HLR
Mobile Station
National Institute of Standards and Technology
Packet Switching
A random number
Sequence Number used in UMTS AKA
Shared Secret Data
Universal Mobile Telecommunications System
Visitor Location Register

2.

INTRODUCTION

In recent years, due to technology advances, we have seen
a phenomenal increase in the number of cellular users. As
the demand increases, so does the importance of security in
the cellular systems. This can be seen from many highly
publicized incidents, e.g., the plain text communication am-
ong allied pilots during Kosovo war as reported by Wash-
ington Post, and the interception of House Speaker Newt
Gingrich’s cellular conference conversation. To provide pro-
tection, many diﬀerent security areas are addressed, e.g.,
network access security provides users with secure access to
the mobile services, network domain security provides secure
exchanges of signaling data in the core network, application
domain security provides users and providers with secure ex-
changes of application data, etc.
[6]. Our emphasis in this
paper is in the area of network access security.

For network access security, 2G mobile systems such as
GSM and cdmaOne were designed to protect against exter-
nal attacks. However, these designs have led to numerous
interception attacks [5, 20, 24, 30]. The 3G wireless pro-
tocols must not only address the problems faced by the 2G
systems but also provide strong security functionality to ful-
ﬁll the 3G cellular requirements as deﬁned in IMT-2000 [7],
especially the required support over IP networks. Unfortu-

88nately, the proposed security protocols for network access
provided by the two most popular 3G cellular system fore-
runners, UMTS and cdma2000 (the descendants of GSM and
cdmaOne, respectively), still leave many areas for improve-
ment.
In this paper, we address some of these areas and
provide protocol enhancements on top of these two systems.
For clarity, here we specify the security standards to which
we will be referring in this paper. The security architecture
standard for UMTS is deﬁned in [6]. For cdma2000, the
latest published documentation on network access security
can be found in [8, 9, 10].

One of the areas for improvement is the way in which
a subscriber authenticates a network. 3G systems provide
mutual authentication between a subscriber and a network,
whereas 2G provides only subscriber authentication. To al-
low network authentication, UMTS uses a sequence number
approach with which a subscriber can verify the freshness of
an authentication request and thus prevent an attacker’s re-
play. Instead of sequence numbers, we propose to use Lam-
port’s one-time password/hash chaining technique [19] in
both directions, to and from an MS, to establish periodi-
cally mutual authentication. Hash chaining provides strong
periodical authentication and is used in many applications
[3, 16, 17, 21]. Thus, by using this technique, our enhance-
ment is eﬃcient, elegant, and simple, and our periodically
mutual authentication is strong.

Additionally, our enhancement can solve a billing dispute
problem between an MS and a VLR. Neither UMTS nor
cdma2000 address the issue of billing disputes, and thus
there is no recourse to settle disputes when they arise. Note
that a true non-repudiation service among HLR, MS, and
VLR can only be achieved via a public-key system using digi-
tal signatures. In this paper, following UMTS and cdma2000,
we adopt the symmetric key system with the assumption
that both MS and VLR must trust HLR. However, un-
like UMTS and cdma2000, our scheme can achieve non-
repudiation between an MS and a VLR. That is, any dis-
pute between an MS and a VLR can be resolved in our
scheme. Speciﬁcally, we use keyed-Hash Message Authenti-
cation Code (HMAC) recently drafted by FIPS [14] on top
of hash chaining to provide a non-repudiation service be-
tween an MS and a VLR to explicitly address the billing
issue without complicating the existing protocols.

Previous work in this area includes a comparative study
between UMTS and cdma2000 for the entire systems, but
with little emphasis in the area of security [2, 13]. Rose
[28] oﬀered a high level general overview of wireless secu-
rity between UMTS and cdma2000. Our detailed compar-
ative study here emphasizes the subscriber authentication
and key agreement procedures, as this becomes the basis for
building our protocol enhancements. Al-Muhtadi et al.
[1]
proposed a lightweight component in mobile devices and a
security server for authentication and call setup for 3G/4G
systems. Their work can beneﬁt from our enhanced pro-
tocol mentioned here to provide strong periodically mutual
authentication and to simplify the implementation.

The remainder of this paper is organized as follows. Sec-
tions 3 and 4 describe detailed AKA procedure in UMTS
and cdma2000, respectively. Section 5 describes our en-
hancements, and hash chaining and HMAC techniques that
we adopt to achieve the improvements. Finally, section 6
provides conclusion and summary.

3. UMTS AUTHENTICATION AND KEY

AGREEMENT

This section describes the registration and AKA proce-
dures in UMTS [6], shown in Figure 1. For ease of reference,
each line in the ﬁgure is provided with a line identiﬁcation
number. UMTS maintains the same challenge and response
method as its 2G predecessor, GSM, to facilitate genera-
tion migration. In particular, during registration, an HLR
prepares and sends a list of authentication vectors (AV) to
a VLR (see lines a2 to a12 in Figure 1.) During AKA, a
VLR uses an AV (lines a13 and a14) to authenticate an MS.
Each AV is used once for each AKA invocation. If a VLR
runs out of AVs, it can request more from the HLR. When
an MS roams out of a VLR, the old VLR should transfer
the leftover AVs to the new VLR. The standard [6] assumes
that the communication links between VLRs are adequately
secure.

The major diﬀerences in registration and AKA proce-
dures between UMTS and GSM are (1) GSM allows only
subscriber authentication, while UMTS provides both sub-
scriber (line a22) and network (line a19) mutual authentica-
tions, and (2) UMTS can protect the integrity of signaling
data (via IKi in line a24), while GSM can not. For the
network authentication, UMTS employs a complicated se-
quence number (SEQ) technique. Speciﬁcally, UMTS achie-
ves these two extra functionalities by adding two extra ﬁelds
in the AV, namely an authentication token (AUTN, line a9)
and an integrity key (IK, line a5) on top of the triplet pro-
vided in GSM. An authentication token allows an MS to au-
thenticate a VLR. The ﬁelds within the token include SEQ,
anonymity key (AK), authentication management ﬁeld (AMF),
and message authentication code (MAC). Each authentica-
tion token is assigned a unique SEQ. When an MS receives
an authentication token, it veriﬁes that the corresponding
SEQ has not been accepted before (line a19), thereby pre-
cluding replay by an attacker. To allow for out-of-order
SEQs due to simultaneous registration in both CS and PS
domains, MS maintains a list of SEQs that it has accepted.
To prevent exposition of MS’s identity and location, key AK
can be used to conceal the SEQ. AMF is an authentication
management ﬁeld which can be used for purposes such as
specifying a particular authentication algorithm used, etc.
MAC is used to ensure the authenticity and integrity of the
authentication token and the random challenge. The IK is
used to protect the integrity of the control data. Readers
are referred to the UMTS Security Architecture [6] for a
detailed description of the AKA procedure.

The generation, allocation, veriﬁcation, and management
of SEQ is a complicated matter, especially with regard to
the protection against an attack to force SEQ wrap around
and the compromise of user identity conﬁdentiality. Further-
more, with the consideration of re-synchronization failure re-
covery, SEQ complicates both protocol and implementation
tremendously.
(In re-synchronization failure recovery, an
HLR and an MS try to re-synchronize SEQ due to synchro-
nization failure in various scenarios such as simultaneous
registration in CS and PS domains, user movement between
VLRs which do not transfer leftover AVs, and super-charged
networks where the mobility of an MS among various VLRs
is very high.) In fact, in the UMTS Security Architecture [6],
a 6-page appendix is necessary to describe the generation,
allocation, veriﬁcation, and management of SEQ.

89Line

Procedure

MS

VLR

HLR

Registration 
and
Distribution of 
Authentication
(cid:0)(cid:1)(cid:2)

Authentication
and 
Key Agreement,

(cid:7)(cid:1) (cid:0)(cid:1) (cid:8)(cid:1)

a1
a2
a3
a4
a5
a6
a7
a8
a9
a10
a11
a12

a13
a14

a15
a16
a17
a18
(cid:27)(cid:14)$
(cid:27)(cid:19)%

(cid:27)(cid:19)(cid:14)

(cid:27)(cid:19)(cid:19)
(cid:27)(cid:19)(cid:24)
(cid:27)(cid:19)(cid:23)

 (cid:3)

(cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15)

(cid:10)	(cid:1) (cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15) (cid:17)(cid:7)(cid:1)(cid:1)

(cid:25)(cid:1) (cid:1)(cid:2) (cid:27) (cid:9)(cid:4) (cid:13)
(cid:15) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
 (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)
(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:8)(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)
 (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
(cid:4)(cid:16) (cid:17)  (cid:18) (cid:3)	  (cid:4)(cid:0)(cid:0)(cid:4) (cid:21) (cid:0)(cid:0) (cid:4)(cid:15)
(cid:4)(cid:5) (cid:18) (cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:8)(cid:9)(cid:10)(cid:3)(cid:0)(cid:0)(cid:15)(cid:0)(cid:0)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) 
"(cid:1) (cid:4)(cid:5)  (cid:27)(cid:1)"  (cid:3)	

 (cid:3)(cid:18) (cid:18) (cid:9)(cid:4) (cid:13)(cid:13)(cid:0)(cid:15)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) (cid:13)(cid:0)(cid:15)(cid:19) (cid:17)(cid:7)(cid:1)(cid:1) (cid:0) (cid:8) (cid:2)(cid:7)(cid:1)  (cid:29)(cid:29)  (cid:27)(cid:8)

 (cid:3)(cid:18)

(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:3)	 (cid:18) (cid:3)	  (cid:4)  (cid:4)
(cid:8) (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
 (cid:4)(cid:15)
(cid:0)(cid:1)(cid:8)#2 #(cid:1)(cid:7)(cid:1) # (cid:3)	 (cid:0)
(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)

(cid:18) (cid:8) (cid:4)(cid:15)

(cid:0)

(cid:9)(cid:10)(cid:3)

(cid:15)(cid:3) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
(cid:3) (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)

(cid:0)

(cid:18) (cid:8)(cid:9)(cid:10)(cid:3)(cid:13)(cid:0)(cid:15)

(cid:9)(cid:10)(cid:3)
(cid:15)(cid:3) (cid:18) (cid:15)(cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)
(cid:3) (cid:18) (cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)

(cid:1) & ’(cid:7)(cid:1) ((cid:1)(cid:1)(cid:27)(cid:8) (cid:27)  (cid:2)(cid:27)(cid:8) !(cid:1)(cid:8))(cid:2)(cid:27)(cid:8) (cid:27)" (cid:27)(cid:27)((cid:1)(cid:1) # (cid:25)*	 (cid:1)	(cid:1)(cid:2)(cid:1) 	 (cid:1) (cid:27)(cid:1) "(cid:1)(cid:2)(cid:8) (cid:1)" (cid:8) (cid:27) -	(cid:27)((cid:1)

(cid:27)(cid:1)"(cid:8)/ (cid:8) 0’(cid:25) (cid:1)(cid:2)	(cid:8)2 (cid:27)(cid:2)(cid:7)(cid:8)(cid:1)(cid:2)	(cid:1) (cid:27)"(cid:27)" (cid:13)-(cid:15)3

Figure 1: Authentication and Key Agreement in UMTS

4. CDMA2000 SUBSCRIBER AUTHENTICA-

TION AND KEY AGREEMENT

Cdma2000 is designed to be backward compatible with
its predecessor cdmOne, therefore it inherits most of the cd-
maOne security features. Speciﬁcally, for cdma2000, Figure
2 depicts the general registration and the subscriber authen-
tication and key agreement procedures in the latest pub-
lished documents on security [8, 9]. These standards show
the same procedures as in cdmaOne.

In particular, during registration (invoked by the SSD up-

date procedure, lines b1 to b12), the HLR selects a RAN DSSD
and calculates a new SSD which can be shared with a VLR
(lines b1 and b2.) The VLR then sends the RAN DSSD to
an MS for it to derive the new SSD (lines b3 and b4.) To
authenticate the VLR, an MS sends a base station challenge
order (line b6) to the VLR. It is only when the VLR passes
the challenge does the MS update to the new SSD (line
b12).

During the subscriber authentication phase (lines b13 to
b21), the MS invokes the global challenge procedure by ﬁrst
calculating a response AU T HR using a globally broadcast
challenge RAN D and SSD A, the ﬁrst portion of SSD. In
line b15, the MS sends RAN DC (the ﬁrst 8 bits of RAN D),
COU N T (Call History counter used for clone prevention by
keeping track the number of calls made by the MS), and
AU T HR to the VLR who will then verify the received val-
ues to authenticate the MS, (in lines b16 to b21). In case
that the MS fails the global challenge, the VLR will invoke
a unique challenge procedure with a unique random num-

ber speciﬁcally generated to challenge the MS (readers are
referred to [8] for the details of the unique challenge proce-
dure). Note that the subscriber authentication here is only
one-way (i.e., the VLR authenticates the MS, but not vice
versa). Only when the MS is successfully authenticated can
the encryption key be generated. In line b22, the encryp-
tion key is calculated based on the RAN D and SSD B, the
second portion of SSD.

The predominant diﬀerence in the network access security
between GSM and cdmaOne, and thus their descendants
UMTS and cdma2000,
is how the authentication data is
prepared. In UMTS, an HLR prepares and sends a list of
challenge and response vectors to the VLR to authenticate
an MS; while in cdma2000, a derived shared secret data
(SSD) from a common secret key K can be shared with a
VLR so that the VLR itself can authenticate an MS locally.
The HLR total control method adopted by UMTS is secure
in that the HLR is the one that an MS trusts, however it is
not convenient for a VLR as the VLR has to rely on the HLR
to generate challenges and responses. On the other hand,
cdma2000’s VLR local method is convenient for a VLR but
not as secure as UMTS, since an HLR does not have the total
control in the communication between a VLR and an MS.
This is most evident when there is a dispute between an MS
and a VLR; an HLR has no easy way to settle the dispute
as it has given the VLR the control. To lesson the degree of
the problem, in cdma2000, an HLR can periodically change
the value of the SSD (using the SSD Update procedure) to
make the sharing with a VLR less problematic.

90On the Security of Wireless Network Access with

Enhancements

Lein Harn and Wen-Jung Hsin

University of Missouri - Kansas City

Kansas City, MO 64110

ABSTRACT
The security of the current 3G wireless protocols addresses
the problems faced by the 2G systems, in addition to ful-
ﬁlling the higher 3G security requirements mandated from
operating in IP networks as well as voice networks. However,
the approach adopted by the two most popular 3G mobile
system forerunners, UMTS and cdma2000, leaves many ar-
eas for improvement. In this paper, we improve the security
of the 3G protocols in network access by providing strong
periodically mutual authentication, strong key agreement,
and non-repudiation service in a simple and elegant way.

Categories & Subject Descriptors
K.6.5 [Security and Protection]: Authentication

General Terms
Security

Keywords
Security, 3G Mobile Network Security and Authentication

1. ACRONYMS
2G,3G,4G The Second, Third, Fourth Generation
3GPP
3GPP2
A3
A5
A8

3G Partnership Project
3G Partnership Project 2
An authentication algorithm used in GSM
An encryption algorithm used in GSM
a key generation algorithm used in GSM

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
WiSE’03, September 19, 2003, San Diego, California, USA.
Copyright 2003 ACM 1-58113-769-9/03/0009 ...$5.00.

AES
AK
AKA
AV
CK
CDMA
cdmaOne
cdma2000
COUNT
CS
ESA
ESP
FIPS
GSM
HLR
HMAC
IK
IMT-2000
Key K
MS
NIST
PS
RAND
SEQ
SSD
UMTS
VLR

Advanced Encryption System
Anonymity Key
Authentication and Key Agreement
Authentication Vector
Cipher Key
Code Division Multiple Access
IS-95 based CDMA
IS-2000 based CDMA
Call History Counter used in cdma2000
Circuit Switching
Enhanced Subscriber Authentication
Enhanced Subscriber Privacy
Federal Information Processing Standards
Global System for Mobile communications
Home Location Register
keyed-Hash Message Authentication Code
Integrity Key
International Mobile Telecommunications 2000
A common secret key between MS and HLR
Mobile Station
National Institute of Standards and Technology
Packet Switching
A random number
Sequence Number used in UMTS AKA
Shared Secret Data
Universal Mobile Telecommunications System
Visitor Location Register

2.

INTRODUCTION

In recent years, due to technology advances, we have seen
a phenomenal increase in the number of cellular users. As
the demand increases, so does the importance of security in
the cellular systems. This can be seen from many highly
publicized incidents, e.g., the plain text communication am-
ong allied pilots during Kosovo war as reported by Wash-
ington Post, and the interception of House Speaker Newt
Gingrich’s cellular conference conversation. To provide pro-
tection, many diﬀerent security areas are addressed, e.g.,
network access security provides users with secure access to
the mobile services, network domain security provides secure
exchanges of signaling data in the core network, application
domain security provides users and providers with secure ex-
changes of application data, etc.
[6]. Our emphasis in this
paper is in the area of network access security.

For network access security, 2G mobile systems such as
GSM and cdmaOne were designed to protect against exter-
nal attacks. However, these designs have led to numerous
interception attacks [5, 20, 24, 30]. The 3G wireless pro-
tocols must not only address the problems faced by the 2G
systems but also provide strong security functionality to ful-
ﬁll the 3G cellular requirements as deﬁned in IMT-2000 [7],
especially the required support over IP networks. Unfortu-

88nately, the proposed security protocols for network access
provided by the two most popular 3G cellular system fore-
runners, UMTS and cdma2000 (the descendants of GSM and
cdmaOne, respectively), still leave many areas for improve-
ment.
In this paper, we address some of these areas and
provide protocol enhancements on top of these two systems.
For clarity, here we specify the security standards to which
we will be referring in this paper. The security architecture
standard for UMTS is deﬁned in [6]. For cdma2000, the
latest published documentation on network access security
can be found in [8, 9, 10].

One of the areas for improvement is the way in which
a subscriber authenticates a network. 3G systems provide
mutual authentication between a subscriber and a network,
whereas 2G provides only subscriber authentication. To al-
low network authentication, UMTS uses a sequence number
approach with which a subscriber can verify the freshness of
an authentication request and thus prevent an attacker’s re-
play. Instead of sequence numbers, we propose to use Lam-
port’s one-time password/hash chaining technique [19] in
both directions, to and from an MS, to establish periodi-
cally mutual authentication. Hash chaining provides strong
periodical authentication and is used in many applications
[3, 16, 17, 21]. Thus, by using this technique, our enhance-
ment is eﬃcient, elegant, and simple, and our periodically
mutual authentication is strong.

Additionally, our enhancement can solve a billing dispute
problem between an MS and a VLR. Neither UMTS nor
cdma2000 address the issue of billing disputes, and thus
there is no recourse to settle disputes when they arise. Note
that a true non-repudiation service among HLR, MS, and
VLR can only be achieved via a public-key system using digi-
tal signatures. In this paper, following UMTS and cdma2000,
we adopt the symmetric key system with the assumption
that both MS and VLR must trust HLR. However, un-
like UMTS and cdma2000, our scheme can achieve non-
repudiation between an MS and a VLR. That is, any dis-
pute between an MS and a VLR can be resolved in our
scheme. Speciﬁcally, we use keyed-Hash Message Authenti-
cation Code (HMAC) recently drafted by FIPS [14] on top
of hash chaining to provide a non-repudiation service be-
tween an MS and a VLR to explicitly address the billing
issue without complicating the existing protocols.

Previous work in this area includes a comparative study
between UMTS and cdma2000 for the entire systems, but
with little emphasis in the area of security [2, 13]. Rose
[28] oﬀered a high level general overview of wireless secu-
rity between UMTS and cdma2000. Our detailed compar-
ative study here emphasizes the subscriber authentication
and key agreement procedures, as this becomes the basis for
building our protocol enhancements. Al-Muhtadi et al.
[1]
proposed a lightweight component in mobile devices and a
security server for authentication and call setup for 3G/4G
systems. Their work can beneﬁt from our enhanced pro-
tocol mentioned here to provide strong periodically mutual
authentication and to simplify the implementation.

The remainder of this paper is organized as follows. Sec-
tions 3 and 4 describe detailed AKA procedure in UMTS
and cdma2000, respectively. Section 5 describes our en-
hancements, and hash chaining and HMAC techniques that
we adopt to achieve the improvements. Finally, section 6
provides conclusion and summary.

3. UMTS AUTHENTICATION AND KEY

AGREEMENT

This section describes the registration and AKA proce-
dures in UMTS [6], shown in Figure 1. For ease of reference,
each line in the ﬁgure is provided with a line identiﬁcation
number. UMTS maintains the same challenge and response
method as its 2G predecessor, GSM, to facilitate genera-
tion migration. In particular, during registration, an HLR
prepares and sends a list of authentication vectors (AV) to
a VLR (see lines a2 to a12 in Figure 1.) During AKA, a
VLR uses an AV (lines a13 and a14) to authenticate an MS.
Each AV is used once for each AKA invocation. If a VLR
runs out of AVs, it can request more from the HLR. When
an MS roams out of a VLR, the old VLR should transfer
the leftover AVs to the new VLR. The standard [6] assumes
that the communication links between VLRs are adequately
secure.

The major diﬀerences in registration and AKA proce-
dures between UMTS and GSM are (1) GSM allows only
subscriber authentication, while UMTS provides both sub-
scriber (line a22) and network (line a19) mutual authentica-
tions, and (2) UMTS can protect the integrity of signaling
data (via IKi in line a24), while GSM can not. For the
network authentication, UMTS employs a complicated se-
quence number (SEQ) technique. Speciﬁcally, UMTS achie-
ves these two extra functionalities by adding two extra ﬁelds
in the AV, namely an authentication token (AUTN, line a9)
and an integrity key (IK, line a5) on top of the triplet pro-
vided in GSM. An authentication token allows an MS to au-
thenticate a VLR. The ﬁelds within the token include SEQ,
anonymity key (AK), authentication management ﬁeld (AMF),
and message authentication code (MAC). Each authentica-
tion token is assigned a unique SEQ. When an MS receives
an authentication token, it veriﬁes that the corresponding
SEQ has not been accepted before (line a19), thereby pre-
cluding replay by an attacker. To allow for out-of-order
SEQs due to simultaneous registration in both CS and PS
domains, MS maintains a list of SEQs that it has accepted.
To prevent exposition of MS’s identity and location, key AK
can be used to conceal the SEQ. AMF is an authentication
management ﬁeld which can be used for purposes such as
specifying a particular authentication algorithm used, etc.
MAC is used to ensure the authenticity and integrity of the
authentication token and the random challenge. The IK is
used to protect the integrity of the control data. Readers
are referred to the UMTS Security Architecture [6] for a
detailed description of the AKA procedure.

The generation, allocation, veriﬁcation, and management
of SEQ is a complicated matter, especially with regard to
the protection against an attack to force SEQ wrap around
and the compromise of user identity conﬁdentiality. Further-
more, with the consideration of re-synchronization failure re-
covery, SEQ complicates both protocol and implementation
tremendously.
(In re-synchronization failure recovery, an
HLR and an MS try to re-synchronize SEQ due to synchro-
nization failure in various scenarios such as simultaneous
registration in CS and PS domains, user movement between
VLRs which do not transfer leftover AVs, and super-charged
networks where the mobility of an MS among various VLRs
is very high.) In fact, in the UMTS Security Architecture [6],
a 6-page appendix is necessary to describe the generation,
allocation, veriﬁcation, and management of SEQ.

89Line

Procedure

MS

VLR

HLR

Registration 
and
Distribution of 
Authentication
(cid:0)(cid:1)(cid:2)

Authentication
and 
Key Agreement,

(cid:7)(cid:1) (cid:0)(cid:1) (cid:8)(cid:1)

a1
a2
a3
a4
a5
a6
a7
a8
a9
a10
a11
a12

a13
a14

a15
a16
a17
a18
(cid:27)(cid:14)$
(cid:27)(cid:19)%

(cid:27)(cid:19)(cid:14)

(cid:27)(cid:19)(cid:19)
(cid:27)(cid:19)(cid:24)
(cid:27)(cid:19)(cid:23)

 (cid:3)

(cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15)

(cid:10)	(cid:1) (cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15) (cid:17)(cid:7)(cid:1)(cid:1)

(cid:25)(cid:1) (cid:1)(cid:2) (cid:27) (cid:9)(cid:4) (cid:13)
(cid:15) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
 (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)
(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:8)(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)
 (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
(cid:4)(cid:16) (cid:17)  (cid:18) (cid:3)	  (cid:4)(cid:0)(cid:0)(cid:4) (cid:21) (cid:0)(cid:0) (cid:4)(cid:15)
(cid:4)(cid:5) (cid:18) (cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:8)(cid:9)(cid:10)(cid:3)(cid:0)(cid:0)(cid:15)(cid:0)(cid:0)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) 
"(cid:1) (cid:4)(cid:5)  (cid:27)(cid:1)"  (cid:3)	

 (cid:3)(cid:18) (cid:18) (cid:9)(cid:4) (cid:13)(cid:13)(cid:0)(cid:15)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) (cid:13)(cid:0)(cid:15)(cid:19) (cid:17)(cid:7)(cid:1)(cid:1) (cid:0) (cid:8) (cid:2)(cid:7)(cid:1)  (cid:29)(cid:29)  (cid:27)(cid:8)

 (cid:3)(cid:18)

(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:3)	 (cid:18) (cid:3)	  (cid:4)  (cid:4)
(cid:8) (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
 (cid:4)(cid:15)
(cid:0)(cid:1)(cid:8)#2 #(cid:1)(cid:7)(cid:1) # (cid:3)	 (cid:0)
(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)

(cid:18) (cid:8) (cid:4)(cid:15)

(cid:0)

(cid:9)(cid:10)(cid:3)

(cid:15)(cid:3) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
(cid:3) (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)

(cid:0)

(cid:18) (cid:8)(cid:9)(cid:10)(cid:3)(cid:13)(cid:0)(cid:15)

(cid:9)(cid:10)(cid:3)
(cid:15)(cid:3) (cid:18) (cid:15)(cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)
(cid:3) (cid:18) (cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)

(cid:1) & ’(cid:7)(cid:1) ((cid:1)(cid:1)(cid:27)(cid:8) (cid:27)  (cid:2)(cid:27)(cid:8) !(cid:1)(cid:8))(cid:2)(cid:27)(cid:8) (cid:27)" (cid:27)(cid:27)((cid:1)(cid:1) # (cid:25)*	 (cid:1)	(cid:1)(cid:2)(cid:1) 	 (cid:1) (cid:27)(cid:1) "(cid:1)(cid:2)(cid:8) (cid:1)" (cid:8) (cid:27) -	(cid:27)((cid:1)

(cid:27)(cid:1)"(cid:8)/ (cid:8) 0’(cid:25) (cid:1)(cid:2)	(cid:8)2 (cid:27)(cid:2)(cid:7)(cid:8)(cid:1)(cid:2)	(cid:1) (cid:27)"(cid:27)" (cid:13)-(cid:15)3

Figure 1: Authentication and Key Agreement in UMTS

4. CDMA2000 SUBSCRIBER AUTHENTICA-

TION AND KEY AGREEMENT

Cdma2000 is designed to be backward compatible with
its predecessor cdmOne, therefore it inherits most of the cd-
maOne security features. Speciﬁcally, for cdma2000, Figure
2 depicts the general registration and the subscriber authen-
tication and key agreement procedures in the latest pub-
lished documents on security [8, 9]. These standards show
the same procedures as in cdmaOne.

In particular, during registration (invoked by the SSD up-

date procedure, lines b1 to b12), the HLR selects a RAN DSSD
and calculates a new SSD which can be shared with a VLR
(lines b1 and b2.) The VLR then sends the RAN DSSD to
an MS for it to derive the new SSD (lines b3 and b4.) To
authenticate the VLR, an MS sends a base station challenge
order (line b6) to the VLR. It is only when the VLR passes
the challenge does the MS update to the new SSD (line
b12).

During the subscriber authentication phase (lines b13 to
b21), the MS invokes the global challenge procedure by ﬁrst
calculating a response AU T HR using a globally broadcast
challenge RAN D and SSD A, the ﬁrst portion of SSD. In
line b15, the MS sends RAN DC (the ﬁrst 8 bits of RAN D),
COU N T (Call History counter used for clone prevention by
keeping track the number of calls made by the MS), and
AU T HR to the VLR who will then verify the received val-
ues to authenticate the MS, (in lines b16 to b21). In case
that the MS fails the global challenge, the VLR will invoke
a unique challenge procedure with a unique random num-

ber speciﬁcally generated to challenge the MS (readers are
referred to [8] for the details of the unique challenge proce-
dure). Note that the subscriber authentication here is only
one-way (i.e., the VLR authenticates the MS, but not vice
versa). Only when the MS is successfully authenticated can
the encryption key be generated. In line b22, the encryp-
tion key is calculated based on the RAN D and SSD B, the
second portion of SSD.

The predominant diﬀerence in the network access security
between GSM and cdmaOne, and thus their descendants
UMTS and cdma2000,
is how the authentication data is
prepared. In UMTS, an HLR prepares and sends a list of
challenge and response vectors to the VLR to authenticate
an MS; while in cdma2000, a derived shared secret data
(SSD) from a common secret key K can be shared with a
VLR so that the VLR itself can authenticate an MS locally.
The HLR total control method adopted by UMTS is secure
in that the HLR is the one that an MS trusts, however it is
not convenient for a VLR as the VLR has to rely on the HLR
to generate challenges and responses. On the other hand,
cdma2000’s VLR local method is convenient for a VLR but
not as secure as UMTS, since an HLR does not have the total
control in the communication between a VLR and an MS.
This is most evident when there is a dispute between an MS
and a VLR; an HLR has no easy way to settle the dispute
as it has given the VLR the control. To lesson the degree of
the problem, in cdma2000, an HLR can periodically change
the value of the SSD (using the SSD Update procedure) to
make the sharing with a VLR less problematic.

90Line Procedure

MS

VLR

HLR

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)(cid:14) (cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 

(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 
(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

Fail

Fail Confirmation

Succeed

Success Confirmation

(cid:25)(cid:12)(cid:29)(cid:17)(cid:24) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:0)(cid:1) (cid:3)(cid:10) (cid:0) (cid:0)(cid:1) (cid:3)(cid:2)(cid:11)(cid:11)(cid:3)

(cid:0)(cid:1) (cid:3)(cid:10)(cid:14) (cid:10)(cid:7)  (cid:8)(cid:14) (cid:1)(cid:7) (cid:8)  (cid:0)

(cid:26)$
(cid:26)%
(cid:26)&

(cid:26)’
(cid:26)(
(cid:26))

(cid:26)(cid:3)
(cid:26)*

(cid:26)+

(cid:20)(cid:10)(cid:19)(cid:12)(cid:17)(cid:12)

(cid:17)(cid:24)

(cid:25)(cid:12)(cid:12)(cid:26)	(cid:12) (cid:27)
(cid:28)	(cid:16)(cid:10)(cid:12)(cid:29)(cid:17)(cid:12)
(cid:27)(cid:17)(cid:12)

(cid:31)(cid:31)(cid:25) (cid:11)(cid:24)(cid:17)(cid:10)

(cid:26)$(cid:2)

(cid:26)$$

(cid:26)$%

(cid:26)$&
(cid:26)$’
(cid:26)$(

(cid:26)$)
(cid:26)$(cid:3)
(cid:26)$*
(cid:26)$+

(cid:26)%(cid:2)

(cid:26)%$

(cid:26)%%

# (cid:26)(cid:17) 
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

Subscriber
Authentication

and

Key
Agreement

!(cid:10)(cid:12)(cid:27)" (cid:0)(cid:1) (cid:3)(cid:10)
!(cid:10)(cid:12)(cid:27)" (cid:10)(cid:7)  (cid:8)
(cid:6)(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0)

Fail
Fail

Succeed

Fail

MS is authenticated

(cid:7)(cid:9)(cid:10)
(cid:11)(cid:12)	(cid:10)
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

(cid:10)"
#(cid:10)(cid:10)(cid:17)(cid:12)

(cid:18)(cid:19) (cid:0) (cid:20)(cid:18)(cid:18)(cid:23)(cid:18) (cid:18)(cid:19)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:5)

Note: In this figure, we only show the essential inputs to the CAVE algorithm. The detailed inputs can be found in [8] and [9].

Figure 2: Cdma2000 Subscriber Authentication and Key Agreement in documents C.S0004-A v6.0 [8] and
C.S0005-A v6.0 [9]

To meet the 3G security challenges, cdma2000 will pro-
vide ESA and ESP enhancements [11]. However, the de-
tailed steps in achieving these enhancements are still being
worked out, although 3GPP2 has approved the following:
(1) the adoption of openly reviewed algorithms such as Rijn-
dael Encryption algorithm [9], the AES chosen by NIST, and
(2) the adoption of 3GPP AKA with SHA-1 and Message
Authentication Code as the hash and integrity functions for
AKA operations [10]. SHA-1 is a hash function deﬁned in
FIPS ”Secured Hash Standard” [15]. A message authentica-
tion code is generated by means of a hash function to ensure
the authenticity and integrity of the transmitted messages.
With the adoption of 3GPP AKA, it remains to be seen as
to how cdma2000 handles both authentication styles (i.e.,
UMTS’ HLR total control and cdma2000’s VLR local con-
trol) smoothly. As of the writing of this paper, 3GPP2 has
not published the details of this transaction.

5. ENHANCEMENTS

As can be seen from section 3, the approach adopted by
UMTS to provide 3G AKA complicates the already complex
wireless protocol. Here, we provide an elegant approach to
achieve strong AKA on top of UMTS as well as cdma2000.
In the following, section 5.1 introduces a list of notations
that we use in our enhanced protocol. Section 5.2 describes
HMAC and hash chaining techniques. Section 5.3 describes
our enhanced protocol, the advantages, and the time and
space analysis.

5.1 Notation

• t(x, y): HMAC with key x, and message y
• p(x, y): Cipher key generation function with key x,

and random data y

• q(x, y): Integrity key generation function with key x,

and random data y

• r(x, y): Anonymity key generation function with key

x, and random data y
• AK: Anonymity Key
• RAN DH : A random number selected by an HLR
• CKH : The Cipher Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• IKH: The Integrity Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• CKi,m: The Cipher Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

• IKi,m: The Integrity Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

91On the Security of Wireless Network Access with

Enhancements

Lein Harn and Wen-Jung Hsin

University of Missouri - Kansas City

Kansas City, MO 64110

ABSTRACT
The security of the current 3G wireless protocols addresses
the problems faced by the 2G systems, in addition to ful-
ﬁlling the higher 3G security requirements mandated from
operating in IP networks as well as voice networks. However,
the approach adopted by the two most popular 3G mobile
system forerunners, UMTS and cdma2000, leaves many ar-
eas for improvement. In this paper, we improve the security
of the 3G protocols in network access by providing strong
periodically mutual authentication, strong key agreement,
and non-repudiation service in a simple and elegant way.

Categories & Subject Descriptors
K.6.5 [Security and Protection]: Authentication

General Terms
Security

Keywords
Security, 3G Mobile Network Security and Authentication

1. ACRONYMS
2G,3G,4G The Second, Third, Fourth Generation
3GPP
3GPP2
A3
A5
A8

3G Partnership Project
3G Partnership Project 2
An authentication algorithm used in GSM
An encryption algorithm used in GSM
a key generation algorithm used in GSM

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
WiSE’03, September 19, 2003, San Diego, California, USA.
Copyright 2003 ACM 1-58113-769-9/03/0009 ...$5.00.

AES
AK
AKA
AV
CK
CDMA
cdmaOne
cdma2000
COUNT
CS
ESA
ESP
FIPS
GSM
HLR
HMAC
IK
IMT-2000
Key K
MS
NIST
PS
RAND
SEQ
SSD
UMTS
VLR

Advanced Encryption System
Anonymity Key
Authentication and Key Agreement
Authentication Vector
Cipher Key
Code Division Multiple Access
IS-95 based CDMA
IS-2000 based CDMA
Call History Counter used in cdma2000
Circuit Switching
Enhanced Subscriber Authentication
Enhanced Subscriber Privacy
Federal Information Processing Standards
Global System for Mobile communications
Home Location Register
keyed-Hash Message Authentication Code
Integrity Key
International Mobile Telecommunications 2000
A common secret key between MS and HLR
Mobile Station
National Institute of Standards and Technology
Packet Switching
A random number
Sequence Number used in UMTS AKA
Shared Secret Data
Universal Mobile Telecommunications System
Visitor Location Register

2.

INTRODUCTION

In recent years, due to technology advances, we have seen
a phenomenal increase in the number of cellular users. As
the demand increases, so does the importance of security in
the cellular systems. This can be seen from many highly
publicized incidents, e.g., the plain text communication am-
ong allied pilots during Kosovo war as reported by Wash-
ington Post, and the interception of House Speaker Newt
Gingrich’s cellular conference conversation. To provide pro-
tection, many diﬀerent security areas are addressed, e.g.,
network access security provides users with secure access to
the mobile services, network domain security provides secure
exchanges of signaling data in the core network, application
domain security provides users and providers with secure ex-
changes of application data, etc.
[6]. Our emphasis in this
paper is in the area of network access security.

For network access security, 2G mobile systems such as
GSM and cdmaOne were designed to protect against exter-
nal attacks. However, these designs have led to numerous
interception attacks [5, 20, 24, 30]. The 3G wireless pro-
tocols must not only address the problems faced by the 2G
systems but also provide strong security functionality to ful-
ﬁll the 3G cellular requirements as deﬁned in IMT-2000 [7],
especially the required support over IP networks. Unfortu-

88nately, the proposed security protocols for network access
provided by the two most popular 3G cellular system fore-
runners, UMTS and cdma2000 (the descendants of GSM and
cdmaOne, respectively), still leave many areas for improve-
ment.
In this paper, we address some of these areas and
provide protocol enhancements on top of these two systems.
For clarity, here we specify the security standards to which
we will be referring in this paper. The security architecture
standard for UMTS is deﬁned in [6]. For cdma2000, the
latest published documentation on network access security
can be found in [8, 9, 10].

One of the areas for improvement is the way in which
a subscriber authenticates a network. 3G systems provide
mutual authentication between a subscriber and a network,
whereas 2G provides only subscriber authentication. To al-
low network authentication, UMTS uses a sequence number
approach with which a subscriber can verify the freshness of
an authentication request and thus prevent an attacker’s re-
play. Instead of sequence numbers, we propose to use Lam-
port’s one-time password/hash chaining technique [19] in
both directions, to and from an MS, to establish periodi-
cally mutual authentication. Hash chaining provides strong
periodical authentication and is used in many applications
[3, 16, 17, 21]. Thus, by using this technique, our enhance-
ment is eﬃcient, elegant, and simple, and our periodically
mutual authentication is strong.

Additionally, our enhancement can solve a billing dispute
problem between an MS and a VLR. Neither UMTS nor
cdma2000 address the issue of billing disputes, and thus
there is no recourse to settle disputes when they arise. Note
that a true non-repudiation service among HLR, MS, and
VLR can only be achieved via a public-key system using digi-
tal signatures. In this paper, following UMTS and cdma2000,
we adopt the symmetric key system with the assumption
that both MS and VLR must trust HLR. However, un-
like UMTS and cdma2000, our scheme can achieve non-
repudiation between an MS and a VLR. That is, any dis-
pute between an MS and a VLR can be resolved in our
scheme. Speciﬁcally, we use keyed-Hash Message Authenti-
cation Code (HMAC) recently drafted by FIPS [14] on top
of hash chaining to provide a non-repudiation service be-
tween an MS and a VLR to explicitly address the billing
issue without complicating the existing protocols.

Previous work in this area includes a comparative study
between UMTS and cdma2000 for the entire systems, but
with little emphasis in the area of security [2, 13]. Rose
[28] oﬀered a high level general overview of wireless secu-
rity between UMTS and cdma2000. Our detailed compar-
ative study here emphasizes the subscriber authentication
and key agreement procedures, as this becomes the basis for
building our protocol enhancements. Al-Muhtadi et al.
[1]
proposed a lightweight component in mobile devices and a
security server for authentication and call setup for 3G/4G
systems. Their work can beneﬁt from our enhanced pro-
tocol mentioned here to provide strong periodically mutual
authentication and to simplify the implementation.

The remainder of this paper is organized as follows. Sec-
tions 3 and 4 describe detailed AKA procedure in UMTS
and cdma2000, respectively. Section 5 describes our en-
hancements, and hash chaining and HMAC techniques that
we adopt to achieve the improvements. Finally, section 6
provides conclusion and summary.

3. UMTS AUTHENTICATION AND KEY

AGREEMENT

This section describes the registration and AKA proce-
dures in UMTS [6], shown in Figure 1. For ease of reference,
each line in the ﬁgure is provided with a line identiﬁcation
number. UMTS maintains the same challenge and response
method as its 2G predecessor, GSM, to facilitate genera-
tion migration. In particular, during registration, an HLR
prepares and sends a list of authentication vectors (AV) to
a VLR (see lines a2 to a12 in Figure 1.) During AKA, a
VLR uses an AV (lines a13 and a14) to authenticate an MS.
Each AV is used once for each AKA invocation. If a VLR
runs out of AVs, it can request more from the HLR. When
an MS roams out of a VLR, the old VLR should transfer
the leftover AVs to the new VLR. The standard [6] assumes
that the communication links between VLRs are adequately
secure.

The major diﬀerences in registration and AKA proce-
dures between UMTS and GSM are (1) GSM allows only
subscriber authentication, while UMTS provides both sub-
scriber (line a22) and network (line a19) mutual authentica-
tions, and (2) UMTS can protect the integrity of signaling
data (via IKi in line a24), while GSM can not. For the
network authentication, UMTS employs a complicated se-
quence number (SEQ) technique. Speciﬁcally, UMTS achie-
ves these two extra functionalities by adding two extra ﬁelds
in the AV, namely an authentication token (AUTN, line a9)
and an integrity key (IK, line a5) on top of the triplet pro-
vided in GSM. An authentication token allows an MS to au-
thenticate a VLR. The ﬁelds within the token include SEQ,
anonymity key (AK), authentication management ﬁeld (AMF),
and message authentication code (MAC). Each authentica-
tion token is assigned a unique SEQ. When an MS receives
an authentication token, it veriﬁes that the corresponding
SEQ has not been accepted before (line a19), thereby pre-
cluding replay by an attacker. To allow for out-of-order
SEQs due to simultaneous registration in both CS and PS
domains, MS maintains a list of SEQs that it has accepted.
To prevent exposition of MS’s identity and location, key AK
can be used to conceal the SEQ. AMF is an authentication
management ﬁeld which can be used for purposes such as
specifying a particular authentication algorithm used, etc.
MAC is used to ensure the authenticity and integrity of the
authentication token and the random challenge. The IK is
used to protect the integrity of the control data. Readers
are referred to the UMTS Security Architecture [6] for a
detailed description of the AKA procedure.

The generation, allocation, veriﬁcation, and management
of SEQ is a complicated matter, especially with regard to
the protection against an attack to force SEQ wrap around
and the compromise of user identity conﬁdentiality. Further-
more, with the consideration of re-synchronization failure re-
covery, SEQ complicates both protocol and implementation
tremendously.
(In re-synchronization failure recovery, an
HLR and an MS try to re-synchronize SEQ due to synchro-
nization failure in various scenarios such as simultaneous
registration in CS and PS domains, user movement between
VLRs which do not transfer leftover AVs, and super-charged
networks where the mobility of an MS among various VLRs
is very high.) In fact, in the UMTS Security Architecture [6],
a 6-page appendix is necessary to describe the generation,
allocation, veriﬁcation, and management of SEQ.

89Line

Procedure

MS

VLR

HLR

Registration 
and
Distribution of 
Authentication
(cid:0)(cid:1)(cid:2)

Authentication
and 
Key Agreement,

(cid:7)(cid:1) (cid:0)(cid:1) (cid:8)(cid:1)

a1
a2
a3
a4
a5
a6
a7
a8
a9
a10
a11
a12

a13
a14

a15
a16
a17
a18
(cid:27)(cid:14)$
(cid:27)(cid:19)%

(cid:27)(cid:19)(cid:14)

(cid:27)(cid:19)(cid:19)
(cid:27)(cid:19)(cid:24)
(cid:27)(cid:19)(cid:23)

 (cid:3)

(cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15)

(cid:10)	(cid:1) (cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15) (cid:17)(cid:7)(cid:1)(cid:1)

(cid:25)(cid:1) (cid:1)(cid:2) (cid:27) (cid:9)(cid:4) (cid:13)
(cid:15) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
 (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)
(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:8)(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)
 (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
(cid:4)(cid:16) (cid:17)  (cid:18) (cid:3)	  (cid:4)(cid:0)(cid:0)(cid:4) (cid:21) (cid:0)(cid:0) (cid:4)(cid:15)
(cid:4)(cid:5) (cid:18) (cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:8)(cid:9)(cid:10)(cid:3)(cid:0)(cid:0)(cid:15)(cid:0)(cid:0)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) 
"(cid:1) (cid:4)(cid:5)  (cid:27)(cid:1)"  (cid:3)	

 (cid:3)(cid:18) (cid:18) (cid:9)(cid:4) (cid:13)(cid:13)(cid:0)(cid:15)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) (cid:13)(cid:0)(cid:15)(cid:19) (cid:17)(cid:7)(cid:1)(cid:1) (cid:0) (cid:8) (cid:2)(cid:7)(cid:1)  (cid:29)(cid:29)  (cid:27)(cid:8)

 (cid:3)(cid:18)

(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:3)	 (cid:18) (cid:3)	  (cid:4)  (cid:4)
(cid:8) (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
 (cid:4)(cid:15)
(cid:0)(cid:1)(cid:8)#2 #(cid:1)(cid:7)(cid:1) # (cid:3)	 (cid:0)
(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)

(cid:18) (cid:8) (cid:4)(cid:15)

(cid:0)

(cid:9)(cid:10)(cid:3)

(cid:15)(cid:3) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
(cid:3) (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)

(cid:0)

(cid:18) (cid:8)(cid:9)(cid:10)(cid:3)(cid:13)(cid:0)(cid:15)

(cid:9)(cid:10)(cid:3)
(cid:15)(cid:3) (cid:18) (cid:15)(cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)
(cid:3) (cid:18) (cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)

(cid:1) & ’(cid:7)(cid:1) ((cid:1)(cid:1)(cid:27)(cid:8) (cid:27)  (cid:2)(cid:27)(cid:8) !(cid:1)(cid:8))(cid:2)(cid:27)(cid:8) (cid:27)" (cid:27)(cid:27)((cid:1)(cid:1) # (cid:25)*	 (cid:1)	(cid:1)(cid:2)(cid:1) 	 (cid:1) (cid:27)(cid:1) "(cid:1)(cid:2)(cid:8) (cid:1)" (cid:8) (cid:27) -	(cid:27)((cid:1)

(cid:27)(cid:1)"(cid:8)/ (cid:8) 0’(cid:25) (cid:1)(cid:2)	(cid:8)2 (cid:27)(cid:2)(cid:7)(cid:8)(cid:1)(cid:2)	(cid:1) (cid:27)"(cid:27)" (cid:13)-(cid:15)3

Figure 1: Authentication and Key Agreement in UMTS

4. CDMA2000 SUBSCRIBER AUTHENTICA-

TION AND KEY AGREEMENT

Cdma2000 is designed to be backward compatible with
its predecessor cdmOne, therefore it inherits most of the cd-
maOne security features. Speciﬁcally, for cdma2000, Figure
2 depicts the general registration and the subscriber authen-
tication and key agreement procedures in the latest pub-
lished documents on security [8, 9]. These standards show
the same procedures as in cdmaOne.

In particular, during registration (invoked by the SSD up-

date procedure, lines b1 to b12), the HLR selects a RAN DSSD
and calculates a new SSD which can be shared with a VLR
(lines b1 and b2.) The VLR then sends the RAN DSSD to
an MS for it to derive the new SSD (lines b3 and b4.) To
authenticate the VLR, an MS sends a base station challenge
order (line b6) to the VLR. It is only when the VLR passes
the challenge does the MS update to the new SSD (line
b12).

During the subscriber authentication phase (lines b13 to
b21), the MS invokes the global challenge procedure by ﬁrst
calculating a response AU T HR using a globally broadcast
challenge RAN D and SSD A, the ﬁrst portion of SSD. In
line b15, the MS sends RAN DC (the ﬁrst 8 bits of RAN D),
COU N T (Call History counter used for clone prevention by
keeping track the number of calls made by the MS), and
AU T HR to the VLR who will then verify the received val-
ues to authenticate the MS, (in lines b16 to b21). In case
that the MS fails the global challenge, the VLR will invoke
a unique challenge procedure with a unique random num-

ber speciﬁcally generated to challenge the MS (readers are
referred to [8] for the details of the unique challenge proce-
dure). Note that the subscriber authentication here is only
one-way (i.e., the VLR authenticates the MS, but not vice
versa). Only when the MS is successfully authenticated can
the encryption key be generated. In line b22, the encryp-
tion key is calculated based on the RAN D and SSD B, the
second portion of SSD.

The predominant diﬀerence in the network access security
between GSM and cdmaOne, and thus their descendants
UMTS and cdma2000,
is how the authentication data is
prepared. In UMTS, an HLR prepares and sends a list of
challenge and response vectors to the VLR to authenticate
an MS; while in cdma2000, a derived shared secret data
(SSD) from a common secret key K can be shared with a
VLR so that the VLR itself can authenticate an MS locally.
The HLR total control method adopted by UMTS is secure
in that the HLR is the one that an MS trusts, however it is
not convenient for a VLR as the VLR has to rely on the HLR
to generate challenges and responses. On the other hand,
cdma2000’s VLR local method is convenient for a VLR but
not as secure as UMTS, since an HLR does not have the total
control in the communication between a VLR and an MS.
This is most evident when there is a dispute between an MS
and a VLR; an HLR has no easy way to settle the dispute
as it has given the VLR the control. To lesson the degree of
the problem, in cdma2000, an HLR can periodically change
the value of the SSD (using the SSD Update procedure) to
make the sharing with a VLR less problematic.

90Line Procedure

MS

VLR

HLR

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)(cid:14) (cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 

(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 
(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

Fail

Fail Confirmation

Succeed

Success Confirmation

(cid:25)(cid:12)(cid:29)(cid:17)(cid:24) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:0)(cid:1) (cid:3)(cid:10) (cid:0) (cid:0)(cid:1) (cid:3)(cid:2)(cid:11)(cid:11)(cid:3)

(cid:0)(cid:1) (cid:3)(cid:10)(cid:14) (cid:10)(cid:7)  (cid:8)(cid:14) (cid:1)(cid:7) (cid:8)  (cid:0)

(cid:26)$
(cid:26)%
(cid:26)&

(cid:26)’
(cid:26)(
(cid:26))

(cid:26)(cid:3)
(cid:26)*

(cid:26)+

(cid:20)(cid:10)(cid:19)(cid:12)(cid:17)(cid:12)

(cid:17)(cid:24)

(cid:25)(cid:12)(cid:12)(cid:26)	(cid:12) (cid:27)
(cid:28)	(cid:16)(cid:10)(cid:12)(cid:29)(cid:17)(cid:12)
(cid:27)(cid:17)(cid:12)

(cid:31)(cid:31)(cid:25) (cid:11)(cid:24)(cid:17)(cid:10)

(cid:26)$(cid:2)

(cid:26)$$

(cid:26)$%

(cid:26)$&
(cid:26)$’
(cid:26)$(

(cid:26)$)
(cid:26)$(cid:3)
(cid:26)$*
(cid:26)$+

(cid:26)%(cid:2)

(cid:26)%$

(cid:26)%%

# (cid:26)(cid:17) 
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

Subscriber
Authentication

and

Key
Agreement

!(cid:10)(cid:12)(cid:27)" (cid:0)(cid:1) (cid:3)(cid:10)
!(cid:10)(cid:12)(cid:27)" (cid:10)(cid:7)  (cid:8)
(cid:6)(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0)

Fail
Fail

Succeed

Fail

MS is authenticated

(cid:7)(cid:9)(cid:10)
(cid:11)(cid:12)	(cid:10)
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

(cid:10)"
#(cid:10)(cid:10)(cid:17)(cid:12)

(cid:18)(cid:19) (cid:0) (cid:20)(cid:18)(cid:18)(cid:23)(cid:18) (cid:18)(cid:19)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:5)

Note: In this figure, we only show the essential inputs to the CAVE algorithm. The detailed inputs can be found in [8] and [9].

Figure 2: Cdma2000 Subscriber Authentication and Key Agreement in documents C.S0004-A v6.0 [8] and
C.S0005-A v6.0 [9]

To meet the 3G security challenges, cdma2000 will pro-
vide ESA and ESP enhancements [11]. However, the de-
tailed steps in achieving these enhancements are still being
worked out, although 3GPP2 has approved the following:
(1) the adoption of openly reviewed algorithms such as Rijn-
dael Encryption algorithm [9], the AES chosen by NIST, and
(2) the adoption of 3GPP AKA with SHA-1 and Message
Authentication Code as the hash and integrity functions for
AKA operations [10]. SHA-1 is a hash function deﬁned in
FIPS ”Secured Hash Standard” [15]. A message authentica-
tion code is generated by means of a hash function to ensure
the authenticity and integrity of the transmitted messages.
With the adoption of 3GPP AKA, it remains to be seen as
to how cdma2000 handles both authentication styles (i.e.,
UMTS’ HLR total control and cdma2000’s VLR local con-
trol) smoothly. As of the writing of this paper, 3GPP2 has
not published the details of this transaction.

5. ENHANCEMENTS

As can be seen from section 3, the approach adopted by
UMTS to provide 3G AKA complicates the already complex
wireless protocol. Here, we provide an elegant approach to
achieve strong AKA on top of UMTS as well as cdma2000.
In the following, section 5.1 introduces a list of notations
that we use in our enhanced protocol. Section 5.2 describes
HMAC and hash chaining techniques. Section 5.3 describes
our enhanced protocol, the advantages, and the time and
space analysis.

5.1 Notation

• t(x, y): HMAC with key x, and message y
• p(x, y): Cipher key generation function with key x,

and random data y

• q(x, y): Integrity key generation function with key x,

and random data y

• r(x, y): Anonymity key generation function with key

x, and random data y
• AK: Anonymity Key
• RAN DH : A random number selected by an HLR
• CKH : The Cipher Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• IKH: The Integrity Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• CKi,m: The Cipher Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

• IKi,m: The Integrity Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

91• f m(bi): One-way hash function with ith random seed
bi and mth composition, where i ≤ I and m ≤ M , for
use in authenticating an MS

• M : The maximum number of f hash chaining compo-

sition

• I: The maximum number of random seeds for f hash

chaining

• gn(aj): One-way hash function with jth random seed
aj and nth composition, where j ≤ J and n ≤ N , for
use in authenticating a VLR.

• N : The maximum number of g hash chaining compo-

sition

• J: The maximum number of random seeds for g hash

chaining

• ?

=: An equality comparison operator

5.2 Techniques

To enhance the 3G AKA protocol, we adopt two ma-
jor techniques: keyed-Hash Message Authentication Code
(HMAC) and hash chaining.

HMAC is very popular in the Internet community [25],
and has been recently drafted by FIPS [14]. It is used for
message authentication by means of a cryptographic hash
function and a shared secret key. In a public-key system, a
digital signature can be used to replace HMAC. The main
components in HMAC are a hash algorithm and a key, and
the most common form of HMAC is

hash(key, hash(key, message)).

Two of the most popular HMAC’s are HMAC-MD5 [26] and
HMAC-SHA [27].

Lamport’s one-time password/hash-chaining was proposed
in 1981, and has been used in many applications [3, 16, 17].
Let f (x) be a one-way function and

f M (x) = f (f (· ·· (f (x) ··· )))

be the composition of M f s. During registration, the claimant
(i.e., the one wishes to be authenticated) randomly selects an
integer seed b, computes f M (b) and HM AC of f M (b), and
sends f M (b) and the HM AC of f M (b) to the veriﬁer (i.e.,
the one decides whether the claimant is who it is). Once
registered, each hash chain can be used by the claimant
to prove itself to the veriﬁer M times.
In the ﬁrst visit,
the claimant submits f M−1(b) to prove itself. The veriﬁer
checks the equality f (f M−1(b))
?
= f M (b). If passed, the ver-
iﬁer updates f M (b) and stores f M−1(b) for the next visit;
otherwise, the claimant is not authenticated. The claimant
reveals f M−1(b), f M−2(b), · ·· , f (b), and b = f 0(b) in se-
quence to prove itself M times. The one-way hash chain-
ing algorithm prevents all users, except the legitimate one,
from computing backward values using the published one-
way value.

Straightforward implementations of a hash chain such as
storing all chain elements or iteratively hashing from a seed
have O(M ) of combined memory and computational com-
plexity for an M element chain. Recently, Jakobsson [18],
and Coppersmith and Jakobsson [12] proposed a log2(M )
space and access time mechanism, especially desired for low-
cost applications such as mobile handsets, micro-payments,
smart dust, authentications, and signatures (see [18, 12] for
references therein.)

For the purpose of non-repudiation, the combination of
f M−m(b) and the HM AC of f M (b) (that is provided by
the claimant during registration) can be used as a non-
repudiation proof by the veriﬁer as an evidence for all m
visits made by the claimant. Speciﬁcally, for all m visits, the
veriﬁer only needs to store the most recently released f value
(i.e., f M−m(b)), and does not need to keep all other values
that it has received (i.e., f M (b), f M−1(b), ··· , f M−m+1(b))
before the mth visit. The veriﬁer can produce a proof of the
claimant’s jth visit, where 1 ≤ j ≤ m−1, by simply comput-
ing f m−j (f M−m(b)). This desired feature is especially good
for the applications (such as mobile handsets) with limited
storage space.

To prolong the life time of a hash chain, an additional di-
mension can be added to the above scheme as follows. The
claimant (1) randomly selects I seeds, b1, b2,··· , and bI , (2)
computes f M (b1), f M (b2),··· , and f M (bI ), and an HMAC
on the concatenated message f M (b1)||f M (b2)|| ···||f M (bI ),
(3) sends the computed values in (2) to the veriﬁer. Note
that by using the concatenation of I hash chaining values
as one single message, one message authentication code be-
tween an MS and an HLR is all that is needed for estab-
lishing the initial registration (see lines c1 and c2 in Figure
3).

A general discussion on one-way functions and one-way
hash functions can be found in [29] and the implementation
of these functions can be found in [4].
5.3 Protocol Enhancement

Figure 3 provides our registration and AKA enhancements
on top of the two 3G forerunners, UMTS and cdma2000.
For clarity, a set of protocol steps composed to achieve a
unique functionality are grouped into a procedure. These
procedures mirror those in Figures 1 and 2. The signiﬁcance
of this grouping indicates that our procedures can be used to
replace with ease the corresponding UMTS and cdma2000
procedures.

5.3.1 Enhancement Details

In the following, we specify the assumption and explain

each procedure and the corresponding steps.

• Assumptions: Just like in UMTS Security Architec-
ture [6], we also assume that (1) the communication
link between an HLR and a VLR is adequately secure,
and (2) an MS shares a common secret key K with its
HLR.

• Procedure: Registration and Distribution of Authen-

tication Information

This procedure is used when an MS ﬁrst roams into
a new visitor domain. The MS must send its HLR
a set of data which is subsequently used by the VLR.
Speciﬁcally, both M SG1 and HM AC1 (in lines c1 and
c2) are sent from the MS via the VLR to the HLR.
After the HLR veriﬁes the authenticity of M SG1, it
then prepares M SG2 to send to the VLR. In order for
the MS to verify the authenticity of the VLR later on
in the AKA phase, M SG3 and HM AC3 is prepared
and sent by the VLR.

92On the Security of Wireless Network Access with

Enhancements

Lein Harn and Wen-Jung Hsin

University of Missouri - Kansas City

Kansas City, MO 64110

ABSTRACT
The security of the current 3G wireless protocols addresses
the problems faced by the 2G systems, in addition to ful-
ﬁlling the higher 3G security requirements mandated from
operating in IP networks as well as voice networks. However,
the approach adopted by the two most popular 3G mobile
system forerunners, UMTS and cdma2000, leaves many ar-
eas for improvement. In this paper, we improve the security
of the 3G protocols in network access by providing strong
periodically mutual authentication, strong key agreement,
and non-repudiation service in a simple and elegant way.

Categories & Subject Descriptors
K.6.5 [Security and Protection]: Authentication

General Terms
Security

Keywords
Security, 3G Mobile Network Security and Authentication

1. ACRONYMS
2G,3G,4G The Second, Third, Fourth Generation
3GPP
3GPP2
A3
A5
A8

3G Partnership Project
3G Partnership Project 2
An authentication algorithm used in GSM
An encryption algorithm used in GSM
a key generation algorithm used in GSM

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
WiSE’03, September 19, 2003, San Diego, California, USA.
Copyright 2003 ACM 1-58113-769-9/03/0009 ...$5.00.

AES
AK
AKA
AV
CK
CDMA
cdmaOne
cdma2000
COUNT
CS
ESA
ESP
FIPS
GSM
HLR
HMAC
IK
IMT-2000
Key K
MS
NIST
PS
RAND
SEQ
SSD
UMTS
VLR

Advanced Encryption System
Anonymity Key
Authentication and Key Agreement
Authentication Vector
Cipher Key
Code Division Multiple Access
IS-95 based CDMA
IS-2000 based CDMA
Call History Counter used in cdma2000
Circuit Switching
Enhanced Subscriber Authentication
Enhanced Subscriber Privacy
Federal Information Processing Standards
Global System for Mobile communications
Home Location Register
keyed-Hash Message Authentication Code
Integrity Key
International Mobile Telecommunications 2000
A common secret key between MS and HLR
Mobile Station
National Institute of Standards and Technology
Packet Switching
A random number
Sequence Number used in UMTS AKA
Shared Secret Data
Universal Mobile Telecommunications System
Visitor Location Register

2.

INTRODUCTION

In recent years, due to technology advances, we have seen
a phenomenal increase in the number of cellular users. As
the demand increases, so does the importance of security in
the cellular systems. This can be seen from many highly
publicized incidents, e.g., the plain text communication am-
ong allied pilots during Kosovo war as reported by Wash-
ington Post, and the interception of House Speaker Newt
Gingrich’s cellular conference conversation. To provide pro-
tection, many diﬀerent security areas are addressed, e.g.,
network access security provides users with secure access to
the mobile services, network domain security provides secure
exchanges of signaling data in the core network, application
domain security provides users and providers with secure ex-
changes of application data, etc.
[6]. Our emphasis in this
paper is in the area of network access security.

For network access security, 2G mobile systems such as
GSM and cdmaOne were designed to protect against exter-
nal attacks. However, these designs have led to numerous
interception attacks [5, 20, 24, 30]. The 3G wireless pro-
tocols must not only address the problems faced by the 2G
systems but also provide strong security functionality to ful-
ﬁll the 3G cellular requirements as deﬁned in IMT-2000 [7],
especially the required support over IP networks. Unfortu-

88nately, the proposed security protocols for network access
provided by the two most popular 3G cellular system fore-
runners, UMTS and cdma2000 (the descendants of GSM and
cdmaOne, respectively), still leave many areas for improve-
ment.
In this paper, we address some of these areas and
provide protocol enhancements on top of these two systems.
For clarity, here we specify the security standards to which
we will be referring in this paper. The security architecture
standard for UMTS is deﬁned in [6]. For cdma2000, the
latest published documentation on network access security
can be found in [8, 9, 10].

One of the areas for improvement is the way in which
a subscriber authenticates a network. 3G systems provide
mutual authentication between a subscriber and a network,
whereas 2G provides only subscriber authentication. To al-
low network authentication, UMTS uses a sequence number
approach with which a subscriber can verify the freshness of
an authentication request and thus prevent an attacker’s re-
play. Instead of sequence numbers, we propose to use Lam-
port’s one-time password/hash chaining technique [19] in
both directions, to and from an MS, to establish periodi-
cally mutual authentication. Hash chaining provides strong
periodical authentication and is used in many applications
[3, 16, 17, 21]. Thus, by using this technique, our enhance-
ment is eﬃcient, elegant, and simple, and our periodically
mutual authentication is strong.

Additionally, our enhancement can solve a billing dispute
problem between an MS and a VLR. Neither UMTS nor
cdma2000 address the issue of billing disputes, and thus
there is no recourse to settle disputes when they arise. Note
that a true non-repudiation service among HLR, MS, and
VLR can only be achieved via a public-key system using digi-
tal signatures. In this paper, following UMTS and cdma2000,
we adopt the symmetric key system with the assumption
that both MS and VLR must trust HLR. However, un-
like UMTS and cdma2000, our scheme can achieve non-
repudiation between an MS and a VLR. That is, any dis-
pute between an MS and a VLR can be resolved in our
scheme. Speciﬁcally, we use keyed-Hash Message Authenti-
cation Code (HMAC) recently drafted by FIPS [14] on top
of hash chaining to provide a non-repudiation service be-
tween an MS and a VLR to explicitly address the billing
issue without complicating the existing protocols.

Previous work in this area includes a comparative study
between UMTS and cdma2000 for the entire systems, but
with little emphasis in the area of security [2, 13]. Rose
[28] oﬀered a high level general overview of wireless secu-
rity between UMTS and cdma2000. Our detailed compar-
ative study here emphasizes the subscriber authentication
and key agreement procedures, as this becomes the basis for
building our protocol enhancements. Al-Muhtadi et al.
[1]
proposed a lightweight component in mobile devices and a
security server for authentication and call setup for 3G/4G
systems. Their work can beneﬁt from our enhanced pro-
tocol mentioned here to provide strong periodically mutual
authentication and to simplify the implementation.

The remainder of this paper is organized as follows. Sec-
tions 3 and 4 describe detailed AKA procedure in UMTS
and cdma2000, respectively. Section 5 describes our en-
hancements, and hash chaining and HMAC techniques that
we adopt to achieve the improvements. Finally, section 6
provides conclusion and summary.

3. UMTS AUTHENTICATION AND KEY

AGREEMENT

This section describes the registration and AKA proce-
dures in UMTS [6], shown in Figure 1. For ease of reference,
each line in the ﬁgure is provided with a line identiﬁcation
number. UMTS maintains the same challenge and response
method as its 2G predecessor, GSM, to facilitate genera-
tion migration. In particular, during registration, an HLR
prepares and sends a list of authentication vectors (AV) to
a VLR (see lines a2 to a12 in Figure 1.) During AKA, a
VLR uses an AV (lines a13 and a14) to authenticate an MS.
Each AV is used once for each AKA invocation. If a VLR
runs out of AVs, it can request more from the HLR. When
an MS roams out of a VLR, the old VLR should transfer
the leftover AVs to the new VLR. The standard [6] assumes
that the communication links between VLRs are adequately
secure.

The major diﬀerences in registration and AKA proce-
dures between UMTS and GSM are (1) GSM allows only
subscriber authentication, while UMTS provides both sub-
scriber (line a22) and network (line a19) mutual authentica-
tions, and (2) UMTS can protect the integrity of signaling
data (via IKi in line a24), while GSM can not. For the
network authentication, UMTS employs a complicated se-
quence number (SEQ) technique. Speciﬁcally, UMTS achie-
ves these two extra functionalities by adding two extra ﬁelds
in the AV, namely an authentication token (AUTN, line a9)
and an integrity key (IK, line a5) on top of the triplet pro-
vided in GSM. An authentication token allows an MS to au-
thenticate a VLR. The ﬁelds within the token include SEQ,
anonymity key (AK), authentication management ﬁeld (AMF),
and message authentication code (MAC). Each authentica-
tion token is assigned a unique SEQ. When an MS receives
an authentication token, it veriﬁes that the corresponding
SEQ has not been accepted before (line a19), thereby pre-
cluding replay by an attacker. To allow for out-of-order
SEQs due to simultaneous registration in both CS and PS
domains, MS maintains a list of SEQs that it has accepted.
To prevent exposition of MS’s identity and location, key AK
can be used to conceal the SEQ. AMF is an authentication
management ﬁeld which can be used for purposes such as
specifying a particular authentication algorithm used, etc.
MAC is used to ensure the authenticity and integrity of the
authentication token and the random challenge. The IK is
used to protect the integrity of the control data. Readers
are referred to the UMTS Security Architecture [6] for a
detailed description of the AKA procedure.

The generation, allocation, veriﬁcation, and management
of SEQ is a complicated matter, especially with regard to
the protection against an attack to force SEQ wrap around
and the compromise of user identity conﬁdentiality. Further-
more, with the consideration of re-synchronization failure re-
covery, SEQ complicates both protocol and implementation
tremendously.
(In re-synchronization failure recovery, an
HLR and an MS try to re-synchronize SEQ due to synchro-
nization failure in various scenarios such as simultaneous
registration in CS and PS domains, user movement between
VLRs which do not transfer leftover AVs, and super-charged
networks where the mobility of an MS among various VLRs
is very high.) In fact, in the UMTS Security Architecture [6],
a 6-page appendix is necessary to describe the generation,
allocation, veriﬁcation, and management of SEQ.

89Line

Procedure

MS

VLR

HLR

Registration 
and
Distribution of 
Authentication
(cid:0)(cid:1)(cid:2)

Authentication
and 
Key Agreement,

(cid:7)(cid:1) (cid:0)(cid:1) (cid:8)(cid:1)

a1
a2
a3
a4
a5
a6
a7
a8
a9
a10
a11
a12

a13
a14

a15
a16
a17
a18
(cid:27)(cid:14)$
(cid:27)(cid:19)%

(cid:27)(cid:19)(cid:14)

(cid:27)(cid:19)(cid:19)
(cid:27)(cid:19)(cid:24)
(cid:27)(cid:19)(cid:23)

 (cid:3)

(cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15)

(cid:10)	(cid:1) (cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15) (cid:17)(cid:7)(cid:1)(cid:1)

(cid:25)(cid:1) (cid:1)(cid:2) (cid:27) (cid:9)(cid:4) (cid:13)
(cid:15) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
 (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)
(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:8)(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)
 (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
(cid:4)(cid:16) (cid:17)  (cid:18) (cid:3)	  (cid:4)(cid:0)(cid:0)(cid:4) (cid:21) (cid:0)(cid:0) (cid:4)(cid:15)
(cid:4)(cid:5) (cid:18) (cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:8)(cid:9)(cid:10)(cid:3)(cid:0)(cid:0)(cid:15)(cid:0)(cid:0)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) 
"(cid:1) (cid:4)(cid:5)  (cid:27)(cid:1)"  (cid:3)	

 (cid:3)(cid:18) (cid:18) (cid:9)(cid:4) (cid:13)(cid:13)(cid:0)(cid:15)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) (cid:13)(cid:0)(cid:15)(cid:19) (cid:17)(cid:7)(cid:1)(cid:1) (cid:0) (cid:8) (cid:2)(cid:7)(cid:1)  (cid:29)(cid:29)  (cid:27)(cid:8)

 (cid:3)(cid:18)

(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:3)	 (cid:18) (cid:3)	  (cid:4)  (cid:4)
(cid:8) (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
 (cid:4)(cid:15)
(cid:0)(cid:1)(cid:8)#2 #(cid:1)(cid:7)(cid:1) # (cid:3)	 (cid:0)
(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)

(cid:18) (cid:8) (cid:4)(cid:15)

(cid:0)

(cid:9)(cid:10)(cid:3)

(cid:15)(cid:3) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
(cid:3) (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)

(cid:0)

(cid:18) (cid:8)(cid:9)(cid:10)(cid:3)(cid:13)(cid:0)(cid:15)

(cid:9)(cid:10)(cid:3)
(cid:15)(cid:3) (cid:18) (cid:15)(cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)
(cid:3) (cid:18) (cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)

(cid:1) & ’(cid:7)(cid:1) ((cid:1)(cid:1)(cid:27)(cid:8) (cid:27)  (cid:2)(cid:27)(cid:8) !(cid:1)(cid:8))(cid:2)(cid:27)(cid:8) (cid:27)" (cid:27)(cid:27)((cid:1)(cid:1) # (cid:25)*	 (cid:1)	(cid:1)(cid:2)(cid:1) 	 (cid:1) (cid:27)(cid:1) "(cid:1)(cid:2)(cid:8) (cid:1)" (cid:8) (cid:27) -	(cid:27)((cid:1)

(cid:27)(cid:1)"(cid:8)/ (cid:8) 0’(cid:25) (cid:1)(cid:2)	(cid:8)2 (cid:27)(cid:2)(cid:7)(cid:8)(cid:1)(cid:2)	(cid:1) (cid:27)"(cid:27)" (cid:13)-(cid:15)3

Figure 1: Authentication and Key Agreement in UMTS

4. CDMA2000 SUBSCRIBER AUTHENTICA-

TION AND KEY AGREEMENT

Cdma2000 is designed to be backward compatible with
its predecessor cdmOne, therefore it inherits most of the cd-
maOne security features. Speciﬁcally, for cdma2000, Figure
2 depicts the general registration and the subscriber authen-
tication and key agreement procedures in the latest pub-
lished documents on security [8, 9]. These standards show
the same procedures as in cdmaOne.

In particular, during registration (invoked by the SSD up-

date procedure, lines b1 to b12), the HLR selects a RAN DSSD
and calculates a new SSD which can be shared with a VLR
(lines b1 and b2.) The VLR then sends the RAN DSSD to
an MS for it to derive the new SSD (lines b3 and b4.) To
authenticate the VLR, an MS sends a base station challenge
order (line b6) to the VLR. It is only when the VLR passes
the challenge does the MS update to the new SSD (line
b12).

During the subscriber authentication phase (lines b13 to
b21), the MS invokes the global challenge procedure by ﬁrst
calculating a response AU T HR using a globally broadcast
challenge RAN D and SSD A, the ﬁrst portion of SSD. In
line b15, the MS sends RAN DC (the ﬁrst 8 bits of RAN D),
COU N T (Call History counter used for clone prevention by
keeping track the number of calls made by the MS), and
AU T HR to the VLR who will then verify the received val-
ues to authenticate the MS, (in lines b16 to b21). In case
that the MS fails the global challenge, the VLR will invoke
a unique challenge procedure with a unique random num-

ber speciﬁcally generated to challenge the MS (readers are
referred to [8] for the details of the unique challenge proce-
dure). Note that the subscriber authentication here is only
one-way (i.e., the VLR authenticates the MS, but not vice
versa). Only when the MS is successfully authenticated can
the encryption key be generated. In line b22, the encryp-
tion key is calculated based on the RAN D and SSD B, the
second portion of SSD.

The predominant diﬀerence in the network access security
between GSM and cdmaOne, and thus their descendants
UMTS and cdma2000,
is how the authentication data is
prepared. In UMTS, an HLR prepares and sends a list of
challenge and response vectors to the VLR to authenticate
an MS; while in cdma2000, a derived shared secret data
(SSD) from a common secret key K can be shared with a
VLR so that the VLR itself can authenticate an MS locally.
The HLR total control method adopted by UMTS is secure
in that the HLR is the one that an MS trusts, however it is
not convenient for a VLR as the VLR has to rely on the HLR
to generate challenges and responses. On the other hand,
cdma2000’s VLR local method is convenient for a VLR but
not as secure as UMTS, since an HLR does not have the total
control in the communication between a VLR and an MS.
This is most evident when there is a dispute between an MS
and a VLR; an HLR has no easy way to settle the dispute
as it has given the VLR the control. To lesson the degree of
the problem, in cdma2000, an HLR can periodically change
the value of the SSD (using the SSD Update procedure) to
make the sharing with a VLR less problematic.

90Line Procedure

MS

VLR

HLR

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)(cid:14) (cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 

(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 
(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

Fail

Fail Confirmation

Succeed

Success Confirmation

(cid:25)(cid:12)(cid:29)(cid:17)(cid:24) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:0)(cid:1) (cid:3)(cid:10) (cid:0) (cid:0)(cid:1) (cid:3)(cid:2)(cid:11)(cid:11)(cid:3)

(cid:0)(cid:1) (cid:3)(cid:10)(cid:14) (cid:10)(cid:7)  (cid:8)(cid:14) (cid:1)(cid:7) (cid:8)  (cid:0)

(cid:26)$
(cid:26)%
(cid:26)&

(cid:26)’
(cid:26)(
(cid:26))

(cid:26)(cid:3)
(cid:26)*

(cid:26)+

(cid:20)(cid:10)(cid:19)(cid:12)(cid:17)(cid:12)

(cid:17)(cid:24)

(cid:25)(cid:12)(cid:12)(cid:26)	(cid:12) (cid:27)
(cid:28)	(cid:16)(cid:10)(cid:12)(cid:29)(cid:17)(cid:12)
(cid:27)(cid:17)(cid:12)

(cid:31)(cid:31)(cid:25) (cid:11)(cid:24)(cid:17)(cid:10)

(cid:26)$(cid:2)

(cid:26)$$

(cid:26)$%

(cid:26)$&
(cid:26)$’
(cid:26)$(

(cid:26)$)
(cid:26)$(cid:3)
(cid:26)$*
(cid:26)$+

(cid:26)%(cid:2)

(cid:26)%$

(cid:26)%%

# (cid:26)(cid:17) 
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

Subscriber
Authentication

and

Key
Agreement

!(cid:10)(cid:12)(cid:27)" (cid:0)(cid:1) (cid:3)(cid:10)
!(cid:10)(cid:12)(cid:27)" (cid:10)(cid:7)  (cid:8)
(cid:6)(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0)

Fail
Fail

Succeed

Fail

MS is authenticated

(cid:7)(cid:9)(cid:10)
(cid:11)(cid:12)	(cid:10)
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

(cid:10)"
#(cid:10)(cid:10)(cid:17)(cid:12)

(cid:18)(cid:19) (cid:0) (cid:20)(cid:18)(cid:18)(cid:23)(cid:18) (cid:18)(cid:19)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:5)

Note: In this figure, we only show the essential inputs to the CAVE algorithm. The detailed inputs can be found in [8] and [9].

Figure 2: Cdma2000 Subscriber Authentication and Key Agreement in documents C.S0004-A v6.0 [8] and
C.S0005-A v6.0 [9]

To meet the 3G security challenges, cdma2000 will pro-
vide ESA and ESP enhancements [11]. However, the de-
tailed steps in achieving these enhancements are still being
worked out, although 3GPP2 has approved the following:
(1) the adoption of openly reviewed algorithms such as Rijn-
dael Encryption algorithm [9], the AES chosen by NIST, and
(2) the adoption of 3GPP AKA with SHA-1 and Message
Authentication Code as the hash and integrity functions for
AKA operations [10]. SHA-1 is a hash function deﬁned in
FIPS ”Secured Hash Standard” [15]. A message authentica-
tion code is generated by means of a hash function to ensure
the authenticity and integrity of the transmitted messages.
With the adoption of 3GPP AKA, it remains to be seen as
to how cdma2000 handles both authentication styles (i.e.,
UMTS’ HLR total control and cdma2000’s VLR local con-
trol) smoothly. As of the writing of this paper, 3GPP2 has
not published the details of this transaction.

5. ENHANCEMENTS

As can be seen from section 3, the approach adopted by
UMTS to provide 3G AKA complicates the already complex
wireless protocol. Here, we provide an elegant approach to
achieve strong AKA on top of UMTS as well as cdma2000.
In the following, section 5.1 introduces a list of notations
that we use in our enhanced protocol. Section 5.2 describes
HMAC and hash chaining techniques. Section 5.3 describes
our enhanced protocol, the advantages, and the time and
space analysis.

5.1 Notation

• t(x, y): HMAC with key x, and message y
• p(x, y): Cipher key generation function with key x,

and random data y

• q(x, y): Integrity key generation function with key x,

and random data y

• r(x, y): Anonymity key generation function with key

x, and random data y
• AK: Anonymity Key
• RAN DH : A random number selected by an HLR
• CKH : The Cipher Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• IKH: The Integrity Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• CKi,m: The Cipher Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

• IKi,m: The Integrity Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

91• f m(bi): One-way hash function with ith random seed
bi and mth composition, where i ≤ I and m ≤ M , for
use in authenticating an MS

• M : The maximum number of f hash chaining compo-

sition

• I: The maximum number of random seeds for f hash

chaining

• gn(aj): One-way hash function with jth random seed
aj and nth composition, where j ≤ J and n ≤ N , for
use in authenticating a VLR.

• N : The maximum number of g hash chaining compo-

sition

• J: The maximum number of random seeds for g hash

chaining

• ?

=: An equality comparison operator

5.2 Techniques

To enhance the 3G AKA protocol, we adopt two ma-
jor techniques: keyed-Hash Message Authentication Code
(HMAC) and hash chaining.

HMAC is very popular in the Internet community [25],
and has been recently drafted by FIPS [14]. It is used for
message authentication by means of a cryptographic hash
function and a shared secret key. In a public-key system, a
digital signature can be used to replace HMAC. The main
components in HMAC are a hash algorithm and a key, and
the most common form of HMAC is

hash(key, hash(key, message)).

Two of the most popular HMAC’s are HMAC-MD5 [26] and
HMAC-SHA [27].

Lamport’s one-time password/hash-chaining was proposed
in 1981, and has been used in many applications [3, 16, 17].
Let f (x) be a one-way function and

f M (x) = f (f (· ·· (f (x) ··· )))

be the composition of M f s. During registration, the claimant
(i.e., the one wishes to be authenticated) randomly selects an
integer seed b, computes f M (b) and HM AC of f M (b), and
sends f M (b) and the HM AC of f M (b) to the veriﬁer (i.e.,
the one decides whether the claimant is who it is). Once
registered, each hash chain can be used by the claimant
to prove itself to the veriﬁer M times.
In the ﬁrst visit,
the claimant submits f M−1(b) to prove itself. The veriﬁer
checks the equality f (f M−1(b))
?
= f M (b). If passed, the ver-
iﬁer updates f M (b) and stores f M−1(b) for the next visit;
otherwise, the claimant is not authenticated. The claimant
reveals f M−1(b), f M−2(b), · ·· , f (b), and b = f 0(b) in se-
quence to prove itself M times. The one-way hash chain-
ing algorithm prevents all users, except the legitimate one,
from computing backward values using the published one-
way value.

Straightforward implementations of a hash chain such as
storing all chain elements or iteratively hashing from a seed
have O(M ) of combined memory and computational com-
plexity for an M element chain. Recently, Jakobsson [18],
and Coppersmith and Jakobsson [12] proposed a log2(M )
space and access time mechanism, especially desired for low-
cost applications such as mobile handsets, micro-payments,
smart dust, authentications, and signatures (see [18, 12] for
references therein.)

For the purpose of non-repudiation, the combination of
f M−m(b) and the HM AC of f M (b) (that is provided by
the claimant during registration) can be used as a non-
repudiation proof by the veriﬁer as an evidence for all m
visits made by the claimant. Speciﬁcally, for all m visits, the
veriﬁer only needs to store the most recently released f value
(i.e., f M−m(b)), and does not need to keep all other values
that it has received (i.e., f M (b), f M−1(b), ··· , f M−m+1(b))
before the mth visit. The veriﬁer can produce a proof of the
claimant’s jth visit, where 1 ≤ j ≤ m−1, by simply comput-
ing f m−j (f M−m(b)). This desired feature is especially good
for the applications (such as mobile handsets) with limited
storage space.

To prolong the life time of a hash chain, an additional di-
mension can be added to the above scheme as follows. The
claimant (1) randomly selects I seeds, b1, b2,··· , and bI , (2)
computes f M (b1), f M (b2),··· , and f M (bI ), and an HMAC
on the concatenated message f M (b1)||f M (b2)|| ···||f M (bI ),
(3) sends the computed values in (2) to the veriﬁer. Note
that by using the concatenation of I hash chaining values
as one single message, one message authentication code be-
tween an MS and an HLR is all that is needed for estab-
lishing the initial registration (see lines c1 and c2 in Figure
3).

A general discussion on one-way functions and one-way
hash functions can be found in [29] and the implementation
of these functions can be found in [4].
5.3 Protocol Enhancement

Figure 3 provides our registration and AKA enhancements
on top of the two 3G forerunners, UMTS and cdma2000.
For clarity, a set of protocol steps composed to achieve a
unique functionality are grouped into a procedure. These
procedures mirror those in Figures 1 and 2. The signiﬁcance
of this grouping indicates that our procedures can be used to
replace with ease the corresponding UMTS and cdma2000
procedures.

5.3.1 Enhancement Details

In the following, we specify the assumption and explain

each procedure and the corresponding steps.

• Assumptions: Just like in UMTS Security Architec-
ture [6], we also assume that (1) the communication
link between an HLR and a VLR is adequately secure,
and (2) an MS shares a common secret key K with its
HLR.

• Procedure: Registration and Distribution of Authen-

tication Information

This procedure is used when an MS ﬁrst roams into
a new visitor domain. The MS must send its HLR
a set of data which is subsequently used by the VLR.
Speciﬁcally, both M SG1 and HM AC1 (in lines c1 and
c2) are sent from the MS via the VLR to the HLR.
After the HLR veriﬁes the authenticity of M SG1, it
then prepares M SG2 to send to the VLR. In order for
the MS to verify the authenticity of the VLR later on
in the AKA phase, M SG3 and HM AC3 is prepared
and sent by the VLR.

92Line

Procedure

MS

VLR

HLR

c1
c2
c3
c4
c5
c6
c7
c8
c9
c10
c11

c12

c13
c14

c15
c16
c17
c18
c19
c20

c21

c22
c23
c24
c25
c26

c27
c28
c29
c30

Registration 

and

Distribution of 
Authentication
Information

Authentication

and 

Key Agreement

for

(cid:0)(cid:1) (cid:1) (cid:3)(cid:5)

where

(cid:0) (cid:7) (cid:8)(cid:3)(cid:3) (cid:9)(cid:11)
 (cid:7) (cid:8)(cid:3)(cid:3)

 (cid:6)(cid:7)(cid:0) (cid:7)  (cid:6)(cid:0)(cid:0)(cid:8)  (cid:9)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:8)  (cid:9) (cid:0)(cid:0)(cid:0)(cid:11)(cid:13)
  (cid:18)(cid:21)(cid:0) (cid:7) (cid:1)  (cid:6)(cid:7)(cid:0)

 (cid:6)(cid:7)(cid:0)(cid:1)   (cid:18)(cid:21)(cid:0)

(cid:5)(cid:7)   (cid:18)(cid:21)(cid:0)

(cid:25) (cid:18)(cid:21)(cid:0) (cid:7) (cid:1)  (cid:6)(cid:7)(cid:0)
(cid:25)  (cid:18)(cid:21)(cid:0)
(cid:12)(cid:5)(cid:3)(cid:14)(cid:15) (cid:16)(cid:5) (cid:14)(cid:5)(cid:16)(cid:5) (cid:14) (cid:3)(cid:5)(cid:9)
(cid:20)(cid:5) (cid:5)(cid:22) (cid:9) (cid:17)(cid:18) (cid:20) 
(cid:21)  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
(cid:18) (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
 (cid:6)(cid:7)(cid:2) (cid:7)  (cid:6)(cid:0)(cid:0)(cid:8)  (cid:9)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:8)  (cid:9)

(cid:0)(cid:0)(cid:17)(cid:18) (cid:20)  (cid:0)(cid:0)(cid:18)(cid:0)(cid:0)(cid:21) (cid:0)(cid:0) 

 (cid:6)(cid:7)(cid:3) (cid:7) (cid:17)(cid:18) (cid:20)  (cid:0)(cid:0)(cid:23) (cid:13)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:23)(cid:13) 
  (cid:18)(cid:21)(cid:3) (cid:7) (cid:18)(cid:1)  (cid:6)(cid:7)(cid:3)

 (cid:6)(cid:7)(cid:2)

 (cid:6)(cid:7)(cid:3)(cid:1)   (cid:18)(cid:21)(cid:3)

(cid:18) (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
(cid:25)  (cid:18)(cid:21)(cid:3) (cid:7) (cid:18)(cid:1)  (cid:6)(cid:7)(cid:3)
(cid:5)(cid:7)   (cid:18)(cid:21)(cid:3)
(cid:25)  (cid:18)(cid:21)(cid:3)
(cid:21)  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 

 (cid:6)(cid:7)(cid:1) (cid:7) (cid:8)   (cid:9)(cid:6)

 (cid:6)(cid:7)(cid:1)

(cid:8) (cid:8)   (cid:9)(cid:6) (cid:5)(cid:7) (cid:8)   (cid:0)(cid:9)(cid:6)
 (cid:6)(cid:7)(cid:4) (cid:7) (cid:23)  (cid:13)(cid:10)
(cid:21)(cid:6)(cid:11) (cid:7) (cid:21)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)
(cid:6)(cid:11) (cid:7)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)

 (cid:6)(cid:7)(cid:4)

(cid:23)(cid:23)  (cid:13)(cid:10) (cid:5)(cid:7) (cid:23)  (cid:0)(cid:13)(cid:10)
(cid:21)(cid:6)(cid:11) (cid:7) (cid:21)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)
(cid:6)(cid:11) (cid:7)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)

Figure 3: Enhanced Registration and AKA procedures

• Procedure: Authentication and Key Agreement

This procedure is used by the MS and the VLR to
mutually authenticate each other. Since each authen-
tication uses one chain position, the MS can prove its
identity to the VLR at most I × M times, whereas the
VLR to the MS J × N times. The indices (i, m) and
(j, n), where i ≤ I, m ≤ M , j ≤ J, and n ≤ N , are
independent of each other as each side steps through
its own hash chains at its own pace. Within each set
of hash chains, it can be agreed that the chain with
lower id (i.e., i and j) is used. If one side encounters
problems in authenticating the other side, the veri-
ﬁer should send an error message with the problematic
chain id to the claimant. The claimant then tries to
authenticate itself to the veriﬁer starting from the next
fresh chain. For example, if the problematic chain id
in f series is 8, then the MS should reveal f M−1(b9) to
the VLR to try to correct the authentication problem.

5.3.2 Advantages

The following list summarizes the advantages of our en-

hancements.

• Non-repudiation: For cases such as billing and dispute
resolution between an MS and a VLR, the combination
of HM AC1 in line c2 and f M−m(bi) can serve as a non-
repudiation proof by a VLR as an evidence of m visits
in the ith chain made by an MS, and the combination

of HM AC3 in line c14 and gN−n(aj ) can serve as a
non-repudiation proof by an MS as an evidence of n
visits in the jth chain made by a VLR. Note that due
to the desired property of hash chaining, for each hash
chain, the veriﬁer only needs to keep the most recently
released chain value (i.e., f M−m(bi) kept by a VLR and
gN−n(aj) kept by an MS) as an evidence, (see section
5.2 for explanation.) This is good for mobile handsets
because of their limited space constraint.

• Stronger mutual authentication: To achieve mutual
authentication between an MS and a VLR, two hash
chain sets are established, one for each direction. The
one-way hash chaining algorithm prevents all users, ex-
cept the legitimate one, from computing backward val-
ues using the published one-way value. Additionally,
our method removes the assumption of secure channels
between VLRs as there is no need to transfer leftover
AVs. Therefore, this technique provides stronger mu-
tual authentication than the current 3G protocols.

• Stronger periodical authentication: In UMTS [6], the
periodical authentication is achieved by comparing a
SEQ counter value between an ME and a VLR peri-
odically. The SEQ is susceptible to synchronization
failure. In our enhanced protocol, either a VLR or an
MS can periodically request to authenticate the other
by having the other side prove itself. It is only when
the submitted value satisﬁes the hash chain property,
is the claimant successfully authenticated. This way is

93On the Security of Wireless Network Access with

Enhancements

Lein Harn and Wen-Jung Hsin

University of Missouri - Kansas City

Kansas City, MO 64110

ABSTRACT
The security of the current 3G wireless protocols addresses
the problems faced by the 2G systems, in addition to ful-
ﬁlling the higher 3G security requirements mandated from
operating in IP networks as well as voice networks. However,
the approach adopted by the two most popular 3G mobile
system forerunners, UMTS and cdma2000, leaves many ar-
eas for improvement. In this paper, we improve the security
of the 3G protocols in network access by providing strong
periodically mutual authentication, strong key agreement,
and non-repudiation service in a simple and elegant way.

Categories & Subject Descriptors
K.6.5 [Security and Protection]: Authentication

General Terms
Security

Keywords
Security, 3G Mobile Network Security and Authentication

1. ACRONYMS
2G,3G,4G The Second, Third, Fourth Generation
3GPP
3GPP2
A3
A5
A8

3G Partnership Project
3G Partnership Project 2
An authentication algorithm used in GSM
An encryption algorithm used in GSM
a key generation algorithm used in GSM

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
WiSE’03, September 19, 2003, San Diego, California, USA.
Copyright 2003 ACM 1-58113-769-9/03/0009 ...$5.00.

AES
AK
AKA
AV
CK
CDMA
cdmaOne
cdma2000
COUNT
CS
ESA
ESP
FIPS
GSM
HLR
HMAC
IK
IMT-2000
Key K
MS
NIST
PS
RAND
SEQ
SSD
UMTS
VLR

Advanced Encryption System
Anonymity Key
Authentication and Key Agreement
Authentication Vector
Cipher Key
Code Division Multiple Access
IS-95 based CDMA
IS-2000 based CDMA
Call History Counter used in cdma2000
Circuit Switching
Enhanced Subscriber Authentication
Enhanced Subscriber Privacy
Federal Information Processing Standards
Global System for Mobile communications
Home Location Register
keyed-Hash Message Authentication Code
Integrity Key
International Mobile Telecommunications 2000
A common secret key between MS and HLR
Mobile Station
National Institute of Standards and Technology
Packet Switching
A random number
Sequence Number used in UMTS AKA
Shared Secret Data
Universal Mobile Telecommunications System
Visitor Location Register

2.

INTRODUCTION

In recent years, due to technology advances, we have seen
a phenomenal increase in the number of cellular users. As
the demand increases, so does the importance of security in
the cellular systems. This can be seen from many highly
publicized incidents, e.g., the plain text communication am-
ong allied pilots during Kosovo war as reported by Wash-
ington Post, and the interception of House Speaker Newt
Gingrich’s cellular conference conversation. To provide pro-
tection, many diﬀerent security areas are addressed, e.g.,
network access security provides users with secure access to
the mobile services, network domain security provides secure
exchanges of signaling data in the core network, application
domain security provides users and providers with secure ex-
changes of application data, etc.
[6]. Our emphasis in this
paper is in the area of network access security.

For network access security, 2G mobile systems such as
GSM and cdmaOne were designed to protect against exter-
nal attacks. However, these designs have led to numerous
interception attacks [5, 20, 24, 30]. The 3G wireless pro-
tocols must not only address the problems faced by the 2G
systems but also provide strong security functionality to ful-
ﬁll the 3G cellular requirements as deﬁned in IMT-2000 [7],
especially the required support over IP networks. Unfortu-

88nately, the proposed security protocols for network access
provided by the two most popular 3G cellular system fore-
runners, UMTS and cdma2000 (the descendants of GSM and
cdmaOne, respectively), still leave many areas for improve-
ment.
In this paper, we address some of these areas and
provide protocol enhancements on top of these two systems.
For clarity, here we specify the security standards to which
we will be referring in this paper. The security architecture
standard for UMTS is deﬁned in [6]. For cdma2000, the
latest published documentation on network access security
can be found in [8, 9, 10].

One of the areas for improvement is the way in which
a subscriber authenticates a network. 3G systems provide
mutual authentication between a subscriber and a network,
whereas 2G provides only subscriber authentication. To al-
low network authentication, UMTS uses a sequence number
approach with which a subscriber can verify the freshness of
an authentication request and thus prevent an attacker’s re-
play. Instead of sequence numbers, we propose to use Lam-
port’s one-time password/hash chaining technique [19] in
both directions, to and from an MS, to establish periodi-
cally mutual authentication. Hash chaining provides strong
periodical authentication and is used in many applications
[3, 16, 17, 21]. Thus, by using this technique, our enhance-
ment is eﬃcient, elegant, and simple, and our periodically
mutual authentication is strong.

Additionally, our enhancement can solve a billing dispute
problem between an MS and a VLR. Neither UMTS nor
cdma2000 address the issue of billing disputes, and thus
there is no recourse to settle disputes when they arise. Note
that a true non-repudiation service among HLR, MS, and
VLR can only be achieved via a public-key system using digi-
tal signatures. In this paper, following UMTS and cdma2000,
we adopt the symmetric key system with the assumption
that both MS and VLR must trust HLR. However, un-
like UMTS and cdma2000, our scheme can achieve non-
repudiation between an MS and a VLR. That is, any dis-
pute between an MS and a VLR can be resolved in our
scheme. Speciﬁcally, we use keyed-Hash Message Authenti-
cation Code (HMAC) recently drafted by FIPS [14] on top
of hash chaining to provide a non-repudiation service be-
tween an MS and a VLR to explicitly address the billing
issue without complicating the existing protocols.

Previous work in this area includes a comparative study
between UMTS and cdma2000 for the entire systems, but
with little emphasis in the area of security [2, 13]. Rose
[28] oﬀered a high level general overview of wireless secu-
rity between UMTS and cdma2000. Our detailed compar-
ative study here emphasizes the subscriber authentication
and key agreement procedures, as this becomes the basis for
building our protocol enhancements. Al-Muhtadi et al.
[1]
proposed a lightweight component in mobile devices and a
security server for authentication and call setup for 3G/4G
systems. Their work can beneﬁt from our enhanced pro-
tocol mentioned here to provide strong periodically mutual
authentication and to simplify the implementation.

The remainder of this paper is organized as follows. Sec-
tions 3 and 4 describe detailed AKA procedure in UMTS
and cdma2000, respectively. Section 5 describes our en-
hancements, and hash chaining and HMAC techniques that
we adopt to achieve the improvements. Finally, section 6
provides conclusion and summary.

3. UMTS AUTHENTICATION AND KEY

AGREEMENT

This section describes the registration and AKA proce-
dures in UMTS [6], shown in Figure 1. For ease of reference,
each line in the ﬁgure is provided with a line identiﬁcation
number. UMTS maintains the same challenge and response
method as its 2G predecessor, GSM, to facilitate genera-
tion migration. In particular, during registration, an HLR
prepares and sends a list of authentication vectors (AV) to
a VLR (see lines a2 to a12 in Figure 1.) During AKA, a
VLR uses an AV (lines a13 and a14) to authenticate an MS.
Each AV is used once for each AKA invocation. If a VLR
runs out of AVs, it can request more from the HLR. When
an MS roams out of a VLR, the old VLR should transfer
the leftover AVs to the new VLR. The standard [6] assumes
that the communication links between VLRs are adequately
secure.

The major diﬀerences in registration and AKA proce-
dures between UMTS and GSM are (1) GSM allows only
subscriber authentication, while UMTS provides both sub-
scriber (line a22) and network (line a19) mutual authentica-
tions, and (2) UMTS can protect the integrity of signaling
data (via IKi in line a24), while GSM can not. For the
network authentication, UMTS employs a complicated se-
quence number (SEQ) technique. Speciﬁcally, UMTS achie-
ves these two extra functionalities by adding two extra ﬁelds
in the AV, namely an authentication token (AUTN, line a9)
and an integrity key (IK, line a5) on top of the triplet pro-
vided in GSM. An authentication token allows an MS to au-
thenticate a VLR. The ﬁelds within the token include SEQ,
anonymity key (AK), authentication management ﬁeld (AMF),
and message authentication code (MAC). Each authentica-
tion token is assigned a unique SEQ. When an MS receives
an authentication token, it veriﬁes that the corresponding
SEQ has not been accepted before (line a19), thereby pre-
cluding replay by an attacker. To allow for out-of-order
SEQs due to simultaneous registration in both CS and PS
domains, MS maintains a list of SEQs that it has accepted.
To prevent exposition of MS’s identity and location, key AK
can be used to conceal the SEQ. AMF is an authentication
management ﬁeld which can be used for purposes such as
specifying a particular authentication algorithm used, etc.
MAC is used to ensure the authenticity and integrity of the
authentication token and the random challenge. The IK is
used to protect the integrity of the control data. Readers
are referred to the UMTS Security Architecture [6] for a
detailed description of the AKA procedure.

The generation, allocation, veriﬁcation, and management
of SEQ is a complicated matter, especially with regard to
the protection against an attack to force SEQ wrap around
and the compromise of user identity conﬁdentiality. Further-
more, with the consideration of re-synchronization failure re-
covery, SEQ complicates both protocol and implementation
tremendously.
(In re-synchronization failure recovery, an
HLR and an MS try to re-synchronize SEQ due to synchro-
nization failure in various scenarios such as simultaneous
registration in CS and PS domains, user movement between
VLRs which do not transfer leftover AVs, and super-charged
networks where the mobility of an MS among various VLRs
is very high.) In fact, in the UMTS Security Architecture [6],
a 6-page appendix is necessary to describe the generation,
allocation, veriﬁcation, and management of SEQ.

89Line

Procedure

MS

VLR

HLR

Registration 
and
Distribution of 
Authentication
(cid:0)(cid:1)(cid:2)

Authentication
and 
Key Agreement,

(cid:7)(cid:1) (cid:0)(cid:1) (cid:8)(cid:1)

a1
a2
a3
a4
a5
a6
a7
a8
a9
a10
a11
a12

a13
a14

a15
a16
a17
a18
(cid:27)(cid:14)$
(cid:27)(cid:19)%

(cid:27)(cid:19)(cid:14)

(cid:27)(cid:19)(cid:19)
(cid:27)(cid:19)(cid:24)
(cid:27)(cid:19)(cid:23)

 (cid:3)

(cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15)

(cid:10)	(cid:1) (cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15) (cid:17)(cid:7)(cid:1)(cid:1)

(cid:25)(cid:1) (cid:1)(cid:2) (cid:27) (cid:9)(cid:4) (cid:13)
(cid:15) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
 (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)
(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:8)(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)
 (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
(cid:4)(cid:16) (cid:17)  (cid:18) (cid:3)	  (cid:4)(cid:0)(cid:0)(cid:4) (cid:21) (cid:0)(cid:0) (cid:4)(cid:15)
(cid:4)(cid:5) (cid:18) (cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:8)(cid:9)(cid:10)(cid:3)(cid:0)(cid:0)(cid:15)(cid:0)(cid:0)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) 
"(cid:1) (cid:4)(cid:5)  (cid:27)(cid:1)"  (cid:3)	

 (cid:3)(cid:18) (cid:18) (cid:9)(cid:4) (cid:13)(cid:13)(cid:0)(cid:15)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) (cid:13)(cid:0)(cid:15)(cid:19) (cid:17)(cid:7)(cid:1)(cid:1) (cid:0) (cid:8) (cid:2)(cid:7)(cid:1)  (cid:29)(cid:29)  (cid:27)(cid:8)

 (cid:3)(cid:18)

(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:3)	 (cid:18) (cid:3)	  (cid:4)  (cid:4)
(cid:8) (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
 (cid:4)(cid:15)
(cid:0)(cid:1)(cid:8)#2 #(cid:1)(cid:7)(cid:1) # (cid:3)	 (cid:0)
(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)

(cid:18) (cid:8) (cid:4)(cid:15)

(cid:0)

(cid:9)(cid:10)(cid:3)

(cid:15)(cid:3) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
(cid:3) (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)

(cid:0)

(cid:18) (cid:8)(cid:9)(cid:10)(cid:3)(cid:13)(cid:0)(cid:15)

(cid:9)(cid:10)(cid:3)
(cid:15)(cid:3) (cid:18) (cid:15)(cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)
(cid:3) (cid:18) (cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)

(cid:1) & ’(cid:7)(cid:1) ((cid:1)(cid:1)(cid:27)(cid:8) (cid:27)  (cid:2)(cid:27)(cid:8) !(cid:1)(cid:8))(cid:2)(cid:27)(cid:8) (cid:27)" (cid:27)(cid:27)((cid:1)(cid:1) # (cid:25)*	 (cid:1)	(cid:1)(cid:2)(cid:1) 	 (cid:1) (cid:27)(cid:1) "(cid:1)(cid:2)(cid:8) (cid:1)" (cid:8) (cid:27) -	(cid:27)((cid:1)

(cid:27)(cid:1)"(cid:8)/ (cid:8) 0’(cid:25) (cid:1)(cid:2)	(cid:8)2 (cid:27)(cid:2)(cid:7)(cid:8)(cid:1)(cid:2)	(cid:1) (cid:27)"(cid:27)" (cid:13)-(cid:15)3

Figure 1: Authentication and Key Agreement in UMTS

4. CDMA2000 SUBSCRIBER AUTHENTICA-

TION AND KEY AGREEMENT

Cdma2000 is designed to be backward compatible with
its predecessor cdmOne, therefore it inherits most of the cd-
maOne security features. Speciﬁcally, for cdma2000, Figure
2 depicts the general registration and the subscriber authen-
tication and key agreement procedures in the latest pub-
lished documents on security [8, 9]. These standards show
the same procedures as in cdmaOne.

In particular, during registration (invoked by the SSD up-

date procedure, lines b1 to b12), the HLR selects a RAN DSSD
and calculates a new SSD which can be shared with a VLR
(lines b1 and b2.) The VLR then sends the RAN DSSD to
an MS for it to derive the new SSD (lines b3 and b4.) To
authenticate the VLR, an MS sends a base station challenge
order (line b6) to the VLR. It is only when the VLR passes
the challenge does the MS update to the new SSD (line
b12).

During the subscriber authentication phase (lines b13 to
b21), the MS invokes the global challenge procedure by ﬁrst
calculating a response AU T HR using a globally broadcast
challenge RAN D and SSD A, the ﬁrst portion of SSD. In
line b15, the MS sends RAN DC (the ﬁrst 8 bits of RAN D),
COU N T (Call History counter used for clone prevention by
keeping track the number of calls made by the MS), and
AU T HR to the VLR who will then verify the received val-
ues to authenticate the MS, (in lines b16 to b21). In case
that the MS fails the global challenge, the VLR will invoke
a unique challenge procedure with a unique random num-

ber speciﬁcally generated to challenge the MS (readers are
referred to [8] for the details of the unique challenge proce-
dure). Note that the subscriber authentication here is only
one-way (i.e., the VLR authenticates the MS, but not vice
versa). Only when the MS is successfully authenticated can
the encryption key be generated. In line b22, the encryp-
tion key is calculated based on the RAN D and SSD B, the
second portion of SSD.

The predominant diﬀerence in the network access security
between GSM and cdmaOne, and thus their descendants
UMTS and cdma2000,
is how the authentication data is
prepared. In UMTS, an HLR prepares and sends a list of
challenge and response vectors to the VLR to authenticate
an MS; while in cdma2000, a derived shared secret data
(SSD) from a common secret key K can be shared with a
VLR so that the VLR itself can authenticate an MS locally.
The HLR total control method adopted by UMTS is secure
in that the HLR is the one that an MS trusts, however it is
not convenient for a VLR as the VLR has to rely on the HLR
to generate challenges and responses. On the other hand,
cdma2000’s VLR local method is convenient for a VLR but
not as secure as UMTS, since an HLR does not have the total
control in the communication between a VLR and an MS.
This is most evident when there is a dispute between an MS
and a VLR; an HLR has no easy way to settle the dispute
as it has given the VLR the control. To lesson the degree of
the problem, in cdma2000, an HLR can periodically change
the value of the SSD (using the SSD Update procedure) to
make the sharing with a VLR less problematic.

90Line Procedure

MS

VLR

HLR

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)(cid:14) (cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 

(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 
(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

Fail

Fail Confirmation

Succeed

Success Confirmation

(cid:25)(cid:12)(cid:29)(cid:17)(cid:24) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:0)(cid:1) (cid:3)(cid:10) (cid:0) (cid:0)(cid:1) (cid:3)(cid:2)(cid:11)(cid:11)(cid:3)

(cid:0)(cid:1) (cid:3)(cid:10)(cid:14) (cid:10)(cid:7)  (cid:8)(cid:14) (cid:1)(cid:7) (cid:8)  (cid:0)

(cid:26)$
(cid:26)%
(cid:26)&

(cid:26)’
(cid:26)(
(cid:26))

(cid:26)(cid:3)
(cid:26)*

(cid:26)+

(cid:20)(cid:10)(cid:19)(cid:12)(cid:17)(cid:12)

(cid:17)(cid:24)

(cid:25)(cid:12)(cid:12)(cid:26)	(cid:12) (cid:27)
(cid:28)	(cid:16)(cid:10)(cid:12)(cid:29)(cid:17)(cid:12)
(cid:27)(cid:17)(cid:12)

(cid:31)(cid:31)(cid:25) (cid:11)(cid:24)(cid:17)(cid:10)

(cid:26)$(cid:2)

(cid:26)$$

(cid:26)$%

(cid:26)$&
(cid:26)$’
(cid:26)$(

(cid:26)$)
(cid:26)$(cid:3)
(cid:26)$*
(cid:26)$+

(cid:26)%(cid:2)

(cid:26)%$

(cid:26)%%

# (cid:26)(cid:17) 
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

Subscriber
Authentication

and

Key
Agreement

!(cid:10)(cid:12)(cid:27)" (cid:0)(cid:1) (cid:3)(cid:10)
!(cid:10)(cid:12)(cid:27)" (cid:10)(cid:7)  (cid:8)
(cid:6)(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0)

Fail
Fail

Succeed

Fail

MS is authenticated

(cid:7)(cid:9)(cid:10)
(cid:11)(cid:12)	(cid:10)
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

(cid:10)"
#(cid:10)(cid:10)(cid:17)(cid:12)

(cid:18)(cid:19) (cid:0) (cid:20)(cid:18)(cid:18)(cid:23)(cid:18) (cid:18)(cid:19)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:5)

Note: In this figure, we only show the essential inputs to the CAVE algorithm. The detailed inputs can be found in [8] and [9].

Figure 2: Cdma2000 Subscriber Authentication and Key Agreement in documents C.S0004-A v6.0 [8] and
C.S0005-A v6.0 [9]

To meet the 3G security challenges, cdma2000 will pro-
vide ESA and ESP enhancements [11]. However, the de-
tailed steps in achieving these enhancements are still being
worked out, although 3GPP2 has approved the following:
(1) the adoption of openly reviewed algorithms such as Rijn-
dael Encryption algorithm [9], the AES chosen by NIST, and
(2) the adoption of 3GPP AKA with SHA-1 and Message
Authentication Code as the hash and integrity functions for
AKA operations [10]. SHA-1 is a hash function deﬁned in
FIPS ”Secured Hash Standard” [15]. A message authentica-
tion code is generated by means of a hash function to ensure
the authenticity and integrity of the transmitted messages.
With the adoption of 3GPP AKA, it remains to be seen as
to how cdma2000 handles both authentication styles (i.e.,
UMTS’ HLR total control and cdma2000’s VLR local con-
trol) smoothly. As of the writing of this paper, 3GPP2 has
not published the details of this transaction.

5. ENHANCEMENTS

As can be seen from section 3, the approach adopted by
UMTS to provide 3G AKA complicates the already complex
wireless protocol. Here, we provide an elegant approach to
achieve strong AKA on top of UMTS as well as cdma2000.
In the following, section 5.1 introduces a list of notations
that we use in our enhanced protocol. Section 5.2 describes
HMAC and hash chaining techniques. Section 5.3 describes
our enhanced protocol, the advantages, and the time and
space analysis.

5.1 Notation

• t(x, y): HMAC with key x, and message y
• p(x, y): Cipher key generation function with key x,

and random data y

• q(x, y): Integrity key generation function with key x,

and random data y

• r(x, y): Anonymity key generation function with key

x, and random data y
• AK: Anonymity Key
• RAN DH : A random number selected by an HLR
• CKH : The Cipher Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• IKH: The Integrity Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• CKi,m: The Cipher Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

• IKi,m: The Integrity Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

91• f m(bi): One-way hash function with ith random seed
bi and mth composition, where i ≤ I and m ≤ M , for
use in authenticating an MS

• M : The maximum number of f hash chaining compo-

sition

• I: The maximum number of random seeds for f hash

chaining

• gn(aj): One-way hash function with jth random seed
aj and nth composition, where j ≤ J and n ≤ N , for
use in authenticating a VLR.

• N : The maximum number of g hash chaining compo-

sition

• J: The maximum number of random seeds for g hash

chaining

• ?

=: An equality comparison operator

5.2 Techniques

To enhance the 3G AKA protocol, we adopt two ma-
jor techniques: keyed-Hash Message Authentication Code
(HMAC) and hash chaining.

HMAC is very popular in the Internet community [25],
and has been recently drafted by FIPS [14]. It is used for
message authentication by means of a cryptographic hash
function and a shared secret key. In a public-key system, a
digital signature can be used to replace HMAC. The main
components in HMAC are a hash algorithm and a key, and
the most common form of HMAC is

hash(key, hash(key, message)).

Two of the most popular HMAC’s are HMAC-MD5 [26] and
HMAC-SHA [27].

Lamport’s one-time password/hash-chaining was proposed
in 1981, and has been used in many applications [3, 16, 17].
Let f (x) be a one-way function and

f M (x) = f (f (· ·· (f (x) ··· )))

be the composition of M f s. During registration, the claimant
(i.e., the one wishes to be authenticated) randomly selects an
integer seed b, computes f M (b) and HM AC of f M (b), and
sends f M (b) and the HM AC of f M (b) to the veriﬁer (i.e.,
the one decides whether the claimant is who it is). Once
registered, each hash chain can be used by the claimant
to prove itself to the veriﬁer M times.
In the ﬁrst visit,
the claimant submits f M−1(b) to prove itself. The veriﬁer
checks the equality f (f M−1(b))
?
= f M (b). If passed, the ver-
iﬁer updates f M (b) and stores f M−1(b) for the next visit;
otherwise, the claimant is not authenticated. The claimant
reveals f M−1(b), f M−2(b), · ·· , f (b), and b = f 0(b) in se-
quence to prove itself M times. The one-way hash chain-
ing algorithm prevents all users, except the legitimate one,
from computing backward values using the published one-
way value.

Straightforward implementations of a hash chain such as
storing all chain elements or iteratively hashing from a seed
have O(M ) of combined memory and computational com-
plexity for an M element chain. Recently, Jakobsson [18],
and Coppersmith and Jakobsson [12] proposed a log2(M )
space and access time mechanism, especially desired for low-
cost applications such as mobile handsets, micro-payments,
smart dust, authentications, and signatures (see [18, 12] for
references therein.)

For the purpose of non-repudiation, the combination of
f M−m(b) and the HM AC of f M (b) (that is provided by
the claimant during registration) can be used as a non-
repudiation proof by the veriﬁer as an evidence for all m
visits made by the claimant. Speciﬁcally, for all m visits, the
veriﬁer only needs to store the most recently released f value
(i.e., f M−m(b)), and does not need to keep all other values
that it has received (i.e., f M (b), f M−1(b), ··· , f M−m+1(b))
before the mth visit. The veriﬁer can produce a proof of the
claimant’s jth visit, where 1 ≤ j ≤ m−1, by simply comput-
ing f m−j (f M−m(b)). This desired feature is especially good
for the applications (such as mobile handsets) with limited
storage space.

To prolong the life time of a hash chain, an additional di-
mension can be added to the above scheme as follows. The
claimant (1) randomly selects I seeds, b1, b2,··· , and bI , (2)
computes f M (b1), f M (b2),··· , and f M (bI ), and an HMAC
on the concatenated message f M (b1)||f M (b2)|| ···||f M (bI ),
(3) sends the computed values in (2) to the veriﬁer. Note
that by using the concatenation of I hash chaining values
as one single message, one message authentication code be-
tween an MS and an HLR is all that is needed for estab-
lishing the initial registration (see lines c1 and c2 in Figure
3).

A general discussion on one-way functions and one-way
hash functions can be found in [29] and the implementation
of these functions can be found in [4].
5.3 Protocol Enhancement

Figure 3 provides our registration and AKA enhancements
on top of the two 3G forerunners, UMTS and cdma2000.
For clarity, a set of protocol steps composed to achieve a
unique functionality are grouped into a procedure. These
procedures mirror those in Figures 1 and 2. The signiﬁcance
of this grouping indicates that our procedures can be used to
replace with ease the corresponding UMTS and cdma2000
procedures.

5.3.1 Enhancement Details

In the following, we specify the assumption and explain

each procedure and the corresponding steps.

• Assumptions: Just like in UMTS Security Architec-
ture [6], we also assume that (1) the communication
link between an HLR and a VLR is adequately secure,
and (2) an MS shares a common secret key K with its
HLR.

• Procedure: Registration and Distribution of Authen-

tication Information

This procedure is used when an MS ﬁrst roams into
a new visitor domain. The MS must send its HLR
a set of data which is subsequently used by the VLR.
Speciﬁcally, both M SG1 and HM AC1 (in lines c1 and
c2) are sent from the MS via the VLR to the HLR.
After the HLR veriﬁes the authenticity of M SG1, it
then prepares M SG2 to send to the VLR. In order for
the MS to verify the authenticity of the VLR later on
in the AKA phase, M SG3 and HM AC3 is prepared
and sent by the VLR.

92Line

Procedure

MS

VLR

HLR

c1
c2
c3
c4
c5
c6
c7
c8
c9
c10
c11

c12

c13
c14

c15
c16
c17
c18
c19
c20

c21

c22
c23
c24
c25
c26

c27
c28
c29
c30

Registration 

and

Distribution of 
Authentication
Information

Authentication

and 

Key Agreement

for

(cid:0)(cid:1) (cid:1) (cid:3)(cid:5)

where

(cid:0) (cid:7) (cid:8)(cid:3)(cid:3) (cid:9)(cid:11)
 (cid:7) (cid:8)(cid:3)(cid:3)

 (cid:6)(cid:7)(cid:0) (cid:7)  (cid:6)(cid:0)(cid:0)(cid:8)  (cid:9)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:8)  (cid:9) (cid:0)(cid:0)(cid:0)(cid:11)(cid:13)
  (cid:18)(cid:21)(cid:0) (cid:7) (cid:1)  (cid:6)(cid:7)(cid:0)

 (cid:6)(cid:7)(cid:0)(cid:1)   (cid:18)(cid:21)(cid:0)

(cid:5)(cid:7)   (cid:18)(cid:21)(cid:0)

(cid:25) (cid:18)(cid:21)(cid:0) (cid:7) (cid:1)  (cid:6)(cid:7)(cid:0)
(cid:25)  (cid:18)(cid:21)(cid:0)
(cid:12)(cid:5)(cid:3)(cid:14)(cid:15) (cid:16)(cid:5) (cid:14)(cid:5)(cid:16)(cid:5) (cid:14) (cid:3)(cid:5)(cid:9)
(cid:20)(cid:5) (cid:5)(cid:22) (cid:9) (cid:17)(cid:18) (cid:20) 
(cid:21)  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
(cid:18) (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
 (cid:6)(cid:7)(cid:2) (cid:7)  (cid:6)(cid:0)(cid:0)(cid:8)  (cid:9)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:8)  (cid:9)

(cid:0)(cid:0)(cid:17)(cid:18) (cid:20)  (cid:0)(cid:0)(cid:18)(cid:0)(cid:0)(cid:21) (cid:0)(cid:0) 

 (cid:6)(cid:7)(cid:3) (cid:7) (cid:17)(cid:18) (cid:20)  (cid:0)(cid:0)(cid:23) (cid:13)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:23)(cid:13) 
  (cid:18)(cid:21)(cid:3) (cid:7) (cid:18)(cid:1)  (cid:6)(cid:7)(cid:3)

 (cid:6)(cid:7)(cid:2)

 (cid:6)(cid:7)(cid:3)(cid:1)   (cid:18)(cid:21)(cid:3)

(cid:18) (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
(cid:25)  (cid:18)(cid:21)(cid:3) (cid:7) (cid:18)(cid:1)  (cid:6)(cid:7)(cid:3)
(cid:5)(cid:7)   (cid:18)(cid:21)(cid:3)
(cid:25)  (cid:18)(cid:21)(cid:3)
(cid:21)  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 

 (cid:6)(cid:7)(cid:1) (cid:7) (cid:8)   (cid:9)(cid:6)

 (cid:6)(cid:7)(cid:1)

(cid:8) (cid:8)   (cid:9)(cid:6) (cid:5)(cid:7) (cid:8)   (cid:0)(cid:9)(cid:6)
 (cid:6)(cid:7)(cid:4) (cid:7) (cid:23)  (cid:13)(cid:10)
(cid:21)(cid:6)(cid:11) (cid:7) (cid:21)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)
(cid:6)(cid:11) (cid:7)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)

 (cid:6)(cid:7)(cid:4)

(cid:23)(cid:23)  (cid:13)(cid:10) (cid:5)(cid:7) (cid:23)  (cid:0)(cid:13)(cid:10)
(cid:21)(cid:6)(cid:11) (cid:7) (cid:21)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)
(cid:6)(cid:11) (cid:7)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)

Figure 3: Enhanced Registration and AKA procedures

• Procedure: Authentication and Key Agreement

This procedure is used by the MS and the VLR to
mutually authenticate each other. Since each authen-
tication uses one chain position, the MS can prove its
identity to the VLR at most I × M times, whereas the
VLR to the MS J × N times. The indices (i, m) and
(j, n), where i ≤ I, m ≤ M , j ≤ J, and n ≤ N , are
independent of each other as each side steps through
its own hash chains at its own pace. Within each set
of hash chains, it can be agreed that the chain with
lower id (i.e., i and j) is used. If one side encounters
problems in authenticating the other side, the veri-
ﬁer should send an error message with the problematic
chain id to the claimant. The claimant then tries to
authenticate itself to the veriﬁer starting from the next
fresh chain. For example, if the problematic chain id
in f series is 8, then the MS should reveal f M−1(b9) to
the VLR to try to correct the authentication problem.

5.3.2 Advantages

The following list summarizes the advantages of our en-

hancements.

• Non-repudiation: For cases such as billing and dispute
resolution between an MS and a VLR, the combination
of HM AC1 in line c2 and f M−m(bi) can serve as a non-
repudiation proof by a VLR as an evidence of m visits
in the ith chain made by an MS, and the combination

of HM AC3 in line c14 and gN−n(aj ) can serve as a
non-repudiation proof by an MS as an evidence of n
visits in the jth chain made by a VLR. Note that due
to the desired property of hash chaining, for each hash
chain, the veriﬁer only needs to keep the most recently
released chain value (i.e., f M−m(bi) kept by a VLR and
gN−n(aj) kept by an MS) as an evidence, (see section
5.2 for explanation.) This is good for mobile handsets
because of their limited space constraint.

• Stronger mutual authentication: To achieve mutual
authentication between an MS and a VLR, two hash
chain sets are established, one for each direction. The
one-way hash chaining algorithm prevents all users, ex-
cept the legitimate one, from computing backward val-
ues using the published one-way value. Additionally,
our method removes the assumption of secure channels
between VLRs as there is no need to transfer leftover
AVs. Therefore, this technique provides stronger mu-
tual authentication than the current 3G protocols.

• Stronger periodical authentication: In UMTS [6], the
periodical authentication is achieved by comparing a
SEQ counter value between an ME and a VLR peri-
odically. The SEQ is susceptible to synchronization
failure. In our enhanced protocol, either a VLR or an
MS can periodically request to authenticate the other
by having the other side prove itself. It is only when
the submitted value satisﬁes the hash chain property,
is the claimant successfully authenticated. This way is

93stronger than simply comparing the counter value.

• Stronger key agreement to protect against compro-
mised data: The composition of session keys CKi,m
and IKi,m for (i, m)th session are based on input val-
ues from all three entities involved, i.e, MS, VLR, and
HLR. Therefore, if any of these input values is com-
promised by an attacker, the session can not proceed.
• Mutual authentication with no need for synchroniza-
tion: Since there are two hash chain sets, one for each
direction, and each side authenticates the other at its
own pace, there is no need to synchronize these two
chain sets.

• Authentication ﬂexibility: Because of the feature of
the mutual authentication with no need for synchro-
nization, if it is necessary to provide only one-way au-
thentication to function like a 2G system, one can sim-
ply omit the undesired set of chains.

• Simplicity and Elegance: Our enhancements do not
use SEQ (sequence number) as in UMTS, or COUNT
(call history counter) in cdma2000. As brieﬂy men-
tioned in section 3, the management and record keep-
ing of SEQ complicates both protocol and implemen-
tation tremendously. The management of a hash chain
is simple and elegant compared to that of SEQ.

• Convenience and Security: By using a VLR’s own
hash chaining set, the VLR has the convenience of the
local control in authenticating an MS. Yet an HLR
still has the total control in security by means of the
HLR-generated master keys CKH and IKH and non-
repudiation services.

• Ease of handoﬀ between VLRs: The roaming of an
MS among VLRs is a case of macro mobility. For the
roaming among base stations within the same VLR
domain, known as micro mobility, methods such as
Proactive Caching [22] can be used to reduce the con-
nection delay. (We are currently working on extend-
ing the hash chaining technique to provide proactive
caching for handoﬀ in micro mobility.)
In UMTS,
when an MS roams out of a VLR domain, the old VLR
must transfer the leftover authentication vectors to the
new VLR. In our scheme, each MS and VLR pair has
two unique sets of hash chains, one for each direction.
That is, when an MS roams out of a VLR domain,
the MS will establish two new sets of hash chains with
a new VLR. The MS and the old VLR can still keep
their old authentication states so that future connec-
tions can resume from the point where they leave each
other. Thus, our scheme does not have leftover vector
transferring problem as in UMTS. This feature is par-
ticularly attractive for a super-charged network where
an MS moves around various VLRs frequently, or the
cell sizes are small.

For an MS who visits a VLR infrequently, an imple-
mentation of our enhancement can setup a time limit
so that an established chain can be discarded due to a
prolonged inactivity.

• Ease of re-synchronization: For any connection, if there
is an authentication failure, the next fresh hash chain
is used, thereby making re-synchronization between an
MS and a VLR a trivial task.

6. CONCLUSION AND SUMMARY

Our main contributions in this paper are the enhance-
ments on the authentication and key agreement protocol in
the 3G network access security. To understand the basis of
our enhancements, we provide an evolutionary and compar-
ative study of this protocol in two most popular 3G cellular
systems, UMTS and cdma2000.

The approaches adopted by the two 3G front runners aim
to solve the 2G security problems and satisfy the higher 3G
security requirements. Speciﬁcally, UMTS uses a sequence
number approach to provide network authentication, a fea-
ture not in 2G. Cdma2000 has approved the adoption of the
same technique. The sequence number record keeping and
management complicate the already complex 3G implemen-
tation. In our study, we recommend to use a combination
of hash chaining and keyed-Hash Message Authentication
Code techniques instead. This combined approach not only
simpliﬁes both protocol and implementation, but also pro-
vides strong periodically mutual authentication, strong key
agreement, and non-repudiation services in an elegant way.
Future work will provide a performance analysis of our

enhancement.

Acknowledgement
We wish to thank Dr. Lily Lidong Chen at Motorola, Inc.
and Dr. John Cigas at Rockhurst University for their con-
structive comments in the initial draft of this paper.

7. REFERENCES
[1] Al-Muhtadi, J., Mickunas, D., and Campbell, R. ”A
Lightweight Reconﬁgurable Security Mechanism for
3G/4G Mobile Devices”. IEEE Communications
Magazine. vol 40. no. 10. April 2002.

[2] Almaimani, M., Korsuwana, P., Twine, M., and

Mendelsohn, J. ”IMT-2000: A Comparative Analysis
of cdma2000 and UTRA”.

[3] Anderson, R., Manifavas, C., and Southerland, C.,
”NetCard - A Practical Electronic Cash System”.
Proc. International Workshop on security Protocols.
Cambridge, UK. pp. 49-57. April 10-12, 1996.

[4] Asokan, N., Tsudik, G., and Waidner, M.

”Server-supported signature”. Proc. 4th European
Symp. on Research in Computer Security (Lecture
Notes in Computer Science). vol 1146. pp. 131-143.
1996.

[5] 3GPP TS 21.133. ”3GPP: Technical Speciﬁcation
Group services and System Aspects; 3G Security;
Security Threats and Requirements”.

[6] 3GPP TS 33.102. ”3GPP: Technical Speciﬁcation
Group services and System Aspects; 3G Security;
Security Architecture”.

[7] 3GPP TS 33.120. ”3GPP: Technical Speciﬁcation
Group services and System Aspects; 3G Security;
Security Principles and Objectives”.

[8] 3GPP2 C.S0004-C v1.0. ”Signaling Link Access

Control (LAC) Standard for cdma2000 Spread

94On the Security of Wireless Network Access with

Enhancements

Lein Harn and Wen-Jung Hsin

University of Missouri - Kansas City

Kansas City, MO 64110

ABSTRACT
The security of the current 3G wireless protocols addresses
the problems faced by the 2G systems, in addition to ful-
ﬁlling the higher 3G security requirements mandated from
operating in IP networks as well as voice networks. However,
the approach adopted by the two most popular 3G mobile
system forerunners, UMTS and cdma2000, leaves many ar-
eas for improvement. In this paper, we improve the security
of the 3G protocols in network access by providing strong
periodically mutual authentication, strong key agreement,
and non-repudiation service in a simple and elegant way.

Categories & Subject Descriptors
K.6.5 [Security and Protection]: Authentication

General Terms
Security

Keywords
Security, 3G Mobile Network Security and Authentication

1. ACRONYMS
2G,3G,4G The Second, Third, Fourth Generation
3GPP
3GPP2
A3
A5
A8

3G Partnership Project
3G Partnership Project 2
An authentication algorithm used in GSM
An encryption algorithm used in GSM
a key generation algorithm used in GSM

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
WiSE’03, September 19, 2003, San Diego, California, USA.
Copyright 2003 ACM 1-58113-769-9/03/0009 ...$5.00.

AES
AK
AKA
AV
CK
CDMA
cdmaOne
cdma2000
COUNT
CS
ESA
ESP
FIPS
GSM
HLR
HMAC
IK
IMT-2000
Key K
MS
NIST
PS
RAND
SEQ
SSD
UMTS
VLR

Advanced Encryption System
Anonymity Key
Authentication and Key Agreement
Authentication Vector
Cipher Key
Code Division Multiple Access
IS-95 based CDMA
IS-2000 based CDMA
Call History Counter used in cdma2000
Circuit Switching
Enhanced Subscriber Authentication
Enhanced Subscriber Privacy
Federal Information Processing Standards
Global System for Mobile communications
Home Location Register
keyed-Hash Message Authentication Code
Integrity Key
International Mobile Telecommunications 2000
A common secret key between MS and HLR
Mobile Station
National Institute of Standards and Technology
Packet Switching
A random number
Sequence Number used in UMTS AKA
Shared Secret Data
Universal Mobile Telecommunications System
Visitor Location Register

2.

INTRODUCTION

In recent years, due to technology advances, we have seen
a phenomenal increase in the number of cellular users. As
the demand increases, so does the importance of security in
the cellular systems. This can be seen from many highly
publicized incidents, e.g., the plain text communication am-
ong allied pilots during Kosovo war as reported by Wash-
ington Post, and the interception of House Speaker Newt
Gingrich’s cellular conference conversation. To provide pro-
tection, many diﬀerent security areas are addressed, e.g.,
network access security provides users with secure access to
the mobile services, network domain security provides secure
exchanges of signaling data in the core network, application
domain security provides users and providers with secure ex-
changes of application data, etc.
[6]. Our emphasis in this
paper is in the area of network access security.

For network access security, 2G mobile systems such as
GSM and cdmaOne were designed to protect against exter-
nal attacks. However, these designs have led to numerous
interception attacks [5, 20, 24, 30]. The 3G wireless pro-
tocols must not only address the problems faced by the 2G
systems but also provide strong security functionality to ful-
ﬁll the 3G cellular requirements as deﬁned in IMT-2000 [7],
especially the required support over IP networks. Unfortu-

88nately, the proposed security protocols for network access
provided by the two most popular 3G cellular system fore-
runners, UMTS and cdma2000 (the descendants of GSM and
cdmaOne, respectively), still leave many areas for improve-
ment.
In this paper, we address some of these areas and
provide protocol enhancements on top of these two systems.
For clarity, here we specify the security standards to which
we will be referring in this paper. The security architecture
standard for UMTS is deﬁned in [6]. For cdma2000, the
latest published documentation on network access security
can be found in [8, 9, 10].

One of the areas for improvement is the way in which
a subscriber authenticates a network. 3G systems provide
mutual authentication between a subscriber and a network,
whereas 2G provides only subscriber authentication. To al-
low network authentication, UMTS uses a sequence number
approach with which a subscriber can verify the freshness of
an authentication request and thus prevent an attacker’s re-
play. Instead of sequence numbers, we propose to use Lam-
port’s one-time password/hash chaining technique [19] in
both directions, to and from an MS, to establish periodi-
cally mutual authentication. Hash chaining provides strong
periodical authentication and is used in many applications
[3, 16, 17, 21]. Thus, by using this technique, our enhance-
ment is eﬃcient, elegant, and simple, and our periodically
mutual authentication is strong.

Additionally, our enhancement can solve a billing dispute
problem between an MS and a VLR. Neither UMTS nor
cdma2000 address the issue of billing disputes, and thus
there is no recourse to settle disputes when they arise. Note
that a true non-repudiation service among HLR, MS, and
VLR can only be achieved via a public-key system using digi-
tal signatures. In this paper, following UMTS and cdma2000,
we adopt the symmetric key system with the assumption
that both MS and VLR must trust HLR. However, un-
like UMTS and cdma2000, our scheme can achieve non-
repudiation between an MS and a VLR. That is, any dis-
pute between an MS and a VLR can be resolved in our
scheme. Speciﬁcally, we use keyed-Hash Message Authenti-
cation Code (HMAC) recently drafted by FIPS [14] on top
of hash chaining to provide a non-repudiation service be-
tween an MS and a VLR to explicitly address the billing
issue without complicating the existing protocols.

Previous work in this area includes a comparative study
between UMTS and cdma2000 for the entire systems, but
with little emphasis in the area of security [2, 13]. Rose
[28] oﬀered a high level general overview of wireless secu-
rity between UMTS and cdma2000. Our detailed compar-
ative study here emphasizes the subscriber authentication
and key agreement procedures, as this becomes the basis for
building our protocol enhancements. Al-Muhtadi et al.
[1]
proposed a lightweight component in mobile devices and a
security server for authentication and call setup for 3G/4G
systems. Their work can beneﬁt from our enhanced pro-
tocol mentioned here to provide strong periodically mutual
authentication and to simplify the implementation.

The remainder of this paper is organized as follows. Sec-
tions 3 and 4 describe detailed AKA procedure in UMTS
and cdma2000, respectively. Section 5 describes our en-
hancements, and hash chaining and HMAC techniques that
we adopt to achieve the improvements. Finally, section 6
provides conclusion and summary.

3. UMTS AUTHENTICATION AND KEY

AGREEMENT

This section describes the registration and AKA proce-
dures in UMTS [6], shown in Figure 1. For ease of reference,
each line in the ﬁgure is provided with a line identiﬁcation
number. UMTS maintains the same challenge and response
method as its 2G predecessor, GSM, to facilitate genera-
tion migration. In particular, during registration, an HLR
prepares and sends a list of authentication vectors (AV) to
a VLR (see lines a2 to a12 in Figure 1.) During AKA, a
VLR uses an AV (lines a13 and a14) to authenticate an MS.
Each AV is used once for each AKA invocation. If a VLR
runs out of AVs, it can request more from the HLR. When
an MS roams out of a VLR, the old VLR should transfer
the leftover AVs to the new VLR. The standard [6] assumes
that the communication links between VLRs are adequately
secure.

The major diﬀerences in registration and AKA proce-
dures between UMTS and GSM are (1) GSM allows only
subscriber authentication, while UMTS provides both sub-
scriber (line a22) and network (line a19) mutual authentica-
tions, and (2) UMTS can protect the integrity of signaling
data (via IKi in line a24), while GSM can not. For the
network authentication, UMTS employs a complicated se-
quence number (SEQ) technique. Speciﬁcally, UMTS achie-
ves these two extra functionalities by adding two extra ﬁelds
in the AV, namely an authentication token (AUTN, line a9)
and an integrity key (IK, line a5) on top of the triplet pro-
vided in GSM. An authentication token allows an MS to au-
thenticate a VLR. The ﬁelds within the token include SEQ,
anonymity key (AK), authentication management ﬁeld (AMF),
and message authentication code (MAC). Each authentica-
tion token is assigned a unique SEQ. When an MS receives
an authentication token, it veriﬁes that the corresponding
SEQ has not been accepted before (line a19), thereby pre-
cluding replay by an attacker. To allow for out-of-order
SEQs due to simultaneous registration in both CS and PS
domains, MS maintains a list of SEQs that it has accepted.
To prevent exposition of MS’s identity and location, key AK
can be used to conceal the SEQ. AMF is an authentication
management ﬁeld which can be used for purposes such as
specifying a particular authentication algorithm used, etc.
MAC is used to ensure the authenticity and integrity of the
authentication token and the random challenge. The IK is
used to protect the integrity of the control data. Readers
are referred to the UMTS Security Architecture [6] for a
detailed description of the AKA procedure.

The generation, allocation, veriﬁcation, and management
of SEQ is a complicated matter, especially with regard to
the protection against an attack to force SEQ wrap around
and the compromise of user identity conﬁdentiality. Further-
more, with the consideration of re-synchronization failure re-
covery, SEQ complicates both protocol and implementation
tremendously.
(In re-synchronization failure recovery, an
HLR and an MS try to re-synchronize SEQ due to synchro-
nization failure in various scenarios such as simultaneous
registration in CS and PS domains, user movement between
VLRs which do not transfer leftover AVs, and super-charged
networks where the mobility of an MS among various VLRs
is very high.) In fact, in the UMTS Security Architecture [6],
a 6-page appendix is necessary to describe the generation,
allocation, veriﬁcation, and management of SEQ.

89Line

Procedure

MS

VLR

HLR

Registration 
and
Distribution of 
Authentication
(cid:0)(cid:1)(cid:2)

Authentication
and 
Key Agreement,

(cid:7)(cid:1) (cid:0)(cid:1) (cid:8)(cid:1)

a1
a2
a3
a4
a5
a6
a7
a8
a9
a10
a11
a12

a13
a14

a15
a16
a17
a18
(cid:27)(cid:14)$
(cid:27)(cid:19)%

(cid:27)(cid:19)(cid:14)

(cid:27)(cid:19)(cid:19)
(cid:27)(cid:19)(cid:24)
(cid:27)(cid:19)(cid:23)

 (cid:3)

(cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15)

(cid:10)	(cid:1) (cid:4)(cid:5) (cid:13)(cid:14)(cid:6)(cid:6)(cid:15) (cid:17)(cid:7)(cid:1)(cid:1)

(cid:25)(cid:1) (cid:1)(cid:2) (cid:27) (cid:9)(cid:4) (cid:13)
(cid:15) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
 (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)
(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:8)(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)
 (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
(cid:4)(cid:16) (cid:17)  (cid:18) (cid:3)	  (cid:4)(cid:0)(cid:0)(cid:4) (cid:21) (cid:0)(cid:0) (cid:4)(cid:15)
(cid:4)(cid:5) (cid:18) (cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:8)(cid:9)(cid:10)(cid:3)(cid:0)(cid:0)(cid:15)(cid:0)(cid:0)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) 
"(cid:1) (cid:4)(cid:5)  (cid:27)(cid:1)"  (cid:3)	

 (cid:3)(cid:18) (cid:18) (cid:9)(cid:4) (cid:13)(cid:13)(cid:0)(cid:15)(cid:0)(cid:0)(cid:4)(cid:16) (cid:17) (cid:13)(cid:0)(cid:15)(cid:19) (cid:17)(cid:7)(cid:1)(cid:1) (cid:0) (cid:8) (cid:2)(cid:7)(cid:1)  (cid:29)(cid:29)  (cid:27)(cid:8)

 (cid:3)(cid:18)

(cid:4) (cid:18) (cid:11) (cid:22)(cid:9)(cid:4) (cid:13)
(cid:3)	 (cid:18) (cid:3)	  (cid:4)  (cid:4)
(cid:8) (cid:4)(cid:15) (cid:18) (cid:11) (cid:14)(cid:3)	(cid:0)(cid:0)(cid:9)(cid:4) (cid:13)(cid:0)(cid:0)(cid:4) (cid:21) 
 (cid:4)(cid:15)
(cid:0)(cid:1)(cid:8)#2 #(cid:1)(cid:7)(cid:1) # (cid:3)	 (cid:0)
(cid:9)(cid:10)(cid:3) (cid:18) (cid:11) (cid:19)(cid:9)(cid:4) (cid:13)

(cid:18) (cid:8) (cid:4)(cid:15)

(cid:0)

(cid:9)(cid:10)(cid:3)

(cid:15)(cid:3) (cid:18) (cid:11) (cid:24)(cid:9)(cid:4) (cid:13)
(cid:3) (cid:18) (cid:11) (cid:23)(cid:9)(cid:4) (cid:13)

(cid:0)

(cid:18) (cid:8)(cid:9)(cid:10)(cid:3)(cid:13)(cid:0)(cid:15)

(cid:9)(cid:10)(cid:3)
(cid:15)(cid:3) (cid:18) (cid:15)(cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)
(cid:3) (cid:18) (cid:13)(cid:0)(cid:15)(cid:19) (cid:1)(cid:8)(cid:1)!(cid:1)" # (cid:4)(cid:5) (cid:13)(cid:0)(cid:15)

(cid:1) & ’(cid:7)(cid:1) ((cid:1)(cid:1)(cid:27)(cid:8) (cid:27)  (cid:2)(cid:27)(cid:8) !(cid:1)(cid:8))(cid:2)(cid:27)(cid:8) (cid:27)" (cid:27)(cid:27)((cid:1)(cid:1) # (cid:25)*	 (cid:1)	(cid:1)(cid:2)(cid:1) 	 (cid:1) (cid:27)(cid:1) "(cid:1)(cid:2)(cid:8) (cid:1)" (cid:8) (cid:27) -	(cid:27)((cid:1)

(cid:27)(cid:1)"(cid:8)/ (cid:8) 0’(cid:25) (cid:1)(cid:2)	(cid:8)2 (cid:27)(cid:2)(cid:7)(cid:8)(cid:1)(cid:2)	(cid:1) (cid:27)"(cid:27)" (cid:13)-(cid:15)3

Figure 1: Authentication and Key Agreement in UMTS

4. CDMA2000 SUBSCRIBER AUTHENTICA-

TION AND KEY AGREEMENT

Cdma2000 is designed to be backward compatible with
its predecessor cdmOne, therefore it inherits most of the cd-
maOne security features. Speciﬁcally, for cdma2000, Figure
2 depicts the general registration and the subscriber authen-
tication and key agreement procedures in the latest pub-
lished documents on security [8, 9]. These standards show
the same procedures as in cdmaOne.

In particular, during registration (invoked by the SSD up-

date procedure, lines b1 to b12), the HLR selects a RAN DSSD
and calculates a new SSD which can be shared with a VLR
(lines b1 and b2.) The VLR then sends the RAN DSSD to
an MS for it to derive the new SSD (lines b3 and b4.) To
authenticate the VLR, an MS sends a base station challenge
order (line b6) to the VLR. It is only when the VLR passes
the challenge does the MS update to the new SSD (line
b12).

During the subscriber authentication phase (lines b13 to
b21), the MS invokes the global challenge procedure by ﬁrst
calculating a response AU T HR using a globally broadcast
challenge RAN D and SSD A, the ﬁrst portion of SSD. In
line b15, the MS sends RAN DC (the ﬁrst 8 bits of RAN D),
COU N T (Call History counter used for clone prevention by
keeping track the number of calls made by the MS), and
AU T HR to the VLR who will then verify the received val-
ues to authenticate the MS, (in lines b16 to b21). In case
that the MS fails the global challenge, the VLR will invoke
a unique challenge procedure with a unique random num-

ber speciﬁcally generated to challenge the MS (readers are
referred to [8] for the details of the unique challenge proce-
dure). Note that the subscriber authentication here is only
one-way (i.e., the VLR authenticates the MS, but not vice
versa). Only when the MS is successfully authenticated can
the encryption key be generated. In line b22, the encryp-
tion key is calculated based on the RAN D and SSD B, the
second portion of SSD.

The predominant diﬀerence in the network access security
between GSM and cdmaOne, and thus their descendants
UMTS and cdma2000,
is how the authentication data is
prepared. In UMTS, an HLR prepares and sends a list of
challenge and response vectors to the VLR to authenticate
an MS; while in cdma2000, a derived shared secret data
(SSD) from a common secret key K can be shared with a
VLR so that the VLR itself can authenticate an MS locally.
The HLR total control method adopted by UMTS is secure
in that the HLR is the one that an MS trusts, however it is
not convenient for a VLR as the VLR has to rely on the HLR
to generate challenges and responses. On the other hand,
cdma2000’s VLR local method is convenient for a VLR but
not as secure as UMTS, since an HLR does not have the total
control in the communication between a VLR and an MS.
This is most evident when there is a dispute between an MS
and a VLR; an HLR has no easy way to settle the dispute
as it has given the VLR the control. To lesson the degree of
the problem, in cdma2000, an HLR can periodically change
the value of the SSD (using the SSD Update procedure) to
make the sharing with a VLR less problematic.

90Line Procedure

MS

VLR

HLR

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)(cid:14) (cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 

(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)

(cid:4)(cid:4)(cid:3)  (cid:13)(cid:15) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:4)(cid:4)(cid:3)(cid:14) 
(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:5)(cid:4)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)  (cid:13)(cid:15) 

(cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

(cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:5)(cid:4)

Fail

Fail Confirmation

Succeed

Success Confirmation

(cid:25)(cid:12)(cid:29)(cid:17)(cid:24) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:4)(cid:4)(cid:3) (cid:0) (cid:4)(cid:4)(cid:3)  (cid:13)(cid:15)

(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:0)(cid:1) (cid:3)(cid:10) (cid:0) (cid:0)(cid:1) (cid:3)(cid:2)(cid:11)(cid:11)(cid:3)

(cid:0)(cid:1) (cid:3)(cid:10)(cid:14) (cid:10)(cid:7)  (cid:8)(cid:14) (cid:1)(cid:7) (cid:8)  (cid:0)

(cid:26)$
(cid:26)%
(cid:26)&

(cid:26)’
(cid:26)(
(cid:26))

(cid:26)(cid:3)
(cid:26)*

(cid:26)+

(cid:20)(cid:10)(cid:19)(cid:12)(cid:17)(cid:12)

(cid:17)(cid:24)

(cid:25)(cid:12)(cid:12)(cid:26)	(cid:12) (cid:27)
(cid:28)	(cid:16)(cid:10)(cid:12)(cid:29)(cid:17)(cid:12)
(cid:27)(cid:17)(cid:12)

(cid:31)(cid:31)(cid:25) (cid:11)(cid:24)(cid:17)(cid:10)

(cid:26)$(cid:2)

(cid:26)$$

(cid:26)$%

(cid:26)$&
(cid:26)$’
(cid:26)$(

(cid:26)$)
(cid:26)$(cid:3)
(cid:26)$*
(cid:26)$+

(cid:26)%(cid:2)

(cid:26)%$

(cid:26)%%

# (cid:26)(cid:17) 
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

Subscriber
Authentication

and

Key
Agreement

!(cid:10)(cid:12)(cid:27)" (cid:0)(cid:1) (cid:3)(cid:10)
!(cid:10)(cid:12)(cid:27)" (cid:10)(cid:7)  (cid:8)
(cid:6)(cid:1)(cid:7) (cid:8)  (cid:0) (cid:0) (cid:10)(cid:1)(cid:12) (cid:13)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:1)
(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0) (cid:6)(cid:1)(cid:7) (cid:8)  (cid:0)

(cid:0)

Fail
Fail

Succeed

Fail

MS is authenticated

(cid:7)(cid:9)(cid:10)
(cid:11)(cid:12)	(cid:10)
(cid:15)(cid:16)(cid:17)  (cid:10)(cid:19)(cid:10)

(cid:10)"
#(cid:10)(cid:10)(cid:17)(cid:12)

(cid:18)(cid:19) (cid:0) (cid:20)(cid:18)(cid:18)(cid:23)(cid:18) (cid:18)(cid:19)(cid:0)(cid:1) (cid:3)(cid:14) (cid:4)(cid:4)(cid:3) (cid:5)

Note: In this figure, we only show the essential inputs to the CAVE algorithm. The detailed inputs can be found in [8] and [9].

Figure 2: Cdma2000 Subscriber Authentication and Key Agreement in documents C.S0004-A v6.0 [8] and
C.S0005-A v6.0 [9]

To meet the 3G security challenges, cdma2000 will pro-
vide ESA and ESP enhancements [11]. However, the de-
tailed steps in achieving these enhancements are still being
worked out, although 3GPP2 has approved the following:
(1) the adoption of openly reviewed algorithms such as Rijn-
dael Encryption algorithm [9], the AES chosen by NIST, and
(2) the adoption of 3GPP AKA with SHA-1 and Message
Authentication Code as the hash and integrity functions for
AKA operations [10]. SHA-1 is a hash function deﬁned in
FIPS ”Secured Hash Standard” [15]. A message authentica-
tion code is generated by means of a hash function to ensure
the authenticity and integrity of the transmitted messages.
With the adoption of 3GPP AKA, it remains to be seen as
to how cdma2000 handles both authentication styles (i.e.,
UMTS’ HLR total control and cdma2000’s VLR local con-
trol) smoothly. As of the writing of this paper, 3GPP2 has
not published the details of this transaction.

5. ENHANCEMENTS

As can be seen from section 3, the approach adopted by
UMTS to provide 3G AKA complicates the already complex
wireless protocol. Here, we provide an elegant approach to
achieve strong AKA on top of UMTS as well as cdma2000.
In the following, section 5.1 introduces a list of notations
that we use in our enhanced protocol. Section 5.2 describes
HMAC and hash chaining techniques. Section 5.3 describes
our enhanced protocol, the advantages, and the time and
space analysis.

5.1 Notation

• t(x, y): HMAC with key x, and message y
• p(x, y): Cipher key generation function with key x,

and random data y

• q(x, y): Integrity key generation function with key x,

and random data y

• r(x, y): Anonymity key generation function with key

x, and random data y
• AK: Anonymity Key
• RAN DH : A random number selected by an HLR
• CKH : The Cipher Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• IKH: The Integrity Key generated by an HLR, using
HLR-selected RAN DH. An MS can also generate this
when given a RAN DH .

• CKi,m: The Cipher Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

• IKi,m: The Integrity Key with id (i, m) generated by
an MS and a VLR and for use between the MS and
the VLR

91• f m(bi): One-way hash function with ith random seed
bi and mth composition, where i ≤ I and m ≤ M , for
use in authenticating an MS

• M : The maximum number of f hash chaining compo-

sition

• I: The maximum number of random seeds for f hash

chaining

• gn(aj): One-way hash function with jth random seed
aj and nth composition, where j ≤ J and n ≤ N , for
use in authenticating a VLR.

• N : The maximum number of g hash chaining compo-

sition

• J: The maximum number of random seeds for g hash

chaining

• ?

=: An equality comparison operator

5.2 Techniques

To enhance the 3G AKA protocol, we adopt two ma-
jor techniques: keyed-Hash Message Authentication Code
(HMAC) and hash chaining.

HMAC is very popular in the Internet community [25],
and has been recently drafted by FIPS [14]. It is used for
message authentication by means of a cryptographic hash
function and a shared secret key. In a public-key system, a
digital signature can be used to replace HMAC. The main
components in HMAC are a hash algorithm and a key, and
the most common form of HMAC is

hash(key, hash(key, message)).

Two of the most popular HMAC’s are HMAC-MD5 [26] and
HMAC-SHA [27].

Lamport’s one-time password/hash-chaining was proposed
in 1981, and has been used in many applications [3, 16, 17].
Let f (x) be a one-way function and

f M (x) = f (f (· ·· (f (x) ··· )))

be the composition of M f s. During registration, the claimant
(i.e., the one wishes to be authenticated) randomly selects an
integer seed b, computes f M (b) and HM AC of f M (b), and
sends f M (b) and the HM AC of f M (b) to the veriﬁer (i.e.,
the one decides whether the claimant is who it is). Once
registered, each hash chain can be used by the claimant
to prove itself to the veriﬁer M times.
In the ﬁrst visit,
the claimant submits f M−1(b) to prove itself. The veriﬁer
checks the equality f (f M−1(b))
?
= f M (b). If passed, the ver-
iﬁer updates f M (b) and stores f M−1(b) for the next visit;
otherwise, the claimant is not authenticated. The claimant
reveals f M−1(b), f M−2(b), · ·· , f (b), and b = f 0(b) in se-
quence to prove itself M times. The one-way hash chain-
ing algorithm prevents all users, except the legitimate one,
from computing backward values using the published one-
way value.

Straightforward implementations of a hash chain such as
storing all chain elements or iteratively hashing from a seed
have O(M ) of combined memory and computational com-
plexity for an M element chain. Recently, Jakobsson [18],
and Coppersmith and Jakobsson [12] proposed a log2(M )
space and access time mechanism, especially desired for low-
cost applications such as mobile handsets, micro-payments,
smart dust, authentications, and signatures (see [18, 12] for
references therein.)

For the purpose of non-repudiation, the combination of
f M−m(b) and the HM AC of f M (b) (that is provided by
the claimant during registration) can be used as a non-
repudiation proof by the veriﬁer as an evidence for all m
visits made by the claimant. Speciﬁcally, for all m visits, the
veriﬁer only needs to store the most recently released f value
(i.e., f M−m(b)), and does not need to keep all other values
that it has received (i.e., f M (b), f M−1(b), ··· , f M−m+1(b))
before the mth visit. The veriﬁer can produce a proof of the
claimant’s jth visit, where 1 ≤ j ≤ m−1, by simply comput-
ing f m−j (f M−m(b)). This desired feature is especially good
for the applications (such as mobile handsets) with limited
storage space.

To prolong the life time of a hash chain, an additional di-
mension can be added to the above scheme as follows. The
claimant (1) randomly selects I seeds, b1, b2,··· , and bI , (2)
computes f M (b1), f M (b2),··· , and f M (bI ), and an HMAC
on the concatenated message f M (b1)||f M (b2)|| ···||f M (bI ),
(3) sends the computed values in (2) to the veriﬁer. Note
that by using the concatenation of I hash chaining values
as one single message, one message authentication code be-
tween an MS and an HLR is all that is needed for estab-
lishing the initial registration (see lines c1 and c2 in Figure
3).

A general discussion on one-way functions and one-way
hash functions can be found in [29] and the implementation
of these functions can be found in [4].
5.3 Protocol Enhancement

Figure 3 provides our registration and AKA enhancements
on top of the two 3G forerunners, UMTS and cdma2000.
For clarity, a set of protocol steps composed to achieve a
unique functionality are grouped into a procedure. These
procedures mirror those in Figures 1 and 2. The signiﬁcance
of this grouping indicates that our procedures can be used to
replace with ease the corresponding UMTS and cdma2000
procedures.

5.3.1 Enhancement Details

In the following, we specify the assumption and explain

each procedure and the corresponding steps.

• Assumptions: Just like in UMTS Security Architec-
ture [6], we also assume that (1) the communication
link between an HLR and a VLR is adequately secure,
and (2) an MS shares a common secret key K with its
HLR.

• Procedure: Registration and Distribution of Authen-

tication Information

This procedure is used when an MS ﬁrst roams into
a new visitor domain. The MS must send its HLR
a set of data which is subsequently used by the VLR.
Speciﬁcally, both M SG1 and HM AC1 (in lines c1 and
c2) are sent from the MS via the VLR to the HLR.
After the HLR veriﬁes the authenticity of M SG1, it
then prepares M SG2 to send to the VLR. In order for
the MS to verify the authenticity of the VLR later on
in the AKA phase, M SG3 and HM AC3 is prepared
and sent by the VLR.

92Line

Procedure

MS

VLR

HLR

c1
c2
c3
c4
c5
c6
c7
c8
c9
c10
c11

c12

c13
c14

c15
c16
c17
c18
c19
c20

c21

c22
c23
c24
c25
c26

c27
c28
c29
c30

Registration 

and

Distribution of 
Authentication
Information

Authentication

and 

Key Agreement

for

(cid:0)(cid:1) (cid:1) (cid:3)(cid:5)

where

(cid:0) (cid:7) (cid:8)(cid:3)(cid:3) (cid:9)(cid:11)
 (cid:7) (cid:8)(cid:3)(cid:3)

 (cid:6)(cid:7)(cid:0) (cid:7)  (cid:6)(cid:0)(cid:0)(cid:8)  (cid:9)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:8)  (cid:9) (cid:0)(cid:0)(cid:0)(cid:11)(cid:13)
  (cid:18)(cid:21)(cid:0) (cid:7) (cid:1)  (cid:6)(cid:7)(cid:0)

 (cid:6)(cid:7)(cid:0)(cid:1)   (cid:18)(cid:21)(cid:0)

(cid:5)(cid:7)   (cid:18)(cid:21)(cid:0)

(cid:25) (cid:18)(cid:21)(cid:0) (cid:7) (cid:1)  (cid:6)(cid:7)(cid:0)
(cid:25)  (cid:18)(cid:21)(cid:0)
(cid:12)(cid:5)(cid:3)(cid:14)(cid:15) (cid:16)(cid:5) (cid:14)(cid:5)(cid:16)(cid:5) (cid:14) (cid:3)(cid:5)(cid:9)
(cid:20)(cid:5) (cid:5)(cid:22) (cid:9) (cid:17)(cid:18) (cid:20) 
(cid:21)  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
(cid:18) (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
 (cid:6)(cid:7)(cid:2) (cid:7)  (cid:6)(cid:0)(cid:0)(cid:8)  (cid:9)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:8)  (cid:9)

(cid:0)(cid:0)(cid:17)(cid:18) (cid:20)  (cid:0)(cid:0)(cid:18)(cid:0)(cid:0)(cid:21) (cid:0)(cid:0) 

 (cid:6)(cid:7)(cid:3) (cid:7) (cid:17)(cid:18) (cid:20)  (cid:0)(cid:0)(cid:23) (cid:13)(cid:0)(cid:0)(cid:0)    (cid:0)(cid:0)(cid:23)(cid:13) 
  (cid:18)(cid:21)(cid:3) (cid:7) (cid:18)(cid:1)  (cid:6)(cid:7)(cid:3)

 (cid:6)(cid:7)(cid:2)

 (cid:6)(cid:7)(cid:3)(cid:1)   (cid:18)(cid:21)(cid:3)

(cid:18) (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
(cid:25)  (cid:18)(cid:21)(cid:3) (cid:7) (cid:18)(cid:1)  (cid:6)(cid:7)(cid:3)
(cid:5)(cid:7)   (cid:18)(cid:21)(cid:3)
(cid:25)  (cid:18)(cid:21)(cid:3)
(cid:21)  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 
  (cid:7) (cid:1) (cid:17)(cid:18) (cid:20) 

 (cid:6)(cid:7)(cid:1) (cid:7) (cid:8)   (cid:9)(cid:6)

 (cid:6)(cid:7)(cid:1)

(cid:8) (cid:8)   (cid:9)(cid:6) (cid:5)(cid:7) (cid:8)   (cid:0)(cid:9)(cid:6)
 (cid:6)(cid:7)(cid:4) (cid:7) (cid:23)  (cid:13)(cid:10)
(cid:21)(cid:6)(cid:11) (cid:7) (cid:21)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)
(cid:6)(cid:11) (cid:7)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)

 (cid:6)(cid:7)(cid:4)

(cid:23)(cid:23)  (cid:13)(cid:10) (cid:5)(cid:7) (cid:23)  (cid:0)(cid:13)(cid:10)
(cid:21)(cid:6)(cid:11) (cid:7) (cid:21)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)
(cid:6)(cid:11) (cid:7)  (cid:1) (cid:23)  (cid:13)(cid:10)(cid:0)(cid:0)(cid:8)   (cid:9)(cid:6)

Figure 3: Enhanced Registration and AKA procedures

• Procedure: Authentication and Key Agreement

This procedure is used by the MS and the VLR to
mutually authenticate each other. Since each authen-
tication uses one chain position, the MS can prove its
identity to the VLR at most I × M times, whereas the
VLR to the MS J × N times. The indices (i, m) and
(j, n), where i ≤ I, m ≤ M , j ≤ J, and n ≤ N , are
independent of each other as each side steps through
its own hash chains at its own pace. Within each set
of hash chains, it can be agreed that the chain with
lower id (i.e., i and j) is used. If one side encounters
problems in authenticating the other side, the veri-
ﬁer should send an error message with the problematic
chain id to the claimant. The claimant then tries to
authenticate itself to the veriﬁer starting from the next
fresh chain. For example, if the problematic chain id
in f series is 8, then the MS should reveal f M−1(b9) to
the VLR to try to correct the authentication problem.

5.3.2 Advantages

The following list summarizes the advantages of our en-

hancements.

• Non-repudiation: For cases such as billing and dispute
resolution between an MS and a VLR, the combination
of HM AC1 in line c2 and f M−m(bi) can serve as a non-
repudiation proof by a VLR as an evidence of m visits
in the ith chain made by an MS, and the combination

of HM AC3 in line c14 and gN−n(aj ) can serve as a
non-repudiation proof by an MS as an evidence of n
visits in the jth chain made by a VLR. Note that due
to the desired property of hash chaining, for each hash
chain, the veriﬁer only needs to keep the most recently
released chain value (i.e., f M−m(bi) kept by a VLR and
gN−n(aj) kept by an MS) as an evidence, (see section
5.2 for explanation.) This is good for mobile handsets
because of their limited space constraint.

• Stronger mutual authentication: To achieve mutual
authentication between an MS and a VLR, two hash
chain sets are established, one for each direction. The
one-way hash chaining algorithm prevents all users, ex-
cept the legitimate one, from computing backward val-
ues using the published one-way value. Additionally,
our method removes the assumption of secure channels
between VLRs as there is no need to transfer leftover
AVs. Therefore, this technique provides stronger mu-
tual authentication than the current 3G protocols.

• Stronger periodical authentication: In UMTS [6], the
periodical authentication is achieved by comparing a
SEQ counter value between an ME and a VLR peri-
odically. The SEQ is susceptible to synchronization
failure. In our enhanced protocol, either a VLR or an
MS can periodically request to authenticate the other
by having the other side prove itself. It is only when
the submitted value satisﬁes the hash chain property,
is the claimant successfully authenticated. This way is

93stronger than simply comparing the counter value.

• Stronger key agreement to protect against compro-
mised data: The composition of session keys CKi,m
and IKi,m for (i, m)th session are based on input val-
ues from all three entities involved, i.e, MS, VLR, and
HLR. Therefore, if any of these input values is com-
promised by an attacker, the session can not proceed.
• Mutual authentication with no need for synchroniza-
tion: Since there are two hash chain sets, one for each
direction, and each side authenticates the other at its
own pace, there is no need to synchronize these two
chain sets.

• Authentication ﬂexibility: Because of the feature of
the mutual authentication with no need for synchro-
nization, if it is necessary to provide only one-way au-
thentication to function like a 2G system, one can sim-
ply omit the undesired set of chains.

• Simplicity and Elegance: Our enhancements do not
use SEQ (sequence number) as in UMTS, or COUNT
(call history counter) in cdma2000. As brieﬂy men-
tioned in section 3, the management and record keep-
ing of SEQ complicates both protocol and implemen-
tation tremendously. The management of a hash chain
is simple and elegant compared to that of SEQ.

• Convenience and Security: By using a VLR’s own
hash chaining set, the VLR has the convenience of the
local control in authenticating an MS. Yet an HLR
still has the total control in security by means of the
HLR-generated master keys CKH and IKH and non-
repudiation services.

• Ease of handoﬀ between VLRs: The roaming of an
MS among VLRs is a case of macro mobility. For the
roaming among base stations within the same VLR
domain, known as micro mobility, methods such as
Proactive Caching [22] can be used to reduce the con-
nection delay. (We are currently working on extend-
ing the hash chaining technique to provide proactive
caching for handoﬀ in micro mobility.)
In UMTS,
when an MS roams out of a VLR domain, the old VLR
must transfer the leftover authentication vectors to the
new VLR. In our scheme, each MS and VLR pair has
two unique sets of hash chains, one for each direction.
That is, when an MS roams out of a VLR domain,
the MS will establish two new sets of hash chains with
a new VLR. The MS and the old VLR can still keep
their old authentication states so that future connec-
tions can resume from the point where they leave each
other. Thus, our scheme does not have leftover vector
transferring problem as in UMTS. This feature is par-
ticularly attractive for a super-charged network where
an MS moves around various VLRs frequently, or the
cell sizes are small.

For an MS who visits a VLR infrequently, an imple-
mentation of our enhancement can setup a time limit
so that an established chain can be discarded due to a
prolonged inactivity.

• Ease of re-synchronization: For any connection, if there
is an authentication failure, the next fresh hash chain
is used, thereby making re-synchronization between an
MS and a VLR a trivial task.

6. CONCLUSION AND SUMMARY

Our main contributions in this paper are the enhance-
ments on the authentication and key agreement protocol in
the 3G network access security. To understand the basis of
our enhancements, we provide an evolutionary and compar-
ative study of this protocol in two most popular 3G cellular
systems, UMTS and cdma2000.

The approaches adopted by the two 3G front runners aim
to solve the 2G security problems and satisfy the higher 3G
security requirements. Speciﬁcally, UMTS uses a sequence
number approach to provide network authentication, a fea-
ture not in 2G. Cdma2000 has approved the adoption of the
same technique. The sequence number record keeping and
management complicate the already complex 3G implemen-
tation. In our study, we recommend to use a combination
of hash chaining and keyed-Hash Message Authentication
Code techniques instead. This combined approach not only
simpliﬁes both protocol and implementation, but also pro-
vides strong periodically mutual authentication, strong key
agreement, and non-repudiation services in an elegant way.
Future work will provide a performance analysis of our

enhancement.

Acknowledgement
We wish to thank Dr. Lily Lidong Chen at Motorola, Inc.
and Dr. John Cigas at Rockhurst University for their con-
structive comments in the initial draft of this paper.

7. REFERENCES
[1] Al-Muhtadi, J., Mickunas, D., and Campbell, R. ”A
Lightweight Reconﬁgurable Security Mechanism for
3G/4G Mobile Devices”. IEEE Communications
Magazine. vol 40. no. 10. April 2002.

[2] Almaimani, M., Korsuwana, P., Twine, M., and

Mendelsohn, J. ”IMT-2000: A Comparative Analysis
of cdma2000 and UTRA”.

[3] Anderson, R., Manifavas, C., and Southerland, C.,
”NetCard - A Practical Electronic Cash System”.
Proc. International Workshop on security Protocols.
Cambridge, UK. pp. 49-57. April 10-12, 1996.

[4] Asokan, N., Tsudik, G., and Waidner, M.

”Server-supported signature”. Proc. 4th European
Symp. on Research in Computer Security (Lecture
Notes in Computer Science). vol 1146. pp. 131-143.
1996.

[5] 3GPP TS 21.133. ”3GPP: Technical Speciﬁcation
Group services and System Aspects; 3G Security;
Security Threats and Requirements”.

[6] 3GPP TS 33.102. ”3GPP: Technical Speciﬁcation
Group services and System Aspects; 3G Security;
Security Architecture”.

[7] 3GPP TS 33.120. ”3GPP: Technical Speciﬁcation
Group services and System Aspects; 3G Security;
Security Principles and Objectives”.

[8] 3GPP2 C.S0004-C v1.0. ”Signaling Link Access

Control (LAC) Standard for cdma2000 Spread

94Spectrum Systems - Release C”. File
C-S0004-C v1.0.pdf. May 2002.

[20] Millan, William. ”Cryptanalysis of the alleged CAVE

algorithm”. ICISC 1998. pp 107-119.

[9] 3GPP2 C.S0005-C v1.0. ”Upper Layer (Layer 3)

[21] Lin, H.Y., and Harn, L. ”Authentication Protocols

Signaling Standard for cdma2000 Spread Spectrum
Systems -Release C”. File C.S0005-C v1.0.pdf. May
2002.

[10] 3GPP2 S.S0055-0 v1.0. ”Enhanced Cryptographic
Algorithms”. File S.S0055-0 v1.0.pdf. January 21,
2002.

[11] 3GPP2 S.R0032. ”Enhanced Subscriber

Authentication (ESA) and Enhanced Subscriber
Privacy (ESP)”. Version 1.0. December 6, 2000.

[12] Coppersmith, D. and Jakobsson, M. ”Almost optimal

hash sequence traversal.” Proceedings of the fourth
conference on Financial Cryptography (FC’02).
Lecture Notes in Computer Science. 2002.

[13] Dalal, Neerav. ”A comparative study of UMTS and

cdma2000.” IEEE METROCON. 2001.

[14] ”The Keyed-Hash Message Authentication Code

(HMAC)”. Federal Information Processing Standards
Publication. Draft. 2001.

[15] ”Secure Hash Standard”. FIPS publication 180-1.

April 17, 1995.

with Non-Repudiation services in Personal
Communication Systems.” IEEE Communications
Letters. vol 3. no 8. pp 236-238. August 1999.

[22] Mishra, A., Shin, M., Arbaugh, W., Lee, I., Jang, K.

”Proactive caching strategies for IAPP latency
improvement during 802.11 handoﬀ”. IEEE 802.11
working group. IEEE-02-758r1-R. November 2002.

[23] Niemi, Valtteri. ”UMTS security and the rule of

PKI”. Eurescom Workshop. June 2001.
http://www.eurescom.de/ pub/seminars/past/
2001/SecurityFraud/11-Niemi/s1d001.htm
[24] Pesonen, Lauri. ”GSM Interception.” 1999.
[25] Krawczyk, H., Bellare, M., and Canetti, R.

”Keyed-Hashing for Message Authentication”.
Internet Engineering Task Force, Request for
Comments (RFC) 2104. February 1997.
[26] Madson, C., and Glenn, R. ”The use of

HMAC-MD5-96 within ESP and AH”. Internet
Engineering Task Force. Request for Comments
(RFC) 2403. November 1998.

[16] Gennaro, R., and Rohatgi, P. ”How to Sign Digital

[27] Madson, C., and Glenn, R. ”The use of

Streams”. Advances in Cryptography - Crypto’97. pp.
180-197.

[17] Harn, L., and Lin, H. ”A Non-Repudiation Metering

Scheme”. IEEE Communications Letters. vol 5. no 12.
December 2001.

HMAC-SHA-1-96 within ESP and AH”. Internet
Engineering Task Force. Request for Comments
(RFC) 2404. November 1998.

[28] Rose, G. ”Authentication and Security in Wireless

Phones”. Qualcomm Australia.

[18] Jakobsson, M. ”Fractal hash sequence representation

[29] Schneier, B. Applied Cryptography. New York: Wiley.

and traversal.” Proceedings of the 2002 IEEE
International Symposium on Information Theory
(ISIT’02”. pages 437-444. July 2002.

[19] Lamport, L. ”Password authentication with insecure
communication”. Communications ACM. vol. 24. no.
11. pp. 770-772. 1981.

1996.

[30] Wagner, D., Schneier, B., and Kelsey, J.

”Cryptanalysis of the Cellular Message Encryption
Algorithm”. 3/20/97. Crypto’97 Conference, August
17-21, 1997.

95