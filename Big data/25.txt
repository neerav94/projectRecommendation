 

 

671

10.5441/002/edbt.2015.67

AGenericSolutiontoIntegrateSQLandAnalyticsforBigDataNickR.Katsipoulakis1⇤,YuanyuanTian2,FatmaÖzcan2,BertholdReinwald2,HamidPirahesh21UniversityofPittsburghkatsip@cs.pitt.edu2IBMAlmadenResearchCenter{ytian,fozcan,reinwald,pirahesh}@us.ibm.comABSTRACTThereisaneedtointegrateSQLprocessingwithmoreadvancedmachinelearning(ML)analyticstodriveactionableinsightsfromlargevolumesofdata.Asaﬁrststeptowardsthisintegration,westudyhowtoefﬁcientlyconnectbigSQLsystems(eitherMPPdatabasesornew-generationSQL-on-Hadoopsystems)withdis-tributedbigMLsystems.Weidentifytwoimportantchallengestoaddressintheintegrateddataanalyticspipeline:datatransforma-tion,howtoefﬁcientlytransformSQLdataintoaformsuitableforML,anddatatransfer,howtoefﬁcientlyhandoverSQLdatatoMLsystems.Forthedatatransformationproblem,weproposeanIn-SQLapproachtoincorporatecommondatatransformationsforMLinsideSQLsystemsthroughextendeduser-deﬁnedfunctions(UDFs),byexploitingthemassiveparallelismofthebigSQLsys-tems.WeproposeandstudyageneralmethodfortransferringdatabetweenbigSQLandbigMLsystemsinaparallelstreamingfash-ion.Furthermore,weexplorecachingintermediateorﬁnalresultsofdatatransformationtoimprovetheperformance.Ourtechniquesaregeneric:theyapplytoanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatstoingestinputdata.1.INTRODUCTIONEnterprisesareemployingvariousbigdatatechnologiestopro-cesshugevolumesofdataanddriveactionableinsights.Dataware-housesintegrateandconsolidateenterprisedatafrommanyopera-tionalsources,andaretheprimarydatasourceformanyanalyticalapplications,whetheritisreportingormachinelearning(ML).Tra-ditionallydatawarehouseshasbeenimplementedusinglarge-scaleMPPSQLdatabases,suchasIBMDB2,OracleExadata,TeraData,andGreenplum.Recently,weobservethatenterprisesarecreatingHadoopwarehousesinHDFSandHadoopecosystem,usingSQL-on-HadooptechnologieslikeIBMBigSQL[13],Hive[21],andImpala[14].Inthispaper,weusethetermbigSQLsystemstorefertoboththelarge-scaleMPPdatabasesaswellastheSQL-on-Hadoopsystems.Togainactionableinsights,enterprisesneedtoruncomplexan-alyticsontheirwarehousedata.TherehasbeensomeworksthatembedMLinsideSQLsystems,throughuserdeﬁnedfunctions⇤TheworkdescribedinthispaperwasdonewhiletheauthorwasworkingatIBMAlmadenResearchCenter©2015,Copyrightiswiththeauthors.PublishedinProc.18thInterna-tionalConferenceonExtendingDatabaseTechnology(EDBT),March23-27,2015,Brussels,Belgium:ISBN978-3-89318-067-7,onOpenProceed-ings.org.DistributionofthispaperispermittedunderthetermsoftheCre-ativeCommonslicenseCC-by-nc-nd4.0.(UDFs).WerefertothisapproachastheIn-SQLanalyticsap-proach.SuchexamplesincludeHivemall[12]forHive,andBis-march[7]whichisincorporatedintotheMadlibanalyticslibrary[11]forGreenplumandImpala[22].However,throughUDFs,onlyalimitednumberofMLalgorithmscanbesupported.Forexam-ple,onlyconvexoptimizationproblemscanbeimplementedinBis-march.Withthebigdatarevolution,mostnewdevelopmentsofbigMLalgorithmshappenoutsidetheSQLsystems,andmainlyonbigdataplatformslikeHadoop.Therearemanyoptions,suchasML-Lib[20],SystemML[9],andMahout[1],andmoresystemsandspecialalgorithmsaredevelopedeveryday.Enterprisesneedtoin-tegratetheirbigSQLsystemwiththeirbigMLsystem.Thesolu-tionshouldalsobeextensibletoanyfuturesystem.Thefollowingexamplewilldemonstratethisneedofintegration.AnExampleScenario.Adataanalystfromanonlineretailerwantstobuildaclassiﬁcationmodelontheabandonmentofon-lineshoppingcartsinUSA.ThedetailedinformationofonlineshoppingcartsandcustomersarestoredintwotablescartsanduserseitherinaMPPdatabaseorinaSQL-on-Hadoopsys-tem.TopreparethedatathatshelaterwillfeedintoanSVMalgorithm,theanalystneedstocombinethetwotablesandex-tractthethreeneededfeatures,thecustomer’sage,genderandthedollaramountoftheshoppingcart,aswellastheindicatorﬁeldabandonedforbuildingtheclassiﬁcationmodel.ThisdatapreparationcanbeeasilyexpressedasaSQLqueryshownbelow.SELECTU.age,U.gender,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’SparkprovidesauniﬁedenvironmentthatallowscombiningSQL(SparkSQL)andML(MLlib)together.Thedatahandoverbe-tweenSparkSQLandMLlibisthroughthedistributed(andof-tenin-memory)datastructure,calledResilientDistributedDatasets(RDDs).Again,analystsarelimitedbytheMLalgorithmssup-portedinMLlib.IfananalystwantstouseanexistingalgorithminMahoutorifshehasherownanalyticsalgorithmalreadyimple-mentedinMapReduce,shehastowritethedataintoHDFS,runheranalyticsalgorithm,andstoreresultsbackintoHDFS.Inaddition,inbothSparkandtheIn-SQLanalyticsapproach,oneislockedinaparticularenvironment.Butinreality,enterprisesneedagenericsolutionthatworkswithmanybigSQLandbigMLsystem,andiseasilyextensibletoanyfuturesystem.ThestraightforwardapproachtoconnectbigSQLandMLsys-temisthroughﬁlesonasharedﬁlesystem,suchasHDFSsincemostbigMLsystemsarerunningonHadoop.Inotherwords,thebigSQLsystemoutputsresultsontoHDFSandthenthebigMLsystemreadsthemfromHDFS.Thisapproachobviouslyincursalotofoverhead.Inthispaper,weexplorewhetherwecandobetter 

 

671

10.5441/002/edbt.2015.67

AGenericSolutiontoIntegrateSQLandAnalyticsforBigDataNickR.Katsipoulakis1⇤,YuanyuanTian2,FatmaÖzcan2,BertholdReinwald2,HamidPirahesh21UniversityofPittsburghkatsip@cs.pitt.edu2IBMAlmadenResearchCenter{ytian,fozcan,reinwald,pirahesh}@us.ibm.comABSTRACTThereisaneedtointegrateSQLprocessingwithmoreadvancedmachinelearning(ML)analyticstodriveactionableinsightsfromlargevolumesofdata.Asaﬁrststeptowardsthisintegration,westudyhowtoefﬁcientlyconnectbigSQLsystems(eitherMPPdatabasesornew-generationSQL-on-Hadoopsystems)withdis-tributedbigMLsystems.Weidentifytwoimportantchallengestoaddressintheintegrateddataanalyticspipeline:datatransforma-tion,howtoefﬁcientlytransformSQLdataintoaformsuitableforML,anddatatransfer,howtoefﬁcientlyhandoverSQLdatatoMLsystems.Forthedatatransformationproblem,weproposeanIn-SQLapproachtoincorporatecommondatatransformationsforMLinsideSQLsystemsthroughextendeduser-deﬁnedfunctions(UDFs),byexploitingthemassiveparallelismofthebigSQLsys-tems.WeproposeandstudyageneralmethodfortransferringdatabetweenbigSQLandbigMLsystemsinaparallelstreamingfash-ion.Furthermore,weexplorecachingintermediateorﬁnalresultsofdatatransformationtoimprovetheperformance.Ourtechniquesaregeneric:theyapplytoanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatstoingestinputdata.1.INTRODUCTIONEnterprisesareemployingvariousbigdatatechnologiestopro-cesshugevolumesofdataanddriveactionableinsights.Dataware-housesintegrateandconsolidateenterprisedatafrommanyopera-tionalsources,andaretheprimarydatasourceformanyanalyticalapplications,whetheritisreportingormachinelearning(ML).Tra-ditionallydatawarehouseshasbeenimplementedusinglarge-scaleMPPSQLdatabases,suchasIBMDB2,OracleExadata,TeraData,andGreenplum.Recently,weobservethatenterprisesarecreatingHadoopwarehousesinHDFSandHadoopecosystem,usingSQL-on-HadooptechnologieslikeIBMBigSQL[13],Hive[21],andImpala[14].Inthispaper,weusethetermbigSQLsystemstorefertoboththelarge-scaleMPPdatabasesaswellastheSQL-on-Hadoopsystems.Togainactionableinsights,enterprisesneedtoruncomplexan-alyticsontheirwarehousedata.TherehasbeensomeworksthatembedMLinsideSQLsystems,throughuserdeﬁnedfunctions⇤TheworkdescribedinthispaperwasdonewhiletheauthorwasworkingatIBMAlmadenResearchCenter©2015,Copyrightiswiththeauthors.PublishedinProc.18thInterna-tionalConferenceonExtendingDatabaseTechnology(EDBT),March23-27,2015,Brussels,Belgium:ISBN978-3-89318-067-7,onOpenProceed-ings.org.DistributionofthispaperispermittedunderthetermsoftheCre-ativeCommonslicenseCC-by-nc-nd4.0.(UDFs).WerefertothisapproachastheIn-SQLanalyticsap-proach.SuchexamplesincludeHivemall[12]forHive,andBis-march[7]whichisincorporatedintotheMadlibanalyticslibrary[11]forGreenplumandImpala[22].However,throughUDFs,onlyalimitednumberofMLalgorithmscanbesupported.Forexam-ple,onlyconvexoptimizationproblemscanbeimplementedinBis-march.Withthebigdatarevolution,mostnewdevelopmentsofbigMLalgorithmshappenoutsidetheSQLsystems,andmainlyonbigdataplatformslikeHadoop.Therearemanyoptions,suchasML-Lib[20],SystemML[9],andMahout[1],andmoresystemsandspecialalgorithmsaredevelopedeveryday.Enterprisesneedtoin-tegratetheirbigSQLsystemwiththeirbigMLsystem.Thesolu-tionshouldalsobeextensibletoanyfuturesystem.Thefollowingexamplewilldemonstratethisneedofintegration.AnExampleScenario.Adataanalystfromanonlineretailerwantstobuildaclassiﬁcationmodelontheabandonmentofon-lineshoppingcartsinUSA.ThedetailedinformationofonlineshoppingcartsandcustomersarestoredintwotablescartsanduserseitherinaMPPdatabaseorinaSQL-on-Hadoopsys-tem.TopreparethedatathatshelaterwillfeedintoanSVMalgorithm,theanalystneedstocombinethetwotablesandex-tractthethreeneededfeatures,thecustomer’sage,genderandthedollaramountoftheshoppingcart,aswellastheindicatorﬁeldabandonedforbuildingtheclassiﬁcationmodel.ThisdatapreparationcanbeeasilyexpressedasaSQLqueryshownbelow.SELECTU.age,U.gender,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’SparkprovidesauniﬁedenvironmentthatallowscombiningSQL(SparkSQL)andML(MLlib)together.Thedatahandoverbe-tweenSparkSQLandMLlibisthroughthedistributed(andof-tenin-memory)datastructure,calledResilientDistributedDatasets(RDDs).Again,analystsarelimitedbytheMLalgorithmssup-portedinMLlib.IfananalystwantstouseanexistingalgorithminMahoutorifshehasherownanalyticsalgorithmalreadyimple-mentedinMapReduce,shehastowritethedataintoHDFS,runheranalyticsalgorithm,andstoreresultsbackintoHDFS.Inaddition,inbothSparkandtheIn-SQLanalyticsapproach,oneislockedinaparticularenvironment.Butinreality,enterprisesneedagenericsolutionthatworkswithmanybigSQLandbigMLsystem,andiseasilyextensibletoanyfuturesystem.ThestraightforwardapproachtoconnectbigSQLandMLsys-temisthroughﬁlesonasharedﬁlesystem,suchasHDFSsincemostbigMLsystemsarerunningonHadoop.Inotherwords,thebigSQLsystemoutputsresultsontoHDFSandthenthebigMLsystemreadsthemfromHDFS.Thisapproachobviouslyincursalotofoverhead.Inthispaper,weexplorewhetherwecandobetter672

thanthisbasicapproach.WeidentifytwomajorchallengeswhenconnectingbigSQLandbigMLsystems:(1)datatransformationand(2)datatransfer.DatatransformationdealswiththefactthatSQLsystemsandMLsystemspreferdataindifferentformats.Forexample,mostMLsystemsworkonnumericvaluesonly.Forcategoricalval-ues(e.g.thegenderofacustomer)normallystoredasstringsinSQLsystems,theyhavetoberecoded[5]andsometimesdummycoded[4](detailswillbeprovidedinSection2)beforetheanaly-siscanbeapplied.Today,suchtransformationfunctionalitiesarerarelyprovidedineitherbigSQLorbigMLsystems,whichmeanstheyhavetobeimplementedbyusers.Onecanchoosetoim-plementthesetransformationfunctionsoutsidebothsystems,us-ingherpreferreddatatransformationframework,e.g,MapReduce.But,thisintroducesanotherhop,henceextraoverhead,betweenSQLandMLsystems.AbetterapproachwouldbetoincorporatetransformationsineitherSQLorMLsystems.Inordertoprovideagenericsolution,weleveragetheextensibility(e.gUDFs)ofbigSQLsystemsandproposeanIn-SQLtransformationapproach.Infact,wefoundthatmostcommondatatransformationsbetweenSQLandanalyticscanbeimplementedthroughUDFsbyexploit-ingthemassiveparallelisminsidebigSQLsystems.Datatransfer,ontheotherhand,dealswithhowtheoutputofaSQLsystemispassedovertotheMLsystemforprocessing.WhentheSQLsystemrequiresalonghaultoproducetheoutput,thestraightforwardapproachofhandingoverﬁlesonasharedﬁlesys-temmaybepreferredforfaulttolerancereasons.Buttheextraﬁlesystemwriteandreadcanbeaperformancehurdle.Anotherim-portantissueaboutthestraightforwardapproachisthefactthattheentireoutputofthetransformationstepneedstobeproducedandmaterialized(ablockingoperation)beforeitcanbeingestedintotheMLsystem.Inthispaper,weproposeageneralapproachtoparalleldatastreamingbetweenthesetwosystems.ThisapproachavoidstouchingtheﬁlesystembetweenSQLandMLsystems,andcanbeusedbyanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatforingestingdata(infact,allMLsystemsonHadoopdo)inparallel.Cachingisacommontechniqueusedindistributedsystemstoreducecommunicationcosts.Inthispaper,weexplorecachingintermediateorﬁnalresultsofthetransformationsteptohelpsig-niﬁcantlyreducethecostsofconnectingbigSQLsystemswithbigMLsystems.Mostoftentheintermediateresultsthatarerequiredbytherecodingtransformationscanbeprecomputedandreused.NotethattheneedforintegratingSQLandMLexistedevenbeforetheeraofbigdata.PeoplehavebeenfetchingdatafromdatabasesandfeedingthemtoMLsoftwares,suchasR[19],inthepast.Butsincethedataexchangedbetweenthetwosystemsweresmall,datatransformationandtransferwerenotchallengingprob-lems.Forexample,therearefunctionsprovidedinR(sequentialimplementations)forcommondatatransformations.Datatransfer,ontheotherhand,isusuallydonethroughpassingphysicalﬁlesaround.However,thisoldwayofsequentiallytransformingdataandpassingﬁlesaroundisofteninfeasiblewhenhugevolumesofdataareinvolved.ExploitingthemassiveparallelisminsideandbetweenbigSQLandbigMLsystemsisanecessitytoguaranteeperformance,andthisisexactlywhatwestrivetoachieveinthispaper.Thecontributionsofthispaperareasfollows:•WeﬁrstproposeanIn-SQLapproachtoincorporatecommondatatransformationsforanalyticsinsidebigSQLsystemsthroughUDFs,byfullyexploitingthemassiveparallelismofthebigSQLsystems.•Wethenintroduceageneralapproachtotransferdatabe-tweenbigSQLandbigMLsystemsinaparallelstreamingfashion,withouttouchingtheﬁlesystem.•WefurtherexplorecachingtechniquestoreducethecostsofconnectingbigSQLandbigMLsystems.2.IN-SQLDATATRANSFORMATIONMostbigSQLsystemstodayhaveUDFsupportforextensibil-ity,whichmakesitfeasibletoemployagenericIn-SQLsolutionforcommontransformationsforML.Wewillusethetwomostcom-montransformations,recodingofcategoricalvariablesanddummycoding,asexamplestodemonstratehowthesetransformationscanbeimplementedinparallelfashionsusingUDFs.Somelesscom-montransformations,suchaseffectcodingandorthogonalcod-ing[6],canbeimplementedinsimilarwaysasdummycoding.2.1RecodingofCategoricalVariablesMostdatatransformationbetweenSQLandMLsystemsdealswithcategoricalvariables.ThisisbecausecategoricalvariablesareusuallyrepresentedasstringﬁeldsinSQLsystems,butitisveryhardandinefﬁcienttohandlestringvaluesinanalytics.Asaresult,mostMLsystemspreferhandlingnumericvaluesonly.Oneofthemostcommondatatransformation,therefore,isrecodingofcate-goricalvariables[5].Figure1(b)showsanexamplerecodingofthecategoricalﬁeldsgenderandabandonedinthetableshowninFigure1(a)(ThistablecouldbetheresultofaqueryinaSQLsys-tem).Therecodednumericvaluesareusuallyconsecutiveintegersstartingfrom1.Here,fortheﬁeldgender,thevalue‘F’isre-codedto1and‘M’isrecodedto2.Andfortheﬁeldabandoned,‘Yes’and‘No’arerecodedto1and2respectively.Theaboverecodingisseeminglysimple.Inacentralizedenvi-ronment,itonlyrequiresonepassofdatatoperformtherecodingofallcategoricalﬁelds,assumingthenumberofdistinctvaluesforeachﬁeldisnotlarge.Thiscentralizedalgorithmsimplykeepstrackofarunningmapofcurrentrecodedvaluesforeachcategor-icalﬁeldwhilescanningthroughthedata.Ifavalueofaﬁeldhasbeenseenbefore,itjustusesthemaptorecodeit,otherwiseanewrecodingisaddedtothemap.Inadistributedenvironment,however,atwo-phaseapproachisneeded.Intheﬁrstphase,eachlocalworkercomputesitsdistinctvaluesforeachcategoricalﬁeldinitslocalpartition,andthenex-changesthelocalliststoobtaintheglobaldistinctvalues.Inthesecondpassofthedata,wecanusetheglobaldistinctvaluestoperformtherecoding.ThistwopassalgorithmscanbeeasilyimplementedusingacombinationofUDFsandSQLstatements.Forexample,intheﬁrstpass,wecanimplementaparalleltableUDF,whichinparal-lelreadsitslocalpartitionofthetableandgenerateanothertablewithtwoﬁeldscolNameandcolVal,whichcontainsthelo-caluniquevaluesforeachcategoricalcolumn.Forexample,thereturnedrecordsinalocalpartitionmightbe{(‘gender’,‘F’),(‘gender’,‘M’),(‘abandoned’,‘Yes’)}.TheserecordscanthenbepassedtoaSELECTDISTINCTcolName,colValueFROM...state-menttocomputetheglobaluniquevalues.WecanalsointroduceanothertableUDFtoaddarecodedvalueﬁeldrecodeValtotheresults,generatingrecodemappingrecordslike{(‘gender’,‘F’,1),(‘gender’,‘M’,2),(‘abandoned’,‘Yes’,1),(‘abandoned’,‘No’,2)}.Let’sdenotetheoriginaltableasTandtherecodemaptableasM,thentheﬁnalrecodinginthesecondpasscanbesimplyimplementedbyajoinlikebelow: 

 

671

10.5441/002/edbt.2015.67

AGenericSolutiontoIntegrateSQLandAnalyticsforBigDataNickR.Katsipoulakis1⇤,YuanyuanTian2,FatmaÖzcan2,BertholdReinwald2,HamidPirahesh21UniversityofPittsburghkatsip@cs.pitt.edu2IBMAlmadenResearchCenter{ytian,fozcan,reinwald,pirahesh}@us.ibm.comABSTRACTThereisaneedtointegrateSQLprocessingwithmoreadvancedmachinelearning(ML)analyticstodriveactionableinsightsfromlargevolumesofdata.Asaﬁrststeptowardsthisintegration,westudyhowtoefﬁcientlyconnectbigSQLsystems(eitherMPPdatabasesornew-generationSQL-on-Hadoopsystems)withdis-tributedbigMLsystems.Weidentifytwoimportantchallengestoaddressintheintegrateddataanalyticspipeline:datatransforma-tion,howtoefﬁcientlytransformSQLdataintoaformsuitableforML,anddatatransfer,howtoefﬁcientlyhandoverSQLdatatoMLsystems.Forthedatatransformationproblem,weproposeanIn-SQLapproachtoincorporatecommondatatransformationsforMLinsideSQLsystemsthroughextendeduser-deﬁnedfunctions(UDFs),byexploitingthemassiveparallelismofthebigSQLsys-tems.WeproposeandstudyageneralmethodfortransferringdatabetweenbigSQLandbigMLsystemsinaparallelstreamingfash-ion.Furthermore,weexplorecachingintermediateorﬁnalresultsofdatatransformationtoimprovetheperformance.Ourtechniquesaregeneric:theyapplytoanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatstoingestinputdata.1.INTRODUCTIONEnterprisesareemployingvariousbigdatatechnologiestopro-cesshugevolumesofdataanddriveactionableinsights.Dataware-housesintegrateandconsolidateenterprisedatafrommanyopera-tionalsources,andaretheprimarydatasourceformanyanalyticalapplications,whetheritisreportingormachinelearning(ML).Tra-ditionallydatawarehouseshasbeenimplementedusinglarge-scaleMPPSQLdatabases,suchasIBMDB2,OracleExadata,TeraData,andGreenplum.Recently,weobservethatenterprisesarecreatingHadoopwarehousesinHDFSandHadoopecosystem,usingSQL-on-HadooptechnologieslikeIBMBigSQL[13],Hive[21],andImpala[14].Inthispaper,weusethetermbigSQLsystemstorefertoboththelarge-scaleMPPdatabasesaswellastheSQL-on-Hadoopsystems.Togainactionableinsights,enterprisesneedtoruncomplexan-alyticsontheirwarehousedata.TherehasbeensomeworksthatembedMLinsideSQLsystems,throughuserdeﬁnedfunctions⇤TheworkdescribedinthispaperwasdonewhiletheauthorwasworkingatIBMAlmadenResearchCenter©2015,Copyrightiswiththeauthors.PublishedinProc.18thInterna-tionalConferenceonExtendingDatabaseTechnology(EDBT),March23-27,2015,Brussels,Belgium:ISBN978-3-89318-067-7,onOpenProceed-ings.org.DistributionofthispaperispermittedunderthetermsoftheCre-ativeCommonslicenseCC-by-nc-nd4.0.(UDFs).WerefertothisapproachastheIn-SQLanalyticsap-proach.SuchexamplesincludeHivemall[12]forHive,andBis-march[7]whichisincorporatedintotheMadlibanalyticslibrary[11]forGreenplumandImpala[22].However,throughUDFs,onlyalimitednumberofMLalgorithmscanbesupported.Forexam-ple,onlyconvexoptimizationproblemscanbeimplementedinBis-march.Withthebigdatarevolution,mostnewdevelopmentsofbigMLalgorithmshappenoutsidetheSQLsystems,andmainlyonbigdataplatformslikeHadoop.Therearemanyoptions,suchasML-Lib[20],SystemML[9],andMahout[1],andmoresystemsandspecialalgorithmsaredevelopedeveryday.Enterprisesneedtoin-tegratetheirbigSQLsystemwiththeirbigMLsystem.Thesolu-tionshouldalsobeextensibletoanyfuturesystem.Thefollowingexamplewilldemonstratethisneedofintegration.AnExampleScenario.Adataanalystfromanonlineretailerwantstobuildaclassiﬁcationmodelontheabandonmentofon-lineshoppingcartsinUSA.ThedetailedinformationofonlineshoppingcartsandcustomersarestoredintwotablescartsanduserseitherinaMPPdatabaseorinaSQL-on-Hadoopsys-tem.TopreparethedatathatshelaterwillfeedintoanSVMalgorithm,theanalystneedstocombinethetwotablesandex-tractthethreeneededfeatures,thecustomer’sage,genderandthedollaramountoftheshoppingcart,aswellastheindicatorﬁeldabandonedforbuildingtheclassiﬁcationmodel.ThisdatapreparationcanbeeasilyexpressedasaSQLqueryshownbelow.SELECTU.age,U.gender,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’SparkprovidesauniﬁedenvironmentthatallowscombiningSQL(SparkSQL)andML(MLlib)together.Thedatahandoverbe-tweenSparkSQLandMLlibisthroughthedistributed(andof-tenin-memory)datastructure,calledResilientDistributedDatasets(RDDs).Again,analystsarelimitedbytheMLalgorithmssup-portedinMLlib.IfananalystwantstouseanexistingalgorithminMahoutorifshehasherownanalyticsalgorithmalreadyimple-mentedinMapReduce,shehastowritethedataintoHDFS,runheranalyticsalgorithm,andstoreresultsbackintoHDFS.Inaddition,inbothSparkandtheIn-SQLanalyticsapproach,oneislockedinaparticularenvironment.Butinreality,enterprisesneedagenericsolutionthatworkswithmanybigSQLandbigMLsystem,andiseasilyextensibletoanyfuturesystem.ThestraightforwardapproachtoconnectbigSQLandMLsys-temisthroughﬁlesonasharedﬁlesystem,suchasHDFSsincemostbigMLsystemsarerunningonHadoop.Inotherwords,thebigSQLsystemoutputsresultsontoHDFSandthenthebigMLsystemreadsthemfromHDFS.Thisapproachobviouslyincursalotofoverhead.Inthispaper,weexplorewhetherwecandobetter672

thanthisbasicapproach.WeidentifytwomajorchallengeswhenconnectingbigSQLandbigMLsystems:(1)datatransformationand(2)datatransfer.DatatransformationdealswiththefactthatSQLsystemsandMLsystemspreferdataindifferentformats.Forexample,mostMLsystemsworkonnumericvaluesonly.Forcategoricalval-ues(e.g.thegenderofacustomer)normallystoredasstringsinSQLsystems,theyhavetoberecoded[5]andsometimesdummycoded[4](detailswillbeprovidedinSection2)beforetheanaly-siscanbeapplied.Today,suchtransformationfunctionalitiesarerarelyprovidedineitherbigSQLorbigMLsystems,whichmeanstheyhavetobeimplementedbyusers.Onecanchoosetoim-plementthesetransformationfunctionsoutsidebothsystems,us-ingherpreferreddatatransformationframework,e.g,MapReduce.But,thisintroducesanotherhop,henceextraoverhead,betweenSQLandMLsystems.AbetterapproachwouldbetoincorporatetransformationsineitherSQLorMLsystems.Inordertoprovideagenericsolution,weleveragetheextensibility(e.gUDFs)ofbigSQLsystemsandproposeanIn-SQLtransformationapproach.Infact,wefoundthatmostcommondatatransformationsbetweenSQLandanalyticscanbeimplementedthroughUDFsbyexploit-ingthemassiveparallelisminsidebigSQLsystems.Datatransfer,ontheotherhand,dealswithhowtheoutputofaSQLsystemispassedovertotheMLsystemforprocessing.WhentheSQLsystemrequiresalonghaultoproducetheoutput,thestraightforwardapproachofhandingoverﬁlesonasharedﬁlesys-temmaybepreferredforfaulttolerancereasons.Buttheextraﬁlesystemwriteandreadcanbeaperformancehurdle.Anotherim-portantissueaboutthestraightforwardapproachisthefactthattheentireoutputofthetransformationstepneedstobeproducedandmaterialized(ablockingoperation)beforeitcanbeingestedintotheMLsystem.Inthispaper,weproposeageneralapproachtoparalleldatastreamingbetweenthesetwosystems.ThisapproachavoidstouchingtheﬁlesystembetweenSQLandMLsystems,andcanbeusedbyanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatforingestingdata(infact,allMLsystemsonHadoopdo)inparallel.Cachingisacommontechniqueusedindistributedsystemstoreducecommunicationcosts.Inthispaper,weexplorecachingintermediateorﬁnalresultsofthetransformationsteptohelpsig-niﬁcantlyreducethecostsofconnectingbigSQLsystemswithbigMLsystems.Mostoftentheintermediateresultsthatarerequiredbytherecodingtransformationscanbeprecomputedandreused.NotethattheneedforintegratingSQLandMLexistedevenbeforetheeraofbigdata.PeoplehavebeenfetchingdatafromdatabasesandfeedingthemtoMLsoftwares,suchasR[19],inthepast.Butsincethedataexchangedbetweenthetwosystemsweresmall,datatransformationandtransferwerenotchallengingprob-lems.Forexample,therearefunctionsprovidedinR(sequentialimplementations)forcommondatatransformations.Datatransfer,ontheotherhand,isusuallydonethroughpassingphysicalﬁlesaround.However,thisoldwayofsequentiallytransformingdataandpassingﬁlesaroundisofteninfeasiblewhenhugevolumesofdataareinvolved.ExploitingthemassiveparallelisminsideandbetweenbigSQLandbigMLsystemsisanecessitytoguaranteeperformance,andthisisexactlywhatwestrivetoachieveinthispaper.Thecontributionsofthispaperareasfollows:•WeﬁrstproposeanIn-SQLapproachtoincorporatecommondatatransformationsforanalyticsinsidebigSQLsystemsthroughUDFs,byfullyexploitingthemassiveparallelismofthebigSQLsystems.•Wethenintroduceageneralapproachtotransferdatabe-tweenbigSQLandbigMLsystemsinaparallelstreamingfashion,withouttouchingtheﬁlesystem.•WefurtherexplorecachingtechniquestoreducethecostsofconnectingbigSQLandbigMLsystems.2.IN-SQLDATATRANSFORMATIONMostbigSQLsystemstodayhaveUDFsupportforextensibil-ity,whichmakesitfeasibletoemployagenericIn-SQLsolutionforcommontransformationsforML.Wewillusethetwomostcom-montransformations,recodingofcategoricalvariablesanddummycoding,asexamplestodemonstratehowthesetransformationscanbeimplementedinparallelfashionsusingUDFs.Somelesscom-montransformations,suchaseffectcodingandorthogonalcod-ing[6],canbeimplementedinsimilarwaysasdummycoding.2.1RecodingofCategoricalVariablesMostdatatransformationbetweenSQLandMLsystemsdealswithcategoricalvariables.ThisisbecausecategoricalvariablesareusuallyrepresentedasstringﬁeldsinSQLsystems,butitisveryhardandinefﬁcienttohandlestringvaluesinanalytics.Asaresult,mostMLsystemspreferhandlingnumericvaluesonly.Oneofthemostcommondatatransformation,therefore,isrecodingofcate-goricalvariables[5].Figure1(b)showsanexamplerecodingofthecategoricalﬁeldsgenderandabandonedinthetableshowninFigure1(a)(ThistablecouldbetheresultofaqueryinaSQLsys-tem).Therecodednumericvaluesareusuallyconsecutiveintegersstartingfrom1.Here,fortheﬁeldgender,thevalue‘F’isre-codedto1and‘M’isrecodedto2.Andfortheﬁeldabandoned,‘Yes’and‘No’arerecodedto1and2respectively.Theaboverecodingisseeminglysimple.Inacentralizedenvi-ronment,itonlyrequiresonepassofdatatoperformtherecodingofallcategoricalﬁelds,assumingthenumberofdistinctvaluesforeachﬁeldisnotlarge.Thiscentralizedalgorithmsimplykeepstrackofarunningmapofcurrentrecodedvaluesforeachcategor-icalﬁeldwhilescanningthroughthedata.Ifavalueofaﬁeldhasbeenseenbefore,itjustusesthemaptorecodeit,otherwiseanewrecodingisaddedtothemap.Inadistributedenvironment,however,atwo-phaseapproachisneeded.Intheﬁrstphase,eachlocalworkercomputesitsdistinctvaluesforeachcategoricalﬁeldinitslocalpartition,andthenex-changesthelocalliststoobtaintheglobaldistinctvalues.Inthesecondpassofthedata,wecanusetheglobaldistinctvaluestoperformtherecoding.ThistwopassalgorithmscanbeeasilyimplementedusingacombinationofUDFsandSQLstatements.Forexample,intheﬁrstpass,wecanimplementaparalleltableUDF,whichinparal-lelreadsitslocalpartitionofthetableandgenerateanothertablewithtwoﬁeldscolNameandcolVal,whichcontainsthelo-caluniquevaluesforeachcategoricalcolumn.Forexample,thereturnedrecordsinalocalpartitionmightbe{(‘gender’,‘F’),(‘gender’,‘M’),(‘abandoned’,‘Yes’)}.TheserecordscanthenbepassedtoaSELECTDISTINCTcolName,colValueFROM...state-menttocomputetheglobaluniquevalues.WecanalsointroduceanothertableUDFtoaddarecodedvalueﬁeldrecodeValtotheresults,generatingrecodemappingrecordslike{(‘gender’,‘F’,1),(‘gender’,‘M’,2),(‘abandoned’,‘Yes’,1),(‘abandoned’,‘No’,2)}.Let’sdenotetheoriginaltableasTandtherecodemaptableasM,thentheﬁnalrecodinginthesecondpasscanbesimplyimplementedbyajoinlikebelow:673

agegenderamountabandoned57'F'108.00'Yes'40'M'57.98'Yes'35'F'265.97'No'(a)originaltableagegenderamountabandoned571108.00140257.981351265.972(b)recodingagefemalemaleamountabandoned5710108.001400157.9813510265.972(c)dummycodingFigure1:RecodinganddummycodingofcategoricalvariablesSELECTT.age,Mg.recodeValasgender,T.mount,Ma.recodeValasabandonedFROMT,MasMg,MasMaWHEREMg.colName=‘gender’ANDT.gender=Mg.colValANDMa.colName=‘abandoned’ANDT.abandoned=Ma.colValAlthoughonecoulduseSQLqueriestocomputethedistinctval-ues,eachcolumnthatneedstoberecodedwouldresultinsuchanSQLquery,andwouldrequireonepassofthedata.UsingUDFs,wecanscanthedataonceandcomputethedistinctvaluesforallrequiredcolumns.Notethatalthoughcategoricalvaluesarerepresentedasstringsintables,somemoderncolumnstoresareabletoexploitdictionarycompressiontophysicallystorestringvaluesasintegers.Utiliz-ingtheseintegersdirectlyastherecodedvaluesforMLsystemsisaninterestingdirection.However,thereareanumberofchal-lenges.Firstofall,theinternalphysicaldictionaryencodingisusuallynotexposedtousers,thusutilizingtheencodedintegersisdifﬁcultorevenimpossibleinageneralapproachusingUDFs.Sec-ond,mostdictionarycompressionforbigSQLsystems,suchasintheParquetformat[18]forImpalaandORCformat[17]forHive,isappliedonlyforalocalpartitionofdata.Therefore,wecan-notdirectlyusethelocalencodedintegersfortheglobalrecoding.Lastly,someMLsystems,suchasSystemML[9],requirethere-codedcategoricalvaluestobeconsecutiveintegersstartingfrom1.Somedictinarycompressionalgorithmsmaynotproduceconsecu-tiveintegers.Moreover,therecodingneedstobedoneonﬁltereddata,andhencewemayhavetorecodethevaluesagain.2.2DummyCodingSomeMLalgorithms,suchasSVMandlogisticregression,re-quiregeneratingbinaryfeaturesfromacategoricalvariablebeforeinvokingthealgorithms.Thistransformationiscalleddummycod-ing[4].Peoplealsocallitone-hotencodingorone-of-Kencoding.Figure1(c)showsanexampledummycodingforthegenderﬁeldintherecodedtableofFigure1(b).Indummycoding,acategori-calvariablewithKdistinctvaluesissplitintoKbinaryvariables.Assumingthecategoricalvariablehasalreadybeenrecoded,thentheoriginalvariablewithvalueiresultsintheithbinaryvariabletobe1,andtheremainingK 1variablestobe0.ToimplementdummycodinginbigSQLsystems,weonlyneedaparalleltableUDFthattakesinthenumberofdistinctvaluesforeachcategoricalvariable(alreadyobtainedduringrecodingphase)andscansthrougheachpartitiontoperformthedummycodinginparallel.3.PARALLELSTREAMINGDATATRANS-FERInthissection,wedescribeourapproachtoparallelstreamingdatatransfer.Therearetwomaingoalsthatwewanttoachievewhendesigningthestreamingdatatransfermethod:(1)generalityoftheapproachonvariousbigSQLandbigMLsystems,and(2)exploitationofthemassiveparallelismbetweenthetwosystems.SQL Worker 1SQL Worker 2MLWorker 2MLWorker 3MLWorker 4MLWorker 1CoordinatorSQL_IP1SQL_IP2ML_IP1ML_IP2ML_IP3ML_IP4ML Job(1) register(2) launch(3) input splits(4) register(5) match          making(6) ML workers to connect(6) SQL worker to connect(7) establish connection(8) data transferFigure2:InformationanddataﬂowinparallelstreamingdatatransferToachievegenerality,weagainexploittheUDFextensibilityinthebigSQLsystemsandextendtheHadoop’sInputFormatinterfaceinthebigMLsystems.Infact,mostexistingbigMLsystems[9,1,20]caninputdatathroughtheInputFormatinterface.So,ausercanchooseanyoftheexistingbigMLsystemtoruntheanalytics.TheonlychangeshehastomakeistouseourspecializedSQLStream-InputFormatinthejobconﬁguration.Toexploitthemassiveparal-lelismbetweentwoindependentdistributedsystems,weintroducealongstandingcoordinatorservicetohelpbridgethetwosystemstoestablishparallelcommunicationchannels.Inaddition,wetrytotakeadvantageofdatalocalityasmuchaspossiblewhenthebigSQLandbigMLsystemssharethesameclusterresources.Figure2showsthedetailedinformationanddataﬂowinourparalleldatastreamingmethod.ThedatatransferstartsfromtheparalleltableUDFintheSQLsystem.ThisUDFtakesinasinputsthetabletobetransferred,theIPandportnumberofthecoordina-tor,aswellasthecommandandargumentstoinvokethedesiredalgorithmofthetargetMLsystem.WhenthisUDFisexecutedineachSQLworker,itﬁrstconnectstothecoordinator,notiﬁesthecoordinatorofitsownworkerid,IPaddress,andthetotalnumberofactiveSQLworkers,andalsopassesalongthecommandandar-gumentsofthetargetMLalgorithm(step1inFigure2).WhenalltheSQLworkershaveregistered,thecoordinatorlaunchestheMLjobwiththeprovidedcommandandarguments(step2).WhentheMLjobtriestospawntaskstoreaddata,itﬁrstcreatesanInputFormatobject.InputFormathasamemberfunctioncalledgetInputSplits(),whichisresponsiblefordividingtheinputdataintosubsets.EachsubsetiscalledanInputSplitandisconsumedbyoneMLworker.Inotherwords,thenumberofInputSplitsequals 

 

671

10.5441/002/edbt.2015.67

AGenericSolutiontoIntegrateSQLandAnalyticsforBigDataNickR.Katsipoulakis1⇤,YuanyuanTian2,FatmaÖzcan2,BertholdReinwald2,HamidPirahesh21UniversityofPittsburghkatsip@cs.pitt.edu2IBMAlmadenResearchCenter{ytian,fozcan,reinwald,pirahesh}@us.ibm.comABSTRACTThereisaneedtointegrateSQLprocessingwithmoreadvancedmachinelearning(ML)analyticstodriveactionableinsightsfromlargevolumesofdata.Asaﬁrststeptowardsthisintegration,westudyhowtoefﬁcientlyconnectbigSQLsystems(eitherMPPdatabasesornew-generationSQL-on-Hadoopsystems)withdis-tributedbigMLsystems.Weidentifytwoimportantchallengestoaddressintheintegrateddataanalyticspipeline:datatransforma-tion,howtoefﬁcientlytransformSQLdataintoaformsuitableforML,anddatatransfer,howtoefﬁcientlyhandoverSQLdatatoMLsystems.Forthedatatransformationproblem,weproposeanIn-SQLapproachtoincorporatecommondatatransformationsforMLinsideSQLsystemsthroughextendeduser-deﬁnedfunctions(UDFs),byexploitingthemassiveparallelismofthebigSQLsys-tems.WeproposeandstudyageneralmethodfortransferringdatabetweenbigSQLandbigMLsystemsinaparallelstreamingfash-ion.Furthermore,weexplorecachingintermediateorﬁnalresultsofdatatransformationtoimprovetheperformance.Ourtechniquesaregeneric:theyapplytoanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatstoingestinputdata.1.INTRODUCTIONEnterprisesareemployingvariousbigdatatechnologiestopro-cesshugevolumesofdataanddriveactionableinsights.Dataware-housesintegrateandconsolidateenterprisedatafrommanyopera-tionalsources,andaretheprimarydatasourceformanyanalyticalapplications,whetheritisreportingormachinelearning(ML).Tra-ditionallydatawarehouseshasbeenimplementedusinglarge-scaleMPPSQLdatabases,suchasIBMDB2,OracleExadata,TeraData,andGreenplum.Recently,weobservethatenterprisesarecreatingHadoopwarehousesinHDFSandHadoopecosystem,usingSQL-on-HadooptechnologieslikeIBMBigSQL[13],Hive[21],andImpala[14].Inthispaper,weusethetermbigSQLsystemstorefertoboththelarge-scaleMPPdatabasesaswellastheSQL-on-Hadoopsystems.Togainactionableinsights,enterprisesneedtoruncomplexan-alyticsontheirwarehousedata.TherehasbeensomeworksthatembedMLinsideSQLsystems,throughuserdeﬁnedfunctions⇤TheworkdescribedinthispaperwasdonewhiletheauthorwasworkingatIBMAlmadenResearchCenter©2015,Copyrightiswiththeauthors.PublishedinProc.18thInterna-tionalConferenceonExtendingDatabaseTechnology(EDBT),March23-27,2015,Brussels,Belgium:ISBN978-3-89318-067-7,onOpenProceed-ings.org.DistributionofthispaperispermittedunderthetermsoftheCre-ativeCommonslicenseCC-by-nc-nd4.0.(UDFs).WerefertothisapproachastheIn-SQLanalyticsap-proach.SuchexamplesincludeHivemall[12]forHive,andBis-march[7]whichisincorporatedintotheMadlibanalyticslibrary[11]forGreenplumandImpala[22].However,throughUDFs,onlyalimitednumberofMLalgorithmscanbesupported.Forexam-ple,onlyconvexoptimizationproblemscanbeimplementedinBis-march.Withthebigdatarevolution,mostnewdevelopmentsofbigMLalgorithmshappenoutsidetheSQLsystems,andmainlyonbigdataplatformslikeHadoop.Therearemanyoptions,suchasML-Lib[20],SystemML[9],andMahout[1],andmoresystemsandspecialalgorithmsaredevelopedeveryday.Enterprisesneedtoin-tegratetheirbigSQLsystemwiththeirbigMLsystem.Thesolu-tionshouldalsobeextensibletoanyfuturesystem.Thefollowingexamplewilldemonstratethisneedofintegration.AnExampleScenario.Adataanalystfromanonlineretailerwantstobuildaclassiﬁcationmodelontheabandonmentofon-lineshoppingcartsinUSA.ThedetailedinformationofonlineshoppingcartsandcustomersarestoredintwotablescartsanduserseitherinaMPPdatabaseorinaSQL-on-Hadoopsys-tem.TopreparethedatathatshelaterwillfeedintoanSVMalgorithm,theanalystneedstocombinethetwotablesandex-tractthethreeneededfeatures,thecustomer’sage,genderandthedollaramountoftheshoppingcart,aswellastheindicatorﬁeldabandonedforbuildingtheclassiﬁcationmodel.ThisdatapreparationcanbeeasilyexpressedasaSQLqueryshownbelow.SELECTU.age,U.gender,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’SparkprovidesauniﬁedenvironmentthatallowscombiningSQL(SparkSQL)andML(MLlib)together.Thedatahandoverbe-tweenSparkSQLandMLlibisthroughthedistributed(andof-tenin-memory)datastructure,calledResilientDistributedDatasets(RDDs).Again,analystsarelimitedbytheMLalgorithmssup-portedinMLlib.IfananalystwantstouseanexistingalgorithminMahoutorifshehasherownanalyticsalgorithmalreadyimple-mentedinMapReduce,shehastowritethedataintoHDFS,runheranalyticsalgorithm,andstoreresultsbackintoHDFS.Inaddition,inbothSparkandtheIn-SQLanalyticsapproach,oneislockedinaparticularenvironment.Butinreality,enterprisesneedagenericsolutionthatworkswithmanybigSQLandbigMLsystem,andiseasilyextensibletoanyfuturesystem.ThestraightforwardapproachtoconnectbigSQLandMLsys-temisthroughﬁlesonasharedﬁlesystem,suchasHDFSsincemostbigMLsystemsarerunningonHadoop.Inotherwords,thebigSQLsystemoutputsresultsontoHDFSandthenthebigMLsystemreadsthemfromHDFS.Thisapproachobviouslyincursalotofoverhead.Inthispaper,weexplorewhetherwecandobetter672

thanthisbasicapproach.WeidentifytwomajorchallengeswhenconnectingbigSQLandbigMLsystems:(1)datatransformationand(2)datatransfer.DatatransformationdealswiththefactthatSQLsystemsandMLsystemspreferdataindifferentformats.Forexample,mostMLsystemsworkonnumericvaluesonly.Forcategoricalval-ues(e.g.thegenderofacustomer)normallystoredasstringsinSQLsystems,theyhavetoberecoded[5]andsometimesdummycoded[4](detailswillbeprovidedinSection2)beforetheanaly-siscanbeapplied.Today,suchtransformationfunctionalitiesarerarelyprovidedineitherbigSQLorbigMLsystems,whichmeanstheyhavetobeimplementedbyusers.Onecanchoosetoim-plementthesetransformationfunctionsoutsidebothsystems,us-ingherpreferreddatatransformationframework,e.g,MapReduce.But,thisintroducesanotherhop,henceextraoverhead,betweenSQLandMLsystems.AbetterapproachwouldbetoincorporatetransformationsineitherSQLorMLsystems.Inordertoprovideagenericsolution,weleveragetheextensibility(e.gUDFs)ofbigSQLsystemsandproposeanIn-SQLtransformationapproach.Infact,wefoundthatmostcommondatatransformationsbetweenSQLandanalyticscanbeimplementedthroughUDFsbyexploit-ingthemassiveparallelisminsidebigSQLsystems.Datatransfer,ontheotherhand,dealswithhowtheoutputofaSQLsystemispassedovertotheMLsystemforprocessing.WhentheSQLsystemrequiresalonghaultoproducetheoutput,thestraightforwardapproachofhandingoverﬁlesonasharedﬁlesys-temmaybepreferredforfaulttolerancereasons.Buttheextraﬁlesystemwriteandreadcanbeaperformancehurdle.Anotherim-portantissueaboutthestraightforwardapproachisthefactthattheentireoutputofthetransformationstepneedstobeproducedandmaterialized(ablockingoperation)beforeitcanbeingestedintotheMLsystem.Inthispaper,weproposeageneralapproachtoparalleldatastreamingbetweenthesetwosystems.ThisapproachavoidstouchingtheﬁlesystembetweenSQLandMLsystems,andcanbeusedbyanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatforingestingdata(infact,allMLsystemsonHadoopdo)inparallel.Cachingisacommontechniqueusedindistributedsystemstoreducecommunicationcosts.Inthispaper,weexplorecachingintermediateorﬁnalresultsofthetransformationsteptohelpsig-niﬁcantlyreducethecostsofconnectingbigSQLsystemswithbigMLsystems.Mostoftentheintermediateresultsthatarerequiredbytherecodingtransformationscanbeprecomputedandreused.NotethattheneedforintegratingSQLandMLexistedevenbeforetheeraofbigdata.PeoplehavebeenfetchingdatafromdatabasesandfeedingthemtoMLsoftwares,suchasR[19],inthepast.Butsincethedataexchangedbetweenthetwosystemsweresmall,datatransformationandtransferwerenotchallengingprob-lems.Forexample,therearefunctionsprovidedinR(sequentialimplementations)forcommondatatransformations.Datatransfer,ontheotherhand,isusuallydonethroughpassingphysicalﬁlesaround.However,thisoldwayofsequentiallytransformingdataandpassingﬁlesaroundisofteninfeasiblewhenhugevolumesofdataareinvolved.ExploitingthemassiveparallelisminsideandbetweenbigSQLandbigMLsystemsisanecessitytoguaranteeperformance,andthisisexactlywhatwestrivetoachieveinthispaper.Thecontributionsofthispaperareasfollows:•WeﬁrstproposeanIn-SQLapproachtoincorporatecommondatatransformationsforanalyticsinsidebigSQLsystemsthroughUDFs,byfullyexploitingthemassiveparallelismofthebigSQLsystems.•Wethenintroduceageneralapproachtotransferdatabe-tweenbigSQLandbigMLsystemsinaparallelstreamingfashion,withouttouchingtheﬁlesystem.•WefurtherexplorecachingtechniquestoreducethecostsofconnectingbigSQLandbigMLsystems.2.IN-SQLDATATRANSFORMATIONMostbigSQLsystemstodayhaveUDFsupportforextensibil-ity,whichmakesitfeasibletoemployagenericIn-SQLsolutionforcommontransformationsforML.Wewillusethetwomostcom-montransformations,recodingofcategoricalvariablesanddummycoding,asexamplestodemonstratehowthesetransformationscanbeimplementedinparallelfashionsusingUDFs.Somelesscom-montransformations,suchaseffectcodingandorthogonalcod-ing[6],canbeimplementedinsimilarwaysasdummycoding.2.1RecodingofCategoricalVariablesMostdatatransformationbetweenSQLandMLsystemsdealswithcategoricalvariables.ThisisbecausecategoricalvariablesareusuallyrepresentedasstringﬁeldsinSQLsystems,butitisveryhardandinefﬁcienttohandlestringvaluesinanalytics.Asaresult,mostMLsystemspreferhandlingnumericvaluesonly.Oneofthemostcommondatatransformation,therefore,isrecodingofcate-goricalvariables[5].Figure1(b)showsanexamplerecodingofthecategoricalﬁeldsgenderandabandonedinthetableshowninFigure1(a)(ThistablecouldbetheresultofaqueryinaSQLsys-tem).Therecodednumericvaluesareusuallyconsecutiveintegersstartingfrom1.Here,fortheﬁeldgender,thevalue‘F’isre-codedto1and‘M’isrecodedto2.Andfortheﬁeldabandoned,‘Yes’and‘No’arerecodedto1and2respectively.Theaboverecodingisseeminglysimple.Inacentralizedenvi-ronment,itonlyrequiresonepassofdatatoperformtherecodingofallcategoricalﬁelds,assumingthenumberofdistinctvaluesforeachﬁeldisnotlarge.Thiscentralizedalgorithmsimplykeepstrackofarunningmapofcurrentrecodedvaluesforeachcategor-icalﬁeldwhilescanningthroughthedata.Ifavalueofaﬁeldhasbeenseenbefore,itjustusesthemaptorecodeit,otherwiseanewrecodingisaddedtothemap.Inadistributedenvironment,however,atwo-phaseapproachisneeded.Intheﬁrstphase,eachlocalworkercomputesitsdistinctvaluesforeachcategoricalﬁeldinitslocalpartition,andthenex-changesthelocalliststoobtaintheglobaldistinctvalues.Inthesecondpassofthedata,wecanusetheglobaldistinctvaluestoperformtherecoding.ThistwopassalgorithmscanbeeasilyimplementedusingacombinationofUDFsandSQLstatements.Forexample,intheﬁrstpass,wecanimplementaparalleltableUDF,whichinparal-lelreadsitslocalpartitionofthetableandgenerateanothertablewithtwoﬁeldscolNameandcolVal,whichcontainsthelo-caluniquevaluesforeachcategoricalcolumn.Forexample,thereturnedrecordsinalocalpartitionmightbe{(‘gender’,‘F’),(‘gender’,‘M’),(‘abandoned’,‘Yes’)}.TheserecordscanthenbepassedtoaSELECTDISTINCTcolName,colValueFROM...state-menttocomputetheglobaluniquevalues.WecanalsointroduceanothertableUDFtoaddarecodedvalueﬁeldrecodeValtotheresults,generatingrecodemappingrecordslike{(‘gender’,‘F’,1),(‘gender’,‘M’,2),(‘abandoned’,‘Yes’,1),(‘abandoned’,‘No’,2)}.Let’sdenotetheoriginaltableasTandtherecodemaptableasM,thentheﬁnalrecodinginthesecondpasscanbesimplyimplementedbyajoinlikebelow:673

agegenderamountabandoned57'F'108.00'Yes'40'M'57.98'Yes'35'F'265.97'No'(a)originaltableagegenderamountabandoned571108.00140257.981351265.972(b)recodingagefemalemaleamountabandoned5710108.001400157.9813510265.972(c)dummycodingFigure1:RecodinganddummycodingofcategoricalvariablesSELECTT.age,Mg.recodeValasgender,T.mount,Ma.recodeValasabandonedFROMT,MasMg,MasMaWHEREMg.colName=‘gender’ANDT.gender=Mg.colValANDMa.colName=‘abandoned’ANDT.abandoned=Ma.colValAlthoughonecoulduseSQLqueriestocomputethedistinctval-ues,eachcolumnthatneedstoberecodedwouldresultinsuchanSQLquery,andwouldrequireonepassofthedata.UsingUDFs,wecanscanthedataonceandcomputethedistinctvaluesforallrequiredcolumns.Notethatalthoughcategoricalvaluesarerepresentedasstringsintables,somemoderncolumnstoresareabletoexploitdictionarycompressiontophysicallystorestringvaluesasintegers.Utiliz-ingtheseintegersdirectlyastherecodedvaluesforMLsystemsisaninterestingdirection.However,thereareanumberofchal-lenges.Firstofall,theinternalphysicaldictionaryencodingisusuallynotexposedtousers,thusutilizingtheencodedintegersisdifﬁcultorevenimpossibleinageneralapproachusingUDFs.Sec-ond,mostdictionarycompressionforbigSQLsystems,suchasintheParquetformat[18]forImpalaandORCformat[17]forHive,isappliedonlyforalocalpartitionofdata.Therefore,wecan-notdirectlyusethelocalencodedintegersfortheglobalrecoding.Lastly,someMLsystems,suchasSystemML[9],requirethere-codedcategoricalvaluestobeconsecutiveintegersstartingfrom1.Somedictinarycompressionalgorithmsmaynotproduceconsecu-tiveintegers.Moreover,therecodingneedstobedoneonﬁltereddata,andhencewemayhavetorecodethevaluesagain.2.2DummyCodingSomeMLalgorithms,suchasSVMandlogisticregression,re-quiregeneratingbinaryfeaturesfromacategoricalvariablebeforeinvokingthealgorithms.Thistransformationiscalleddummycod-ing[4].Peoplealsocallitone-hotencodingorone-of-Kencoding.Figure1(c)showsanexampledummycodingforthegenderﬁeldintherecodedtableofFigure1(b).Indummycoding,acategori-calvariablewithKdistinctvaluesissplitintoKbinaryvariables.Assumingthecategoricalvariablehasalreadybeenrecoded,thentheoriginalvariablewithvalueiresultsintheithbinaryvariabletobe1,andtheremainingK 1variablestobe0.ToimplementdummycodinginbigSQLsystems,weonlyneedaparalleltableUDFthattakesinthenumberofdistinctvaluesforeachcategoricalvariable(alreadyobtainedduringrecodingphase)andscansthrougheachpartitiontoperformthedummycodinginparallel.3.PARALLELSTREAMINGDATATRANS-FERInthissection,wedescribeourapproachtoparallelstreamingdatatransfer.Therearetwomaingoalsthatwewanttoachievewhendesigningthestreamingdatatransfermethod:(1)generalityoftheapproachonvariousbigSQLandbigMLsystems,and(2)exploitationofthemassiveparallelismbetweenthetwosystems.SQL Worker 1SQL Worker 2MLWorker 2MLWorker 3MLWorker 4MLWorker 1CoordinatorSQL_IP1SQL_IP2ML_IP1ML_IP2ML_IP3ML_IP4ML Job(1) register(2) launch(3) input splits(4) register(5) match          making(6) ML workers to connect(6) SQL worker to connect(7) establish connection(8) data transferFigure2:InformationanddataﬂowinparallelstreamingdatatransferToachievegenerality,weagainexploittheUDFextensibilityinthebigSQLsystemsandextendtheHadoop’sInputFormatinterfaceinthebigMLsystems.Infact,mostexistingbigMLsystems[9,1,20]caninputdatathroughtheInputFormatinterface.So,ausercanchooseanyoftheexistingbigMLsystemtoruntheanalytics.TheonlychangeshehastomakeistouseourspecializedSQLStream-InputFormatinthejobconﬁguration.Toexploitthemassiveparal-lelismbetweentwoindependentdistributedsystems,weintroducealongstandingcoordinatorservicetohelpbridgethetwosystemstoestablishparallelcommunicationchannels.Inaddition,wetrytotakeadvantageofdatalocalityasmuchaspossiblewhenthebigSQLandbigMLsystemssharethesameclusterresources.Figure2showsthedetailedinformationanddataﬂowinourparalleldatastreamingmethod.ThedatatransferstartsfromtheparalleltableUDFintheSQLsystem.ThisUDFtakesinasinputsthetabletobetransferred,theIPandportnumberofthecoordina-tor,aswellasthecommandandargumentstoinvokethedesiredalgorithmofthetargetMLsystem.WhenthisUDFisexecutedineachSQLworker,itﬁrstconnectstothecoordinator,notiﬁesthecoordinatorofitsownworkerid,IPaddress,andthetotalnumberofactiveSQLworkers,andalsopassesalongthecommandandar-gumentsofthetargetMLalgorithm(step1inFigure2).WhenalltheSQLworkershaveregistered,thecoordinatorlaunchestheMLjobwiththeprovidedcommandandarguments(step2).WhentheMLjobtriestospawntaskstoreaddata,itﬁrstcreatesanInputFormatobject.InputFormathasamemberfunctioncalledgetInputSplits(),whichisresponsiblefordividingtheinputdataintosubsets.EachsubsetiscalledanInputSplitandisconsumedbyoneMLworker.Inotherwords,thenumberofInputSplitsequals674

tothenumberofMLworkers.WecustomizedthegetInputSplitsmethodtocontactthecoordinatortodecideontheInputSplits(step3).LetnbethenumberofSQLworkersandmbethenumberofInputSplits.Ifmisnotpre-speciﬁedbytheparticularMLal-gorithm,thenwealwayssetm=n⇥k,wherekisaparametertocontrolthedegreeofparallelismintheMLjob.WedividetheneededmInputSplitsevenlyintongroups,witheachgroupcor-respondingtothedatafromoneSQLworker,asdemonstratedinFigure2.Totakeadvantageofthepotentiallocality,wealsopro-videthelocationsforeachInputSplitwherethedataforthesplitwouldbelocal.Inparticular,foreachInputSplitcorrespondingtotheithSQLworker,weusetheIPaddressofthisSQLworkerasthelocationoftheInputSplit.Withtheprovidedlocations,whentheMLjobspawnstheMLworkerstoreaddata,ittriestocolo-cate,whenpossible,inabesteffortmanner,theMLworkerswiththecorrespondingSQLworkers,sothatdatatransferdoesnotincurnetworkI/O.AftertheMLworkersarespawned,theyregisterthemselvesbacktothecoordinator(step4inFigure2).Then,thecoordinatormatchestheIPofeachSQLworkerwiththeIPsofitscorrespond-ingMLworkers(step5),andsubsequentlysendsthematchedin-formationbacktotheworkersonbothsides(step6).Now,thejobofthecoordinatorisdone.Finally,theSQLworkersandtheMLworkersestablishtheTCPsocketconnections(step7),beforetheactualdatatransferstarts(step8).EachSQLworkersendsdatatoitsMLworkersinaroundrobinfashion.InsideaSQLworker,thereisasend-bufferassociatedwitheachtargetMLworkerforbufferingthesentdata.Similarly,eachMLworkerhasareceive-buffertobufferthereceiveddatafromitscorrespondingSQLworker.Thesizesofthebuffersarecontrollablesystemparameters.IfanMLworkerisslowtoingestitsdataandthecorrespondingsendbufferbecomesfull,wecanspillitontothelocaldiskstosyn-cronizetheproducerandconsumers.4.QUERYREWRITERFORDATATRANS-FORMATIONANDTRANSFERAlthoughwehaveprovidedvariousUDFsforthecommondatatransformationandparalleldatastreaming,itisstilladifﬁculttaskfortheuserstocomposethequeriestoinvoketheseUDFs.Foreaseofuse,weprovideaqueryrewriteroutsidetheSQLsystems.AuserprovidesthisqueryrewriterwithherSQLquery(suchastheexamplequeryinSection1),thetransformationsneededontheresultsofthequery,andifparalleldatastreamingisneeded,thenecessaryinformationforcallingthetargetMLalgorithm.Then,thequeryrewriterwillextendthegivenqueryintoanotherquerywithUDFs,andotheroperationstoperformtherequiredtransfor-mationsandthedatatransfer.5.CACHINGWhensimilardatatransformationsarerepeatedbetweenabigSQLsystemandabigMLsystem,wecanexploitcachingtoreducethecost.Weidentiﬁedtwocasesofcaching,assumingthereisnodataupdate:(1)cachingfullytransformeddata,and(2)cachingintermediaterecodemaps.5.1CachingFullyTransformedDataInthiscase,wecachethefullytransformeddatainthebigSQLsystembystoringitasamaterializedvieworanactualHDFStable.IflateranotherMLalgorithmneedstoberunonthedataresultedfromthesameSQLqueries,wecandirectlyreusethestoreddata,thussavingthecostoftheSQLqueriesandthedatatransformationalltogether.Thissituationhappens,forexample,whenananalystwantstorunanumberofclassiﬁcationalgorithms,suchasSVM,logisticregression,naiveBayesanddecisiontrees,tocomparethequalityofdifferentclassiﬁersonaparticulardataset.Besidestheabovecase,thefullytransformeddatacanalsobereusedifasubsetofthetransformeddataisneeded.Let’staketheexamplescenarioinSection1asaninstance.Ifwecachethefullytransformedresultofthisquery,andlaterweencounteranotherqueryshownbelowasthedatapreparationforanMLalgorithm,wecanfullyutilizethecacheddata,withoutrunningthequeryandtransformingthequeryresult.SELECTU.age,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’ANDU.gender=‘F’Thereasonthatwecanfullyutilizethecachedresultisthatthisnewquerysatisfythefollowingconditions:1.Itcontainsthesametablesinthefromclause,andthesamejoinconditionsandpredicatesinthewhereclause,asthequeryforthecacheddata.2.Theprojectedﬁeldsareasubsetoftheprojectedﬁeldsinthequeryforthecacheddata.3.Additionalconjunctivepredicatesareonlyontheprojectedﬁeldsinthequeryforthecacheddata.Infact,ifwedenotetheresultofqueryinSection1asT,thenewquerycanbeexpressedasaselectionandprojectionqueryontableTasbelow.SELECTage,amount,abandonedFROMTWHEREgender=‘F’5.2CachingRecodeMapsTheapplicabilityofcachingthefullytransformeddataislimited.Forthefollowingquery,thecacheddatacannotbeusedatall,asitdoesnotsatisfytheconditionsdescribedintheprevioussubsec-tion.SELECTU.age,U.gender,C.amount,C.nItems,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’ANDC.year=2014However,wenoticethatthisquerysatisﬁesadifferentsetofcon-ditions,whichallowittobeneﬁtfromcachingtheintermediatere-codemap(seeSection2.1)generatedduringthetransformationofthepreviousquery:1.Itcontainsthesametablesinthefromclause,andthesamejoinconditionsinthewhereclause,asthepreviousquery.2.Itcontainspredicatesonthesamesetofﬁeldsasthepred-icatesonthepreviousqueries,andeachpredicateiseitherthesameasorlogicallystrongerthan(e.g.a<18islog-icallystrongerthana20)thecorrespondingpredicateinthepreviousquery.3.Theprojectedcategoricalﬁeldsareasubsetoftheprojectedcategoricalﬁeldsinthepreviousquery.4.Additionalpredicatesareconjunctive.Byreusingtherecodemapforthenewquery,weavoidoneofthetwopassesforthenewqueryduringrecoding.Ascanbeseenabove,thewaywedetectwhetheraquerycanbeneﬁtfromthecacheddataissimilartoutilizingmaterialized 

 

671

10.5441/002/edbt.2015.67

AGenericSolutiontoIntegrateSQLandAnalyticsforBigDataNickR.Katsipoulakis1⇤,YuanyuanTian2,FatmaÖzcan2,BertholdReinwald2,HamidPirahesh21UniversityofPittsburghkatsip@cs.pitt.edu2IBMAlmadenResearchCenter{ytian,fozcan,reinwald,pirahesh}@us.ibm.comABSTRACTThereisaneedtointegrateSQLprocessingwithmoreadvancedmachinelearning(ML)analyticstodriveactionableinsightsfromlargevolumesofdata.Asaﬁrststeptowardsthisintegration,westudyhowtoefﬁcientlyconnectbigSQLsystems(eitherMPPdatabasesornew-generationSQL-on-Hadoopsystems)withdis-tributedbigMLsystems.Weidentifytwoimportantchallengestoaddressintheintegrateddataanalyticspipeline:datatransforma-tion,howtoefﬁcientlytransformSQLdataintoaformsuitableforML,anddatatransfer,howtoefﬁcientlyhandoverSQLdatatoMLsystems.Forthedatatransformationproblem,weproposeanIn-SQLapproachtoincorporatecommondatatransformationsforMLinsideSQLsystemsthroughextendeduser-deﬁnedfunctions(UDFs),byexploitingthemassiveparallelismofthebigSQLsys-tems.WeproposeandstudyageneralmethodfortransferringdatabetweenbigSQLandbigMLsystemsinaparallelstreamingfash-ion.Furthermore,weexplorecachingintermediateorﬁnalresultsofdatatransformationtoimprovetheperformance.Ourtechniquesaregeneric:theyapplytoanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatstoingestinputdata.1.INTRODUCTIONEnterprisesareemployingvariousbigdatatechnologiestopro-cesshugevolumesofdataanddriveactionableinsights.Dataware-housesintegrateandconsolidateenterprisedatafrommanyopera-tionalsources,andaretheprimarydatasourceformanyanalyticalapplications,whetheritisreportingormachinelearning(ML).Tra-ditionallydatawarehouseshasbeenimplementedusinglarge-scaleMPPSQLdatabases,suchasIBMDB2,OracleExadata,TeraData,andGreenplum.Recently,weobservethatenterprisesarecreatingHadoopwarehousesinHDFSandHadoopecosystem,usingSQL-on-HadooptechnologieslikeIBMBigSQL[13],Hive[21],andImpala[14].Inthispaper,weusethetermbigSQLsystemstorefertoboththelarge-scaleMPPdatabasesaswellastheSQL-on-Hadoopsystems.Togainactionableinsights,enterprisesneedtoruncomplexan-alyticsontheirwarehousedata.TherehasbeensomeworksthatembedMLinsideSQLsystems,throughuserdeﬁnedfunctions⇤TheworkdescribedinthispaperwasdonewhiletheauthorwasworkingatIBMAlmadenResearchCenter©2015,Copyrightiswiththeauthors.PublishedinProc.18thInterna-tionalConferenceonExtendingDatabaseTechnology(EDBT),March23-27,2015,Brussels,Belgium:ISBN978-3-89318-067-7,onOpenProceed-ings.org.DistributionofthispaperispermittedunderthetermsoftheCre-ativeCommonslicenseCC-by-nc-nd4.0.(UDFs).WerefertothisapproachastheIn-SQLanalyticsap-proach.SuchexamplesincludeHivemall[12]forHive,andBis-march[7]whichisincorporatedintotheMadlibanalyticslibrary[11]forGreenplumandImpala[22].However,throughUDFs,onlyalimitednumberofMLalgorithmscanbesupported.Forexam-ple,onlyconvexoptimizationproblemscanbeimplementedinBis-march.Withthebigdatarevolution,mostnewdevelopmentsofbigMLalgorithmshappenoutsidetheSQLsystems,andmainlyonbigdataplatformslikeHadoop.Therearemanyoptions,suchasML-Lib[20],SystemML[9],andMahout[1],andmoresystemsandspecialalgorithmsaredevelopedeveryday.Enterprisesneedtoin-tegratetheirbigSQLsystemwiththeirbigMLsystem.Thesolu-tionshouldalsobeextensibletoanyfuturesystem.Thefollowingexamplewilldemonstratethisneedofintegration.AnExampleScenario.Adataanalystfromanonlineretailerwantstobuildaclassiﬁcationmodelontheabandonmentofon-lineshoppingcartsinUSA.ThedetailedinformationofonlineshoppingcartsandcustomersarestoredintwotablescartsanduserseitherinaMPPdatabaseorinaSQL-on-Hadoopsys-tem.TopreparethedatathatshelaterwillfeedintoanSVMalgorithm,theanalystneedstocombinethetwotablesandex-tractthethreeneededfeatures,thecustomer’sage,genderandthedollaramountoftheshoppingcart,aswellastheindicatorﬁeldabandonedforbuildingtheclassiﬁcationmodel.ThisdatapreparationcanbeeasilyexpressedasaSQLqueryshownbelow.SELECTU.age,U.gender,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’SparkprovidesauniﬁedenvironmentthatallowscombiningSQL(SparkSQL)andML(MLlib)together.Thedatahandoverbe-tweenSparkSQLandMLlibisthroughthedistributed(andof-tenin-memory)datastructure,calledResilientDistributedDatasets(RDDs).Again,analystsarelimitedbytheMLalgorithmssup-portedinMLlib.IfananalystwantstouseanexistingalgorithminMahoutorifshehasherownanalyticsalgorithmalreadyimple-mentedinMapReduce,shehastowritethedataintoHDFS,runheranalyticsalgorithm,andstoreresultsbackintoHDFS.Inaddition,inbothSparkandtheIn-SQLanalyticsapproach,oneislockedinaparticularenvironment.Butinreality,enterprisesneedagenericsolutionthatworkswithmanybigSQLandbigMLsystem,andiseasilyextensibletoanyfuturesystem.ThestraightforwardapproachtoconnectbigSQLandMLsys-temisthroughﬁlesonasharedﬁlesystem,suchasHDFSsincemostbigMLsystemsarerunningonHadoop.Inotherwords,thebigSQLsystemoutputsresultsontoHDFSandthenthebigMLsystemreadsthemfromHDFS.Thisapproachobviouslyincursalotofoverhead.Inthispaper,weexplorewhetherwecandobetter672

thanthisbasicapproach.WeidentifytwomajorchallengeswhenconnectingbigSQLandbigMLsystems:(1)datatransformationand(2)datatransfer.DatatransformationdealswiththefactthatSQLsystemsandMLsystemspreferdataindifferentformats.Forexample,mostMLsystemsworkonnumericvaluesonly.Forcategoricalval-ues(e.g.thegenderofacustomer)normallystoredasstringsinSQLsystems,theyhavetoberecoded[5]andsometimesdummycoded[4](detailswillbeprovidedinSection2)beforetheanaly-siscanbeapplied.Today,suchtransformationfunctionalitiesarerarelyprovidedineitherbigSQLorbigMLsystems,whichmeanstheyhavetobeimplementedbyusers.Onecanchoosetoim-plementthesetransformationfunctionsoutsidebothsystems,us-ingherpreferreddatatransformationframework,e.g,MapReduce.But,thisintroducesanotherhop,henceextraoverhead,betweenSQLandMLsystems.AbetterapproachwouldbetoincorporatetransformationsineitherSQLorMLsystems.Inordertoprovideagenericsolution,weleveragetheextensibility(e.gUDFs)ofbigSQLsystemsandproposeanIn-SQLtransformationapproach.Infact,wefoundthatmostcommondatatransformationsbetweenSQLandanalyticscanbeimplementedthroughUDFsbyexploit-ingthemassiveparallelisminsidebigSQLsystems.Datatransfer,ontheotherhand,dealswithhowtheoutputofaSQLsystemispassedovertotheMLsystemforprocessing.WhentheSQLsystemrequiresalonghaultoproducetheoutput,thestraightforwardapproachofhandingoverﬁlesonasharedﬁlesys-temmaybepreferredforfaulttolerancereasons.Buttheextraﬁlesystemwriteandreadcanbeaperformancehurdle.Anotherim-portantissueaboutthestraightforwardapproachisthefactthattheentireoutputofthetransformationstepneedstobeproducedandmaterialized(ablockingoperation)beforeitcanbeingestedintotheMLsystem.Inthispaper,weproposeageneralapproachtoparalleldatastreamingbetweenthesetwosystems.ThisapproachavoidstouchingtheﬁlesystembetweenSQLandMLsystems,andcanbeusedbyanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatforingestingdata(infact,allMLsystemsonHadoopdo)inparallel.Cachingisacommontechniqueusedindistributedsystemstoreducecommunicationcosts.Inthispaper,weexplorecachingintermediateorﬁnalresultsofthetransformationsteptohelpsig-niﬁcantlyreducethecostsofconnectingbigSQLsystemswithbigMLsystems.Mostoftentheintermediateresultsthatarerequiredbytherecodingtransformationscanbeprecomputedandreused.NotethattheneedforintegratingSQLandMLexistedevenbeforetheeraofbigdata.PeoplehavebeenfetchingdatafromdatabasesandfeedingthemtoMLsoftwares,suchasR[19],inthepast.Butsincethedataexchangedbetweenthetwosystemsweresmall,datatransformationandtransferwerenotchallengingprob-lems.Forexample,therearefunctionsprovidedinR(sequentialimplementations)forcommondatatransformations.Datatransfer,ontheotherhand,isusuallydonethroughpassingphysicalﬁlesaround.However,thisoldwayofsequentiallytransformingdataandpassingﬁlesaroundisofteninfeasiblewhenhugevolumesofdataareinvolved.ExploitingthemassiveparallelisminsideandbetweenbigSQLandbigMLsystemsisanecessitytoguaranteeperformance,andthisisexactlywhatwestrivetoachieveinthispaper.Thecontributionsofthispaperareasfollows:•WeﬁrstproposeanIn-SQLapproachtoincorporatecommondatatransformationsforanalyticsinsidebigSQLsystemsthroughUDFs,byfullyexploitingthemassiveparallelismofthebigSQLsystems.•Wethenintroduceageneralapproachtotransferdatabe-tweenbigSQLandbigMLsystemsinaparallelstreamingfashion,withouttouchingtheﬁlesystem.•WefurtherexplorecachingtechniquestoreducethecostsofconnectingbigSQLandbigMLsystems.2.IN-SQLDATATRANSFORMATIONMostbigSQLsystemstodayhaveUDFsupportforextensibil-ity,whichmakesitfeasibletoemployagenericIn-SQLsolutionforcommontransformationsforML.Wewillusethetwomostcom-montransformations,recodingofcategoricalvariablesanddummycoding,asexamplestodemonstratehowthesetransformationscanbeimplementedinparallelfashionsusingUDFs.Somelesscom-montransformations,suchaseffectcodingandorthogonalcod-ing[6],canbeimplementedinsimilarwaysasdummycoding.2.1RecodingofCategoricalVariablesMostdatatransformationbetweenSQLandMLsystemsdealswithcategoricalvariables.ThisisbecausecategoricalvariablesareusuallyrepresentedasstringﬁeldsinSQLsystems,butitisveryhardandinefﬁcienttohandlestringvaluesinanalytics.Asaresult,mostMLsystemspreferhandlingnumericvaluesonly.Oneofthemostcommondatatransformation,therefore,isrecodingofcate-goricalvariables[5].Figure1(b)showsanexamplerecodingofthecategoricalﬁeldsgenderandabandonedinthetableshowninFigure1(a)(ThistablecouldbetheresultofaqueryinaSQLsys-tem).Therecodednumericvaluesareusuallyconsecutiveintegersstartingfrom1.Here,fortheﬁeldgender,thevalue‘F’isre-codedto1and‘M’isrecodedto2.Andfortheﬁeldabandoned,‘Yes’and‘No’arerecodedto1and2respectively.Theaboverecodingisseeminglysimple.Inacentralizedenvi-ronment,itonlyrequiresonepassofdatatoperformtherecodingofallcategoricalﬁelds,assumingthenumberofdistinctvaluesforeachﬁeldisnotlarge.Thiscentralizedalgorithmsimplykeepstrackofarunningmapofcurrentrecodedvaluesforeachcategor-icalﬁeldwhilescanningthroughthedata.Ifavalueofaﬁeldhasbeenseenbefore,itjustusesthemaptorecodeit,otherwiseanewrecodingisaddedtothemap.Inadistributedenvironment,however,atwo-phaseapproachisneeded.Intheﬁrstphase,eachlocalworkercomputesitsdistinctvaluesforeachcategoricalﬁeldinitslocalpartition,andthenex-changesthelocalliststoobtaintheglobaldistinctvalues.Inthesecondpassofthedata,wecanusetheglobaldistinctvaluestoperformtherecoding.ThistwopassalgorithmscanbeeasilyimplementedusingacombinationofUDFsandSQLstatements.Forexample,intheﬁrstpass,wecanimplementaparalleltableUDF,whichinparal-lelreadsitslocalpartitionofthetableandgenerateanothertablewithtwoﬁeldscolNameandcolVal,whichcontainsthelo-caluniquevaluesforeachcategoricalcolumn.Forexample,thereturnedrecordsinalocalpartitionmightbe{(‘gender’,‘F’),(‘gender’,‘M’),(‘abandoned’,‘Yes’)}.TheserecordscanthenbepassedtoaSELECTDISTINCTcolName,colValueFROM...state-menttocomputetheglobaluniquevalues.WecanalsointroduceanothertableUDFtoaddarecodedvalueﬁeldrecodeValtotheresults,generatingrecodemappingrecordslike{(‘gender’,‘F’,1),(‘gender’,‘M’,2),(‘abandoned’,‘Yes’,1),(‘abandoned’,‘No’,2)}.Let’sdenotetheoriginaltableasTandtherecodemaptableasM,thentheﬁnalrecodinginthesecondpasscanbesimplyimplementedbyajoinlikebelow:673

agegenderamountabandoned57'F'108.00'Yes'40'M'57.98'Yes'35'F'265.97'No'(a)originaltableagegenderamountabandoned571108.00140257.981351265.972(b)recodingagefemalemaleamountabandoned5710108.001400157.9813510265.972(c)dummycodingFigure1:RecodinganddummycodingofcategoricalvariablesSELECTT.age,Mg.recodeValasgender,T.mount,Ma.recodeValasabandonedFROMT,MasMg,MasMaWHEREMg.colName=‘gender’ANDT.gender=Mg.colValANDMa.colName=‘abandoned’ANDT.abandoned=Ma.colValAlthoughonecoulduseSQLqueriestocomputethedistinctval-ues,eachcolumnthatneedstoberecodedwouldresultinsuchanSQLquery,andwouldrequireonepassofthedata.UsingUDFs,wecanscanthedataonceandcomputethedistinctvaluesforallrequiredcolumns.Notethatalthoughcategoricalvaluesarerepresentedasstringsintables,somemoderncolumnstoresareabletoexploitdictionarycompressiontophysicallystorestringvaluesasintegers.Utiliz-ingtheseintegersdirectlyastherecodedvaluesforMLsystemsisaninterestingdirection.However,thereareanumberofchal-lenges.Firstofall,theinternalphysicaldictionaryencodingisusuallynotexposedtousers,thusutilizingtheencodedintegersisdifﬁcultorevenimpossibleinageneralapproachusingUDFs.Sec-ond,mostdictionarycompressionforbigSQLsystems,suchasintheParquetformat[18]forImpalaandORCformat[17]forHive,isappliedonlyforalocalpartitionofdata.Therefore,wecan-notdirectlyusethelocalencodedintegersfortheglobalrecoding.Lastly,someMLsystems,suchasSystemML[9],requirethere-codedcategoricalvaluestobeconsecutiveintegersstartingfrom1.Somedictinarycompressionalgorithmsmaynotproduceconsecu-tiveintegers.Moreover,therecodingneedstobedoneonﬁltereddata,andhencewemayhavetorecodethevaluesagain.2.2DummyCodingSomeMLalgorithms,suchasSVMandlogisticregression,re-quiregeneratingbinaryfeaturesfromacategoricalvariablebeforeinvokingthealgorithms.Thistransformationiscalleddummycod-ing[4].Peoplealsocallitone-hotencodingorone-of-Kencoding.Figure1(c)showsanexampledummycodingforthegenderﬁeldintherecodedtableofFigure1(b).Indummycoding,acategori-calvariablewithKdistinctvaluesissplitintoKbinaryvariables.Assumingthecategoricalvariablehasalreadybeenrecoded,thentheoriginalvariablewithvalueiresultsintheithbinaryvariabletobe1,andtheremainingK 1variablestobe0.ToimplementdummycodinginbigSQLsystems,weonlyneedaparalleltableUDFthattakesinthenumberofdistinctvaluesforeachcategoricalvariable(alreadyobtainedduringrecodingphase)andscansthrougheachpartitiontoperformthedummycodinginparallel.3.PARALLELSTREAMINGDATATRANS-FERInthissection,wedescribeourapproachtoparallelstreamingdatatransfer.Therearetwomaingoalsthatwewanttoachievewhendesigningthestreamingdatatransfermethod:(1)generalityoftheapproachonvariousbigSQLandbigMLsystems,and(2)exploitationofthemassiveparallelismbetweenthetwosystems.SQL Worker 1SQL Worker 2MLWorker 2MLWorker 3MLWorker 4MLWorker 1CoordinatorSQL_IP1SQL_IP2ML_IP1ML_IP2ML_IP3ML_IP4ML Job(1) register(2) launch(3) input splits(4) register(5) match          making(6) ML workers to connect(6) SQL worker to connect(7) establish connection(8) data transferFigure2:InformationanddataﬂowinparallelstreamingdatatransferToachievegenerality,weagainexploittheUDFextensibilityinthebigSQLsystemsandextendtheHadoop’sInputFormatinterfaceinthebigMLsystems.Infact,mostexistingbigMLsystems[9,1,20]caninputdatathroughtheInputFormatinterface.So,ausercanchooseanyoftheexistingbigMLsystemtoruntheanalytics.TheonlychangeshehastomakeistouseourspecializedSQLStream-InputFormatinthejobconﬁguration.Toexploitthemassiveparal-lelismbetweentwoindependentdistributedsystems,weintroducealongstandingcoordinatorservicetohelpbridgethetwosystemstoestablishparallelcommunicationchannels.Inaddition,wetrytotakeadvantageofdatalocalityasmuchaspossiblewhenthebigSQLandbigMLsystemssharethesameclusterresources.Figure2showsthedetailedinformationanddataﬂowinourparalleldatastreamingmethod.ThedatatransferstartsfromtheparalleltableUDFintheSQLsystem.ThisUDFtakesinasinputsthetabletobetransferred,theIPandportnumberofthecoordina-tor,aswellasthecommandandargumentstoinvokethedesiredalgorithmofthetargetMLsystem.WhenthisUDFisexecutedineachSQLworker,itﬁrstconnectstothecoordinator,notiﬁesthecoordinatorofitsownworkerid,IPaddress,andthetotalnumberofactiveSQLworkers,andalsopassesalongthecommandandar-gumentsofthetargetMLalgorithm(step1inFigure2).WhenalltheSQLworkershaveregistered,thecoordinatorlaunchestheMLjobwiththeprovidedcommandandarguments(step2).WhentheMLjobtriestospawntaskstoreaddata,itﬁrstcreatesanInputFormatobject.InputFormathasamemberfunctioncalledgetInputSplits(),whichisresponsiblefordividingtheinputdataintosubsets.EachsubsetiscalledanInputSplitandisconsumedbyoneMLworker.Inotherwords,thenumberofInputSplitsequals674

tothenumberofMLworkers.WecustomizedthegetInputSplitsmethodtocontactthecoordinatortodecideontheInputSplits(step3).LetnbethenumberofSQLworkersandmbethenumberofInputSplits.Ifmisnotpre-speciﬁedbytheparticularMLal-gorithm,thenwealwayssetm=n⇥k,wherekisaparametertocontrolthedegreeofparallelismintheMLjob.WedividetheneededmInputSplitsevenlyintongroups,witheachgroupcor-respondingtothedatafromoneSQLworker,asdemonstratedinFigure2.Totakeadvantageofthepotentiallocality,wealsopro-videthelocationsforeachInputSplitwherethedataforthesplitwouldbelocal.Inparticular,foreachInputSplitcorrespondingtotheithSQLworker,weusetheIPaddressofthisSQLworkerasthelocationoftheInputSplit.Withtheprovidedlocations,whentheMLjobspawnstheMLworkerstoreaddata,ittriestocolo-cate,whenpossible,inabesteffortmanner,theMLworkerswiththecorrespondingSQLworkers,sothatdatatransferdoesnotincurnetworkI/O.AftertheMLworkersarespawned,theyregisterthemselvesbacktothecoordinator(step4inFigure2).Then,thecoordinatormatchestheIPofeachSQLworkerwiththeIPsofitscorrespond-ingMLworkers(step5),andsubsequentlysendsthematchedin-formationbacktotheworkersonbothsides(step6).Now,thejobofthecoordinatorisdone.Finally,theSQLworkersandtheMLworkersestablishtheTCPsocketconnections(step7),beforetheactualdatatransferstarts(step8).EachSQLworkersendsdatatoitsMLworkersinaroundrobinfashion.InsideaSQLworker,thereisasend-bufferassociatedwitheachtargetMLworkerforbufferingthesentdata.Similarly,eachMLworkerhasareceive-buffertobufferthereceiveddatafromitscorrespondingSQLworker.Thesizesofthebuffersarecontrollablesystemparameters.IfanMLworkerisslowtoingestitsdataandthecorrespondingsendbufferbecomesfull,wecanspillitontothelocaldiskstosyn-cronizetheproducerandconsumers.4.QUERYREWRITERFORDATATRANS-FORMATIONANDTRANSFERAlthoughwehaveprovidedvariousUDFsforthecommondatatransformationandparalleldatastreaming,itisstilladifﬁculttaskfortheuserstocomposethequeriestoinvoketheseUDFs.Foreaseofuse,weprovideaqueryrewriteroutsidetheSQLsystems.AuserprovidesthisqueryrewriterwithherSQLquery(suchastheexamplequeryinSection1),thetransformationsneededontheresultsofthequery,andifparalleldatastreamingisneeded,thenecessaryinformationforcallingthetargetMLalgorithm.Then,thequeryrewriterwillextendthegivenqueryintoanotherquerywithUDFs,andotheroperationstoperformtherequiredtransfor-mationsandthedatatransfer.5.CACHINGWhensimilardatatransformationsarerepeatedbetweenabigSQLsystemandabigMLsystem,wecanexploitcachingtoreducethecost.Weidentiﬁedtwocasesofcaching,assumingthereisnodataupdate:(1)cachingfullytransformeddata,and(2)cachingintermediaterecodemaps.5.1CachingFullyTransformedDataInthiscase,wecachethefullytransformeddatainthebigSQLsystembystoringitasamaterializedvieworanactualHDFStable.IflateranotherMLalgorithmneedstoberunonthedataresultedfromthesameSQLqueries,wecandirectlyreusethestoreddata,thussavingthecostoftheSQLqueriesandthedatatransformationalltogether.Thissituationhappens,forexample,whenananalystwantstorunanumberofclassiﬁcationalgorithms,suchasSVM,logisticregression,naiveBayesanddecisiontrees,tocomparethequalityofdifferentclassiﬁersonaparticulardataset.Besidestheabovecase,thefullytransformeddatacanalsobereusedifasubsetofthetransformeddataisneeded.Let’staketheexamplescenarioinSection1asaninstance.Ifwecachethefullytransformedresultofthisquery,andlaterweencounteranotherqueryshownbelowasthedatapreparationforanMLalgorithm,wecanfullyutilizethecacheddata,withoutrunningthequeryandtransformingthequeryresult.SELECTU.age,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’ANDU.gender=‘F’Thereasonthatwecanfullyutilizethecachedresultisthatthisnewquerysatisfythefollowingconditions:1.Itcontainsthesametablesinthefromclause,andthesamejoinconditionsandpredicatesinthewhereclause,asthequeryforthecacheddata.2.Theprojectedﬁeldsareasubsetoftheprojectedﬁeldsinthequeryforthecacheddata.3.Additionalconjunctivepredicatesareonlyontheprojectedﬁeldsinthequeryforthecacheddata.Infact,ifwedenotetheresultofqueryinSection1asT,thenewquerycanbeexpressedasaselectionandprojectionqueryontableTasbelow.SELECTage,amount,abandonedFROMTWHEREgender=‘F’5.2CachingRecodeMapsTheapplicabilityofcachingthefullytransformeddataislimited.Forthefollowingquery,thecacheddatacannotbeusedatall,asitdoesnotsatisfytheconditionsdescribedintheprevioussubsec-tion.SELECTU.age,U.gender,C.amount,C.nItems,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’ANDC.year=2014However,wenoticethatthisquerysatisﬁesadifferentsetofcon-ditions,whichallowittobeneﬁtfromcachingtheintermediatere-codemap(seeSection2.1)generatedduringthetransformationofthepreviousquery:1.Itcontainsthesametablesinthefromclause,andthesamejoinconditionsinthewhereclause,asthepreviousquery.2.Itcontainspredicatesonthesamesetofﬁeldsasthepred-icatesonthepreviousqueries,andeachpredicateiseitherthesameasorlogicallystrongerthan(e.g.a<18islog-icallystrongerthana20)thecorrespondingpredicateinthepreviousquery.3.Theprojectedcategoricalﬁeldsareasubsetoftheprojectedcategoricalﬁeldsinthepreviousquery.4.Additionalpredicatesareconjunctive.Byreusingtherecodemapforthenewquery,weavoidoneofthetwopassesforthenewqueryduringrecoding.Ascanbeseenabove,thewaywedetectwhetheraquerycanbeneﬁtfromthecacheddataissimilartoutilizingmaterialized675

viewsinqueryoptimization[10,16]andweextendthequeryrewriterintroducedinSection4toutilizethesetechniques.Whentherewritergetsaquery,itﬁrstchecktoseeifanyoftheexistingmaterializedviewscanbeusedandrewritesthequeryaccordingly.6.DISCUSSIONONFAULTTOLERANCEFaulttoleranceisaveryhardproblemforintegratingbigSQLandbigMLsystems.Firstofall,ifeithertheunderlyingbigSQLsystemorthebigMLsystemlacksfaulttolerancesupport,thewholeintegrationpipelinehastoberestartedfromscratchincaseofafailure.Infact,mostMPPdatabasesdonotsupportmid-queryfailurerecovery.MostSQL-on-Hadoopengines,likeImpala[14]alsosacriﬁcemid-queryrecory.AsforbigMLsystems,MLlibistheonlyoneknowntosupportmid-queryfaulttolerance.Evenbothunderlyingsystemsprovidefaulttoleranceguarantees,westillneedtheconnectionbetweenthetwotoberesilienttofailures.IfdatatransferbetweenthetwosystemsisthroughﬁlesonHDFS,orifthecachedresultsfromthebigSQLsystemcanbedirectlyreusedbythebigMLsystem,thefaulttolerancecanbeguaranteed.Ontheotherhand,ifparalleldatastreaminginSection3isused,morecarehastobetaken.First,weneedthecoordinatorservicetoberesilientitself.ThiscanbeachievedbyusingZookeeper[2].Inaddition,whenthedatatransferbetweenaSQLworkerandanMLworkerfails,duetothefailureofeitherendpointsortheconnection,weneedtonotifythebigSQLsystemtorestarttheSQLworkerandsimultaneouslytellthebigMLsystemtorestartalltheMLworkerscorrespondingtotheSQLworker,sothatthedatatransfercanberesumed.Analternativetoourstreamingdatatransferisutilizinganin-memoryﬁlesystemlikeTachyon[15],whichwouldprovidefault-toleranceguarantees.However,TachyonisstillverySparkandRDDoriented,whereasinthisworkwethrivetobeprovideagenericsolutionthatworksforallbigSQLandbigMLsystems,whethertheyruntheirownnativeprocesses,oruseMapReduceorSpark.7.PRELIMINARYEXPERIMENTSInthissection,wereporttheresultsofourpreliminaryexperi-mentalstudybyusingIBMBigSQL3.0asthebigSQLsystemandSparkMLlibasthebigMLsystem.Weused5serversforallourexperiments.Eachhad2xIntelXeonCPUs@2.20GHz,with6xphysicalcoreseach(12phys-icalcoresintotal),12xSATAdisks,1x10GbitEthernetcard,andatotalof96GBRAM.Eachnoderuns64-bitUbuntuLinux12.04,withaLinuxKernelversion3.2.0-23.OneoftheserverswasusedastheHDFSNameNode,MapReduceJobTracker,SparkmasteraswellasBigSQLheadnode.Theremaining4servershosttheHDFSDataNodes,MapReduceTaskTrackers(9mappersperserver),Sparkworkers(6workersoneachserver)andBigSQLworkers(1workerwithmulti-threadingoneachserver).HDFSreplicationwassetto3.Thesend-bufferandreceive-buffersizeswerebothsetto4KBfortheparalleldatastreaming.WegeneratedsyntheticdatasetsinthecontextoftheexamplequeryscenariodescribedinSection1.Inparticular,wecreateda56GBcartstablewith1billionrecordsand361MBuserstablewith10millionrecords.BothtableswerestoredintextformatonHDFS.WerantheSQLqueryshownintheexampleinSec-tion1,transformedtheresult(recodingthecategoricalvariablesanddummycoding),andpassedtheresulttoMLlibforrunningtheSVMWithSGDalgorithm.Inourexperiments,wereportthetimeforprocessingtheSQLquery,transformingtheresult,transferringthetransformeddatatotheMLjob,andreadingtheinputdatain020040060080010001200naïveinsqlinsql+streamtime (sec)input for mltrsfmprepprepl+trsfmprep+trsfm+inputFigure3:ComparisonofthreeapproachesofconnectingbigSQLandbigMLsystems0100200300400500600no cachecache recode mapscache transformedresulttime (sec)Figure4:EffectofcachingtheMLjob.WedonotreporttheruntimeoftheMLalgorithm,becauseitishighlydependentontheactualdataandthealgorithm(e.ghowmanyiterationstoconverge).Forexample,readingthetransformeddatafromHDFSandrunningtheSVMWithSGDfor10iterationstook774seconds.IntheMLjob,weﬁrstreadtheinputdata,whetheritisfromHDFSorfromparalleldatatransfer,intoaSparkin-memoryRDD.AfterthatwepasstheRDDtotheMLlibSVMWithSGDalgorithm.ThemeasuredtimeofreadinginputintheMLjobisthetimefromthestartofthejobtillthein-memoryRDDisconstructed.Figure3comparesthreeapproachesofconnectingSQLwithMLforbigdata.Inthenaive(denotedasnaiveinFigure3)approach,weuseBigSQLtoexecutetheSQLqueryandmaterializethere-sultonHDFS(prep).Then,weuseathirdtool,Jaql[3],toperformthedatatransformation,sinceJaqlhasbuilt-infunctionsforrecod-ingofcategoricalvariablesanddummycoding(trsfm).Again,theresultiswrittentoHDFS.Finally,SparkMLlibreadsthedataformHDFS(inputforml)andperformstheMLjob.Thebreakdownofexecutiontimesfordifferentstagesisshownintheﬁgure.Thesec-ondapproach,denotedasinsqlintheﬁgure,employstheIn-SQLtransformationmethod(weimplementedtherecodingofcategor-icalvariablesanddummycodinginBigSQLusingUDFs).Inthisapproach,thetransformationiscombinedtogetherwiththeSQLquery,thustheoperationscanbeperformedinapipeline(prep+trsfm).Inthethirdapproach,denotedasinsql+stream,we 

 

671

10.5441/002/edbt.2015.67

AGenericSolutiontoIntegrateSQLandAnalyticsforBigDataNickR.Katsipoulakis1⇤,YuanyuanTian2,FatmaÖzcan2,BertholdReinwald2,HamidPirahesh21UniversityofPittsburghkatsip@cs.pitt.edu2IBMAlmadenResearchCenter{ytian,fozcan,reinwald,pirahesh}@us.ibm.comABSTRACTThereisaneedtointegrateSQLprocessingwithmoreadvancedmachinelearning(ML)analyticstodriveactionableinsightsfromlargevolumesofdata.Asaﬁrststeptowardsthisintegration,westudyhowtoefﬁcientlyconnectbigSQLsystems(eitherMPPdatabasesornew-generationSQL-on-Hadoopsystems)withdis-tributedbigMLsystems.Weidentifytwoimportantchallengestoaddressintheintegrateddataanalyticspipeline:datatransforma-tion,howtoefﬁcientlytransformSQLdataintoaformsuitableforML,anddatatransfer,howtoefﬁcientlyhandoverSQLdatatoMLsystems.Forthedatatransformationproblem,weproposeanIn-SQLapproachtoincorporatecommondatatransformationsforMLinsideSQLsystemsthroughextendeduser-deﬁnedfunctions(UDFs),byexploitingthemassiveparallelismofthebigSQLsys-tems.WeproposeandstudyageneralmethodfortransferringdatabetweenbigSQLandbigMLsystemsinaparallelstreamingfash-ion.Furthermore,weexplorecachingintermediateorﬁnalresultsofdatatransformationtoimprovetheperformance.Ourtechniquesaregeneric:theyapplytoanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatstoingestinputdata.1.INTRODUCTIONEnterprisesareemployingvariousbigdatatechnologiestopro-cesshugevolumesofdataanddriveactionableinsights.Dataware-housesintegrateandconsolidateenterprisedatafrommanyopera-tionalsources,andaretheprimarydatasourceformanyanalyticalapplications,whetheritisreportingormachinelearning(ML).Tra-ditionallydatawarehouseshasbeenimplementedusinglarge-scaleMPPSQLdatabases,suchasIBMDB2,OracleExadata,TeraData,andGreenplum.Recently,weobservethatenterprisesarecreatingHadoopwarehousesinHDFSandHadoopecosystem,usingSQL-on-HadooptechnologieslikeIBMBigSQL[13],Hive[21],andImpala[14].Inthispaper,weusethetermbigSQLsystemstorefertoboththelarge-scaleMPPdatabasesaswellastheSQL-on-Hadoopsystems.Togainactionableinsights,enterprisesneedtoruncomplexan-alyticsontheirwarehousedata.TherehasbeensomeworksthatembedMLinsideSQLsystems,throughuserdeﬁnedfunctions⇤TheworkdescribedinthispaperwasdonewhiletheauthorwasworkingatIBMAlmadenResearchCenter©2015,Copyrightiswiththeauthors.PublishedinProc.18thInterna-tionalConferenceonExtendingDatabaseTechnology(EDBT),March23-27,2015,Brussels,Belgium:ISBN978-3-89318-067-7,onOpenProceed-ings.org.DistributionofthispaperispermittedunderthetermsoftheCre-ativeCommonslicenseCC-by-nc-nd4.0.(UDFs).WerefertothisapproachastheIn-SQLanalyticsap-proach.SuchexamplesincludeHivemall[12]forHive,andBis-march[7]whichisincorporatedintotheMadlibanalyticslibrary[11]forGreenplumandImpala[22].However,throughUDFs,onlyalimitednumberofMLalgorithmscanbesupported.Forexam-ple,onlyconvexoptimizationproblemscanbeimplementedinBis-march.Withthebigdatarevolution,mostnewdevelopmentsofbigMLalgorithmshappenoutsidetheSQLsystems,andmainlyonbigdataplatformslikeHadoop.Therearemanyoptions,suchasML-Lib[20],SystemML[9],andMahout[1],andmoresystemsandspecialalgorithmsaredevelopedeveryday.Enterprisesneedtoin-tegratetheirbigSQLsystemwiththeirbigMLsystem.Thesolu-tionshouldalsobeextensibletoanyfuturesystem.Thefollowingexamplewilldemonstratethisneedofintegration.AnExampleScenario.Adataanalystfromanonlineretailerwantstobuildaclassiﬁcationmodelontheabandonmentofon-lineshoppingcartsinUSA.ThedetailedinformationofonlineshoppingcartsandcustomersarestoredintwotablescartsanduserseitherinaMPPdatabaseorinaSQL-on-Hadoopsys-tem.TopreparethedatathatshelaterwillfeedintoanSVMalgorithm,theanalystneedstocombinethetwotablesandex-tractthethreeneededfeatures,thecustomer’sage,genderandthedollaramountoftheshoppingcart,aswellastheindicatorﬁeldabandonedforbuildingtheclassiﬁcationmodel.ThisdatapreparationcanbeeasilyexpressedasaSQLqueryshownbelow.SELECTU.age,U.gender,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’SparkprovidesauniﬁedenvironmentthatallowscombiningSQL(SparkSQL)andML(MLlib)together.Thedatahandoverbe-tweenSparkSQLandMLlibisthroughthedistributed(andof-tenin-memory)datastructure,calledResilientDistributedDatasets(RDDs).Again,analystsarelimitedbytheMLalgorithmssup-portedinMLlib.IfananalystwantstouseanexistingalgorithminMahoutorifshehasherownanalyticsalgorithmalreadyimple-mentedinMapReduce,shehastowritethedataintoHDFS,runheranalyticsalgorithm,andstoreresultsbackintoHDFS.Inaddition,inbothSparkandtheIn-SQLanalyticsapproach,oneislockedinaparticularenvironment.Butinreality,enterprisesneedagenericsolutionthatworkswithmanybigSQLandbigMLsystem,andiseasilyextensibletoanyfuturesystem.ThestraightforwardapproachtoconnectbigSQLandMLsys-temisthroughﬁlesonasharedﬁlesystem,suchasHDFSsincemostbigMLsystemsarerunningonHadoop.Inotherwords,thebigSQLsystemoutputsresultsontoHDFSandthenthebigMLsystemreadsthemfromHDFS.Thisapproachobviouslyincursalotofoverhead.Inthispaper,weexplorewhetherwecandobetter672

thanthisbasicapproach.WeidentifytwomajorchallengeswhenconnectingbigSQLandbigMLsystems:(1)datatransformationand(2)datatransfer.DatatransformationdealswiththefactthatSQLsystemsandMLsystemspreferdataindifferentformats.Forexample,mostMLsystemsworkonnumericvaluesonly.Forcategoricalval-ues(e.g.thegenderofacustomer)normallystoredasstringsinSQLsystems,theyhavetoberecoded[5]andsometimesdummycoded[4](detailswillbeprovidedinSection2)beforetheanaly-siscanbeapplied.Today,suchtransformationfunctionalitiesarerarelyprovidedineitherbigSQLorbigMLsystems,whichmeanstheyhavetobeimplementedbyusers.Onecanchoosetoim-plementthesetransformationfunctionsoutsidebothsystems,us-ingherpreferreddatatransformationframework,e.g,MapReduce.But,thisintroducesanotherhop,henceextraoverhead,betweenSQLandMLsystems.AbetterapproachwouldbetoincorporatetransformationsineitherSQLorMLsystems.Inordertoprovideagenericsolution,weleveragetheextensibility(e.gUDFs)ofbigSQLsystemsandproposeanIn-SQLtransformationapproach.Infact,wefoundthatmostcommondatatransformationsbetweenSQLandanalyticscanbeimplementedthroughUDFsbyexploit-ingthemassiveparallelisminsidebigSQLsystems.Datatransfer,ontheotherhand,dealswithhowtheoutputofaSQLsystemispassedovertotheMLsystemforprocessing.WhentheSQLsystemrequiresalonghaultoproducetheoutput,thestraightforwardapproachofhandingoverﬁlesonasharedﬁlesys-temmaybepreferredforfaulttolerancereasons.Buttheextraﬁlesystemwriteandreadcanbeaperformancehurdle.Anotherim-portantissueaboutthestraightforwardapproachisthefactthattheentireoutputofthetransformationstepneedstobeproducedandmaterialized(ablockingoperation)beforeitcanbeingestedintotheMLsystem.Inthispaper,weproposeageneralapproachtoparalleldatastreamingbetweenthesetwosystems.ThisapproachavoidstouchingtheﬁlesystembetweenSQLandMLsystems,andcanbeusedbyanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesHadoopInputFormatforingestingdata(infact,allMLsystemsonHadoopdo)inparallel.Cachingisacommontechniqueusedindistributedsystemstoreducecommunicationcosts.Inthispaper,weexplorecachingintermediateorﬁnalresultsofthetransformationsteptohelpsig-niﬁcantlyreducethecostsofconnectingbigSQLsystemswithbigMLsystems.Mostoftentheintermediateresultsthatarerequiredbytherecodingtransformationscanbeprecomputedandreused.NotethattheneedforintegratingSQLandMLexistedevenbeforetheeraofbigdata.PeoplehavebeenfetchingdatafromdatabasesandfeedingthemtoMLsoftwares,suchasR[19],inthepast.Butsincethedataexchangedbetweenthetwosystemsweresmall,datatransformationandtransferwerenotchallengingprob-lems.Forexample,therearefunctionsprovidedinR(sequentialimplementations)forcommondatatransformations.Datatransfer,ontheotherhand,isusuallydonethroughpassingphysicalﬁlesaround.However,thisoldwayofsequentiallytransformingdataandpassingﬁlesaroundisofteninfeasiblewhenhugevolumesofdataareinvolved.ExploitingthemassiveparallelisminsideandbetweenbigSQLandbigMLsystemsisanecessitytoguaranteeperformance,andthisisexactlywhatwestrivetoachieveinthispaper.Thecontributionsofthispaperareasfollows:•WeﬁrstproposeanIn-SQLapproachtoincorporatecommondatatransformationsforanalyticsinsidebigSQLsystemsthroughUDFs,byfullyexploitingthemassiveparallelismofthebigSQLsystems.•Wethenintroduceageneralapproachtotransferdatabe-tweenbigSQLandbigMLsystemsinaparallelstreamingfashion,withouttouchingtheﬁlesystem.•WefurtherexplorecachingtechniquestoreducethecostsofconnectingbigSQLandbigMLsystems.2.IN-SQLDATATRANSFORMATIONMostbigSQLsystemstodayhaveUDFsupportforextensibil-ity,whichmakesitfeasibletoemployagenericIn-SQLsolutionforcommontransformationsforML.Wewillusethetwomostcom-montransformations,recodingofcategoricalvariablesanddummycoding,asexamplestodemonstratehowthesetransformationscanbeimplementedinparallelfashionsusingUDFs.Somelesscom-montransformations,suchaseffectcodingandorthogonalcod-ing[6],canbeimplementedinsimilarwaysasdummycoding.2.1RecodingofCategoricalVariablesMostdatatransformationbetweenSQLandMLsystemsdealswithcategoricalvariables.ThisisbecausecategoricalvariablesareusuallyrepresentedasstringﬁeldsinSQLsystems,butitisveryhardandinefﬁcienttohandlestringvaluesinanalytics.Asaresult,mostMLsystemspreferhandlingnumericvaluesonly.Oneofthemostcommondatatransformation,therefore,isrecodingofcate-goricalvariables[5].Figure1(b)showsanexamplerecodingofthecategoricalﬁeldsgenderandabandonedinthetableshowninFigure1(a)(ThistablecouldbetheresultofaqueryinaSQLsys-tem).Therecodednumericvaluesareusuallyconsecutiveintegersstartingfrom1.Here,fortheﬁeldgender,thevalue‘F’isre-codedto1and‘M’isrecodedto2.Andfortheﬁeldabandoned,‘Yes’and‘No’arerecodedto1and2respectively.Theaboverecodingisseeminglysimple.Inacentralizedenvi-ronment,itonlyrequiresonepassofdatatoperformtherecodingofallcategoricalﬁelds,assumingthenumberofdistinctvaluesforeachﬁeldisnotlarge.Thiscentralizedalgorithmsimplykeepstrackofarunningmapofcurrentrecodedvaluesforeachcategor-icalﬁeldwhilescanningthroughthedata.Ifavalueofaﬁeldhasbeenseenbefore,itjustusesthemaptorecodeit,otherwiseanewrecodingisaddedtothemap.Inadistributedenvironment,however,atwo-phaseapproachisneeded.Intheﬁrstphase,eachlocalworkercomputesitsdistinctvaluesforeachcategoricalﬁeldinitslocalpartition,andthenex-changesthelocalliststoobtaintheglobaldistinctvalues.Inthesecondpassofthedata,wecanusetheglobaldistinctvaluestoperformtherecoding.ThistwopassalgorithmscanbeeasilyimplementedusingacombinationofUDFsandSQLstatements.Forexample,intheﬁrstpass,wecanimplementaparalleltableUDF,whichinparal-lelreadsitslocalpartitionofthetableandgenerateanothertablewithtwoﬁeldscolNameandcolVal,whichcontainsthelo-caluniquevaluesforeachcategoricalcolumn.Forexample,thereturnedrecordsinalocalpartitionmightbe{(‘gender’,‘F’),(‘gender’,‘M’),(‘abandoned’,‘Yes’)}.TheserecordscanthenbepassedtoaSELECTDISTINCTcolName,colValueFROM...state-menttocomputetheglobaluniquevalues.WecanalsointroduceanothertableUDFtoaddarecodedvalueﬁeldrecodeValtotheresults,generatingrecodemappingrecordslike{(‘gender’,‘F’,1),(‘gender’,‘M’,2),(‘abandoned’,‘Yes’,1),(‘abandoned’,‘No’,2)}.Let’sdenotetheoriginaltableasTandtherecodemaptableasM,thentheﬁnalrecodinginthesecondpasscanbesimplyimplementedbyajoinlikebelow:673

agegenderamountabandoned57'F'108.00'Yes'40'M'57.98'Yes'35'F'265.97'No'(a)originaltableagegenderamountabandoned571108.00140257.981351265.972(b)recodingagefemalemaleamountabandoned5710108.001400157.9813510265.972(c)dummycodingFigure1:RecodinganddummycodingofcategoricalvariablesSELECTT.age,Mg.recodeValasgender,T.mount,Ma.recodeValasabandonedFROMT,MasMg,MasMaWHEREMg.colName=‘gender’ANDT.gender=Mg.colValANDMa.colName=‘abandoned’ANDT.abandoned=Ma.colValAlthoughonecoulduseSQLqueriestocomputethedistinctval-ues,eachcolumnthatneedstoberecodedwouldresultinsuchanSQLquery,andwouldrequireonepassofthedata.UsingUDFs,wecanscanthedataonceandcomputethedistinctvaluesforallrequiredcolumns.Notethatalthoughcategoricalvaluesarerepresentedasstringsintables,somemoderncolumnstoresareabletoexploitdictionarycompressiontophysicallystorestringvaluesasintegers.Utiliz-ingtheseintegersdirectlyastherecodedvaluesforMLsystemsisaninterestingdirection.However,thereareanumberofchal-lenges.Firstofall,theinternalphysicaldictionaryencodingisusuallynotexposedtousers,thusutilizingtheencodedintegersisdifﬁcultorevenimpossibleinageneralapproachusingUDFs.Sec-ond,mostdictionarycompressionforbigSQLsystems,suchasintheParquetformat[18]forImpalaandORCformat[17]forHive,isappliedonlyforalocalpartitionofdata.Therefore,wecan-notdirectlyusethelocalencodedintegersfortheglobalrecoding.Lastly,someMLsystems,suchasSystemML[9],requirethere-codedcategoricalvaluestobeconsecutiveintegersstartingfrom1.Somedictinarycompressionalgorithmsmaynotproduceconsecu-tiveintegers.Moreover,therecodingneedstobedoneonﬁltereddata,andhencewemayhavetorecodethevaluesagain.2.2DummyCodingSomeMLalgorithms,suchasSVMandlogisticregression,re-quiregeneratingbinaryfeaturesfromacategoricalvariablebeforeinvokingthealgorithms.Thistransformationiscalleddummycod-ing[4].Peoplealsocallitone-hotencodingorone-of-Kencoding.Figure1(c)showsanexampledummycodingforthegenderﬁeldintherecodedtableofFigure1(b).Indummycoding,acategori-calvariablewithKdistinctvaluesissplitintoKbinaryvariables.Assumingthecategoricalvariablehasalreadybeenrecoded,thentheoriginalvariablewithvalueiresultsintheithbinaryvariabletobe1,andtheremainingK 1variablestobe0.ToimplementdummycodinginbigSQLsystems,weonlyneedaparalleltableUDFthattakesinthenumberofdistinctvaluesforeachcategoricalvariable(alreadyobtainedduringrecodingphase)andscansthrougheachpartitiontoperformthedummycodinginparallel.3.PARALLELSTREAMINGDATATRANS-FERInthissection,wedescribeourapproachtoparallelstreamingdatatransfer.Therearetwomaingoalsthatwewanttoachievewhendesigningthestreamingdatatransfermethod:(1)generalityoftheapproachonvariousbigSQLandbigMLsystems,and(2)exploitationofthemassiveparallelismbetweenthetwosystems.SQL Worker 1SQL Worker 2MLWorker 2MLWorker 3MLWorker 4MLWorker 1CoordinatorSQL_IP1SQL_IP2ML_IP1ML_IP2ML_IP3ML_IP4ML Job(1) register(2) launch(3) input splits(4) register(5) match          making(6) ML workers to connect(6) SQL worker to connect(7) establish connection(8) data transferFigure2:InformationanddataﬂowinparallelstreamingdatatransferToachievegenerality,weagainexploittheUDFextensibilityinthebigSQLsystemsandextendtheHadoop’sInputFormatinterfaceinthebigMLsystems.Infact,mostexistingbigMLsystems[9,1,20]caninputdatathroughtheInputFormatinterface.So,ausercanchooseanyoftheexistingbigMLsystemtoruntheanalytics.TheonlychangeshehastomakeistouseourspecializedSQLStream-InputFormatinthejobconﬁguration.Toexploitthemassiveparal-lelismbetweentwoindependentdistributedsystems,weintroducealongstandingcoordinatorservicetohelpbridgethetwosystemstoestablishparallelcommunicationchannels.Inaddition,wetrytotakeadvantageofdatalocalityasmuchaspossiblewhenthebigSQLandbigMLsystemssharethesameclusterresources.Figure2showsthedetailedinformationanddataﬂowinourparalleldatastreamingmethod.ThedatatransferstartsfromtheparalleltableUDFintheSQLsystem.ThisUDFtakesinasinputsthetabletobetransferred,theIPandportnumberofthecoordina-tor,aswellasthecommandandargumentstoinvokethedesiredalgorithmofthetargetMLsystem.WhenthisUDFisexecutedineachSQLworker,itﬁrstconnectstothecoordinator,notiﬁesthecoordinatorofitsownworkerid,IPaddress,andthetotalnumberofactiveSQLworkers,andalsopassesalongthecommandandar-gumentsofthetargetMLalgorithm(step1inFigure2).WhenalltheSQLworkershaveregistered,thecoordinatorlaunchestheMLjobwiththeprovidedcommandandarguments(step2).WhentheMLjobtriestospawntaskstoreaddata,itﬁrstcreatesanInputFormatobject.InputFormathasamemberfunctioncalledgetInputSplits(),whichisresponsiblefordividingtheinputdataintosubsets.EachsubsetiscalledanInputSplitandisconsumedbyoneMLworker.Inotherwords,thenumberofInputSplitsequals674

tothenumberofMLworkers.WecustomizedthegetInputSplitsmethodtocontactthecoordinatortodecideontheInputSplits(step3).LetnbethenumberofSQLworkersandmbethenumberofInputSplits.Ifmisnotpre-speciﬁedbytheparticularMLal-gorithm,thenwealwayssetm=n⇥k,wherekisaparametertocontrolthedegreeofparallelismintheMLjob.WedividetheneededmInputSplitsevenlyintongroups,witheachgroupcor-respondingtothedatafromoneSQLworker,asdemonstratedinFigure2.Totakeadvantageofthepotentiallocality,wealsopro-videthelocationsforeachInputSplitwherethedataforthesplitwouldbelocal.Inparticular,foreachInputSplitcorrespondingtotheithSQLworker,weusetheIPaddressofthisSQLworkerasthelocationoftheInputSplit.Withtheprovidedlocations,whentheMLjobspawnstheMLworkerstoreaddata,ittriestocolo-cate,whenpossible,inabesteffortmanner,theMLworkerswiththecorrespondingSQLworkers,sothatdatatransferdoesnotincurnetworkI/O.AftertheMLworkersarespawned,theyregisterthemselvesbacktothecoordinator(step4inFigure2).Then,thecoordinatormatchestheIPofeachSQLworkerwiththeIPsofitscorrespond-ingMLworkers(step5),andsubsequentlysendsthematchedin-formationbacktotheworkersonbothsides(step6).Now,thejobofthecoordinatorisdone.Finally,theSQLworkersandtheMLworkersestablishtheTCPsocketconnections(step7),beforetheactualdatatransferstarts(step8).EachSQLworkersendsdatatoitsMLworkersinaroundrobinfashion.InsideaSQLworker,thereisasend-bufferassociatedwitheachtargetMLworkerforbufferingthesentdata.Similarly,eachMLworkerhasareceive-buffertobufferthereceiveddatafromitscorrespondingSQLworker.Thesizesofthebuffersarecontrollablesystemparameters.IfanMLworkerisslowtoingestitsdataandthecorrespondingsendbufferbecomesfull,wecanspillitontothelocaldiskstosyn-cronizetheproducerandconsumers.4.QUERYREWRITERFORDATATRANS-FORMATIONANDTRANSFERAlthoughwehaveprovidedvariousUDFsforthecommondatatransformationandparalleldatastreaming,itisstilladifﬁculttaskfortheuserstocomposethequeriestoinvoketheseUDFs.Foreaseofuse,weprovideaqueryrewriteroutsidetheSQLsystems.AuserprovidesthisqueryrewriterwithherSQLquery(suchastheexamplequeryinSection1),thetransformationsneededontheresultsofthequery,andifparalleldatastreamingisneeded,thenecessaryinformationforcallingthetargetMLalgorithm.Then,thequeryrewriterwillextendthegivenqueryintoanotherquerywithUDFs,andotheroperationstoperformtherequiredtransfor-mationsandthedatatransfer.5.CACHINGWhensimilardatatransformationsarerepeatedbetweenabigSQLsystemandabigMLsystem,wecanexploitcachingtoreducethecost.Weidentiﬁedtwocasesofcaching,assumingthereisnodataupdate:(1)cachingfullytransformeddata,and(2)cachingintermediaterecodemaps.5.1CachingFullyTransformedDataInthiscase,wecachethefullytransformeddatainthebigSQLsystembystoringitasamaterializedvieworanactualHDFStable.IflateranotherMLalgorithmneedstoberunonthedataresultedfromthesameSQLqueries,wecandirectlyreusethestoreddata,thussavingthecostoftheSQLqueriesandthedatatransformationalltogether.Thissituationhappens,forexample,whenananalystwantstorunanumberofclassiﬁcationalgorithms,suchasSVM,logisticregression,naiveBayesanddecisiontrees,tocomparethequalityofdifferentclassiﬁersonaparticulardataset.Besidestheabovecase,thefullytransformeddatacanalsobereusedifasubsetofthetransformeddataisneeded.Let’staketheexamplescenarioinSection1asaninstance.Ifwecachethefullytransformedresultofthisquery,andlaterweencounteranotherqueryshownbelowasthedatapreparationforanMLalgorithm,wecanfullyutilizethecacheddata,withoutrunningthequeryandtransformingthequeryresult.SELECTU.age,C.amount,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’ANDU.gender=‘F’Thereasonthatwecanfullyutilizethecachedresultisthatthisnewquerysatisfythefollowingconditions:1.Itcontainsthesametablesinthefromclause,andthesamejoinconditionsandpredicatesinthewhereclause,asthequeryforthecacheddata.2.Theprojectedﬁeldsareasubsetoftheprojectedﬁeldsinthequeryforthecacheddata.3.Additionalconjunctivepredicatesareonlyontheprojectedﬁeldsinthequeryforthecacheddata.Infact,ifwedenotetheresultofqueryinSection1asT,thenewquerycanbeexpressedasaselectionandprojectionqueryontableTasbelow.SELECTage,amount,abandonedFROMTWHEREgender=‘F’5.2CachingRecodeMapsTheapplicabilityofcachingthefullytransformeddataislimited.Forthefollowingquery,thecacheddatacannotbeusedatall,asitdoesnotsatisfytheconditionsdescribedintheprevioussubsec-tion.SELECTU.age,U.gender,C.amount,C.nItems,C.abandonedFROMcartsC,usersUWHEREC.userid=U.useridANDU.country=‘USA’ANDC.year=2014However,wenoticethatthisquerysatisﬁesadifferentsetofcon-ditions,whichallowittobeneﬁtfromcachingtheintermediatere-codemap(seeSection2.1)generatedduringthetransformationofthepreviousquery:1.Itcontainsthesametablesinthefromclause,andthesamejoinconditionsinthewhereclause,asthepreviousquery.2.Itcontainspredicatesonthesamesetofﬁeldsasthepred-icatesonthepreviousqueries,andeachpredicateiseitherthesameasorlogicallystrongerthan(e.g.a<18islog-icallystrongerthana20)thecorrespondingpredicateinthepreviousquery.3.Theprojectedcategoricalﬁeldsareasubsetoftheprojectedcategoricalﬁeldsinthepreviousquery.4.Additionalpredicatesareconjunctive.Byreusingtherecodemapforthenewquery,weavoidoneofthetwopassesforthenewqueryduringrecoding.Ascanbeseenabove,thewaywedetectwhetheraquerycanbeneﬁtfromthecacheddataissimilartoutilizingmaterialized675

viewsinqueryoptimization[10,16]andweextendthequeryrewriterintroducedinSection4toutilizethesetechniques.Whentherewritergetsaquery,itﬁrstchecktoseeifanyoftheexistingmaterializedviewscanbeusedandrewritesthequeryaccordingly.6.DISCUSSIONONFAULTTOLERANCEFaulttoleranceisaveryhardproblemforintegratingbigSQLandbigMLsystems.Firstofall,ifeithertheunderlyingbigSQLsystemorthebigMLsystemlacksfaulttolerancesupport,thewholeintegrationpipelinehastoberestartedfromscratchincaseofafailure.Infact,mostMPPdatabasesdonotsupportmid-queryfailurerecovery.MostSQL-on-Hadoopengines,likeImpala[14]alsosacriﬁcemid-queryrecory.AsforbigMLsystems,MLlibistheonlyoneknowntosupportmid-queryfaulttolerance.Evenbothunderlyingsystemsprovidefaulttoleranceguarantees,westillneedtheconnectionbetweenthetwotoberesilienttofailures.IfdatatransferbetweenthetwosystemsisthroughﬁlesonHDFS,orifthecachedresultsfromthebigSQLsystemcanbedirectlyreusedbythebigMLsystem,thefaulttolerancecanbeguaranteed.Ontheotherhand,ifparalleldatastreaminginSection3isused,morecarehastobetaken.First,weneedthecoordinatorservicetoberesilientitself.ThiscanbeachievedbyusingZookeeper[2].Inaddition,whenthedatatransferbetweenaSQLworkerandanMLworkerfails,duetothefailureofeitherendpointsortheconnection,weneedtonotifythebigSQLsystemtorestarttheSQLworkerandsimultaneouslytellthebigMLsystemtorestartalltheMLworkerscorrespondingtotheSQLworker,sothatthedatatransfercanberesumed.Analternativetoourstreamingdatatransferisutilizinganin-memoryﬁlesystemlikeTachyon[15],whichwouldprovidefault-toleranceguarantees.However,TachyonisstillverySparkandRDDoriented,whereasinthisworkwethrivetobeprovideagenericsolutionthatworksforallbigSQLandbigMLsystems,whethertheyruntheirownnativeprocesses,oruseMapReduceorSpark.7.PRELIMINARYEXPERIMENTSInthissection,wereporttheresultsofourpreliminaryexperi-mentalstudybyusingIBMBigSQL3.0asthebigSQLsystemandSparkMLlibasthebigMLsystem.Weused5serversforallourexperiments.Eachhad2xIntelXeonCPUs@2.20GHz,with6xphysicalcoreseach(12phys-icalcoresintotal),12xSATAdisks,1x10GbitEthernetcard,andatotalof96GBRAM.Eachnoderuns64-bitUbuntuLinux12.04,withaLinuxKernelversion3.2.0-23.OneoftheserverswasusedastheHDFSNameNode,MapReduceJobTracker,SparkmasteraswellasBigSQLheadnode.Theremaining4servershosttheHDFSDataNodes,MapReduceTaskTrackers(9mappersperserver),Sparkworkers(6workersoneachserver)andBigSQLworkers(1workerwithmulti-threadingoneachserver).HDFSreplicationwassetto3.Thesend-bufferandreceive-buffersizeswerebothsetto4KBfortheparalleldatastreaming.WegeneratedsyntheticdatasetsinthecontextoftheexamplequeryscenariodescribedinSection1.Inparticular,wecreateda56GBcartstablewith1billionrecordsand361MBuserstablewith10millionrecords.BothtableswerestoredintextformatonHDFS.WerantheSQLqueryshownintheexampleinSec-tion1,transformedtheresult(recodingthecategoricalvariablesanddummycoding),andpassedtheresulttoMLlibforrunningtheSVMWithSGDalgorithm.Inourexperiments,wereportthetimeforprocessingtheSQLquery,transformingtheresult,transferringthetransformeddatatotheMLjob,andreadingtheinputdatain020040060080010001200naïveinsqlinsql+streamtime (sec)input for mltrsfmprepprepl+trsfmprep+trsfm+inputFigure3:ComparisonofthreeapproachesofconnectingbigSQLandbigMLsystems0100200300400500600no cachecache recode mapscache transformedresulttime (sec)Figure4:EffectofcachingtheMLjob.WedonotreporttheruntimeoftheMLalgorithm,becauseitishighlydependentontheactualdataandthealgorithm(e.ghowmanyiterationstoconverge).Forexample,readingthetransformeddatafromHDFSandrunningtheSVMWithSGDfor10iterationstook774seconds.IntheMLjob,weﬁrstreadtheinputdata,whetheritisfromHDFSorfromparalleldatatransfer,intoaSparkin-memoryRDD.AfterthatwepasstheRDDtotheMLlibSVMWithSGDalgorithm.ThemeasuredtimeofreadinginputintheMLjobisthetimefromthestartofthejobtillthein-memoryRDDisconstructed.Figure3comparesthreeapproachesofconnectingSQLwithMLforbigdata.Inthenaive(denotedasnaiveinFigure3)approach,weuseBigSQLtoexecutetheSQLqueryandmaterializethere-sultonHDFS(prep).Then,weuseathirdtool,Jaql[3],toperformthedatatransformation,sinceJaqlhasbuilt-infunctionsforrecod-ingofcategoricalvariablesanddummycoding(trsfm).Again,theresultiswrittentoHDFS.Finally,SparkMLlibreadsthedataformHDFS(inputforml)andperformstheMLjob.Thebreakdownofexecutiontimesfordifferentstagesisshownintheﬁgure.Thesec-ondapproach,denotedasinsqlintheﬁgure,employstheIn-SQLtransformationmethod(weimplementedtherecodingofcategor-icalvariablesanddummycodinginBigSQLusingUDFs).Inthisapproach,thetransformationiscombinedtogetherwiththeSQLquery,thustheoperationscanbeperformedinapipeline(prep+trsfm).Inthethirdapproach,denotedasinsql+stream,we676

usetheparallelstreamingdatatransferinadditiontotheIn-SQLtransformation.Now,alloperationscanbepipelinedtogether(prep+trsfm+input).Inaddition,asweusein-memoryRDDstostoretheinputdatainSparkfortheMLjob,thetransformeddatafromBigSQLisneverwrittentoHDFS.AscanbeseenfromFigure3,theIn-SQLtransformationsigniﬁcantlyimprovestheperformanceofthewholeworkﬂow:1.7xspeedupagainstthenaiveapproach.Theinsql+streamapproachfurtherimprovestheperformancebyanother43seconds.Thisisasigniﬁcantreductionindatainges-tioncostinSparkMLlib(readingfromHDFStakes46seconds),althoughitisnotanimpressivenumberintheoverallworkﬂow.Inthisparticularcase,thetransformeddataitselfwasnotverylarge(5.6GB),andhencereadingitfromHDFSwasnotdominatingtheoveralldatapipeline.Ifalargerdatasetwereused,theperformancewouldbemoredramatic.WealsowanttonotethatiftheMLalgo-rithmtakesalongtimetoproducethedesiredmodel,thenwhetherusingHDFSorstreamingfordatatransfermakeslittledifferenceintheoverallperformance.Inaddition,HDFScanalsoprovidead-ditionalfaulttolerance,andcouldbepreferableiftheMLsystemrequiresreadingtheinputmultipletimes.WenowinvestigatetheeffectofcachingintermediateorﬁnalresultsofdatatransformationinconnectingbigSQLandbigMLsystems.WecomparetheIn-SQLtransformationapproachwiththeapproachwherewecacheintermediaterecodemaps,andtheapproachwherewecachethefullytransformedresultinFigure4.Inallthreeapproaches,weemploytheparallelstreamingtrans-fertopassdatatotheMLjob.Evidently,ifcachingcanbeused,thenthefullycachedresultwillprovidethebestperformance(2.2xspeedupagainstnocache),followedbythecachedintermediatere-codemaps(1.5xspeedupagainstnocache).But,keepinmindthattheapplicabilitiesofthetwocachingapproachesarelimited,withcachingthefullytransformedresultmostlimited.Forbothcachingmethods,thereusabilitydependsonthecomplexityoftheprepara-tionSQLqueryandhowfast,orifatall,thedatagetsupdated.8.CONCLUSIONInthispaper,westudiedtheproblemofintegratingSQLandMLprocessingforbigdata,providingageneralpurposesolutionthatwillworkwithanybigSQLsystemthatsupportsUDFsandanybigMLsystemthatusesInputFormatstoingestitsinput.Wefocusedontwoproblems:datatransformationanddatatransferbetweenthetwosystems.Inparticular,weproposedanIn-SQLapproachtoin-corporatecommondatatransformationsforMLalgorithmsinsidebigSQLsystemsthroughUDFs.Inadditiontothebasicapproachofusingﬁlesasthemediafordatatransferbetweensystems,weproposedageneralstreamingdatatransferapproachbyintroduc-ingUDFsinbigSQLsystemsandimplementingaspecialHadoopInputFormat.Furthermore,weexploredtheuseofcachinginter-mediateorﬁnalresultsofthetransformationstoreducethecostsofconnectingSQLandMLsystems.OurpreliminaryexperimentalresultsshowthattheIn-SQLapproachhasgreatpotentialinreduc-ingthedatatransformationcost,andcachingisveryeffectiveinimprovingtheperformanceofthewholeanalyticsworkﬂow.Theparallelstreamingdatatransferapproachhasitsprosandcons,de-pendingonthetargetMLsystem.OurpreliminaryexperimentsshowitresultsinsigniﬁcantreductionindataingestioncostsforMlLib,whichusesin-memoryRDDs.Asfuturework,weplantoinvestigateusingamessagepassingsystemlikeKafka[8]topassthedatabetweenSQLandMLwork-ers.Kafkawouldguranteeatleastoneread,incaseoffailures.KafkacouldalsobethesystemtocachethedatawhentheMLworkersarenotfastenoughtoconsumethedata.Wealsoplantobuildagenericdataexchangeinfrastructurethatutilizesmemoryandstreamingbetweendifferentframeworksrunningonbigdataplatforms,suchasstreaming,batch,SQL,ML,etc.9.REFERENCES[1]ApacheMahout.https://mahout.apache.org.[2]ApacheZooKeeper.http://zookeeper.apache.org.[3]K.S.Beyer,V.Ercegovac,R.Gemulla,A.Balmin,M.Y.Eltabakh,C.-C.Kanne,F.Özcan,andE.J.Shekita.Jaql:Ascriptinglanguageforlargescalesemistructureddataanalysis.PVLDB,4(12):1272–1283,2011.[4]D.ConwayandJ.M.White.MachineLearningforHackers.O’ReillyMedia,22012.[5]CookbookforR:Recodingdata.http://www.cookbook-r.com/Manipulating_data/Recoding_data.[6]Dummy,effect,&orthogonalcoding.http://luna.cas.usf.edu/~mbrannic/files/regression/anova1.html.[7]X.Feng,A.Kumar,B.Recht,andC.Ré.Towardsauniﬁedarchitectureforin-rdbmsanalytics.InSIGMOD,pages325–336,2012.[8]R.C.Fernandez,P.Pietzuch,J.Koshy,J.Kreps,D.Lin,N.Narkhede,J.Rao,C.Riccomini,andG.Wang.Liquid:UnifyingNearlineandOfﬂineBigDataIntegration.InCIDR,2015.[9]A.Ghoting,R.Krishnamurthy,E.Pednault,B.Reinwald,V.Sindhwani,S.Tatikonda,Y.Tian,andS.Vaithyanathan.SystemML:Declarativemachinelearningonmapreduce.InICDE,pages231–242,2011.[10]A.Y.Halevy.Answeringqueriesusingviews:Asurvey.TheVLDBJournal,10(4):270–294,2001.[11]J.M.Hellerstein,C.Ré,F.Schoppmann,D.Z.Wang,E.Fratkin,A.Gorajek,K.S.Ng,C.Welton,X.Feng,K.Li,andA.Kumar.Themadlibanalyticslibrary:Ormadskills,thesql.PVLDB,5(12):1700–1711,2012.[12]Hivemall.https://github.com/myui/hivemall.[13]IBMBigSQL3.0:Sql-on-hadoopwithoutcompromise.http://public.dhe.ibm.com/common/ssi/ecm/en/sww14019usen/SWW14019USEN.PDF.[14]Impala.http://github.com/cloudera/impala.[15]H.Li,A.Ghodsi,M.Zaharia,S.Shenker,andI.Stoica.Tachyon:Reliable,MemorySpeedStorageforClusterComputingFrameworks.InSOCC,2014.[16]I.MamiandZ.Bellahsene.Asurveyofviewselectionmethods.SIGMODRec.,41(1):20–29,2012.[17]TheORCformat.http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.0.0.2/ds_Hive/orcfile.html.[18]TheParquetformat.http://parquet.io.[19]R.http://http://www.r-project.org/.[20]SparkMLlib.https://spark.apache.org/mllib.[21]A.Thusoo,J.S.Sarma,N.Jain,Z.Shao,P.Chakka,S.Anthony,H.Liu,P.Wyckoff,andR.Murthy.Hive:Awarehousingsolutionoveramap-reduceframework.PVLDB,2(2):1626–1629,2009.[22]How-to:UseMADlibpre-builtanalyticfunctionswithimpala.http://blog.cloudera.com/blog/2013/10/how-to-use-madlib-pre-built-analytic-functions-with-impala.